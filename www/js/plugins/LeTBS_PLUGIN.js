/*
#=============================================================================
# Lecode's Tactical Battle System
# LeTBS.js
# By Lecode
# Version 0.77.2C
#-----------------------------------------------------------------------------
# TERMS OF USE
#-----------------------------------------------------------------------------
# https://github.com/LecodeMV/leTBS/blob/master/LICENSE.txt
#-----------------------------------------------------------------------------*/
var Imported=Imported||{};Imported.LeTBS=true;var Lecode=Lecode||{};Lecode.S_TBS={};var parameters=PluginManager.parameters("LeTBS");Lecode.S_TBS.actorColorCell=String(parameters["Actor Color Cell"]||"#0FC50B");Lecode.S_TBS.enemyColorCell=String(parameters["Enemy Color Cell"]||"#C50B1B");Lecode.S_TBS.positioningCellOpacity=Number(parameters["Cell Opacity Color"]||175);Lecode.S_TBS.placedBattlerAnim=Number(parameters["Placed Animation"]||124);
Lecode.S_TBS.instantiateAll=String(parameters["Instantiate All"]||"true")==="true";Lecode.S_TBS.displayStartMessages=String(parameters["Display Start Messages"]||"false")==="true";Lecode.S_TBS.explorationInput=String(parameters["Exploration Input"]||"shift");Lecode.S_TBS.opacityInput=String(parameters["Opacity Input"]||"control");Lecode.S_TBS.minInputOpacity=Number(parameters["Min Input Opacity"]||0);Lecode.S_TBS.inputOpacityDecreaseSteps=Number(parameters["Opacity Steps"]||10);
Lecode.S_TBS.battleStartSpriteDelay=Number(parameters["Battle Start Sprite Delay"]||50);Lecode.S_TBS.destinationDuration=Number(parameters["Destination Duration"]||60);Lecode.S_TBS.moveEntityEvents=String(parameters["Move Entity Events"]||"false")==="true";Lecode.S_TBS.turnOrderFairDistribution=String(parameters["Turn Order Fair Distribution ?"]||"true")==="true";Lecode.S_TBS.turnOrderSortMethod=String(parameters["Turn Order Sort Method"]||"b._battler.agi - a._battler.agi");
Lecode.S_TBS.scopeCellWidth=Number(parameters["Scope Cell Width"]||46);Lecode.S_TBS.scopeCellHeight=Number(parameters["Scope Cell Height"]||46);Lecode.S_TBS.obstacleRegionId=Number(parameters["Obstacle Region Id"]||250);Lecode.S_TBS.freeObstacleRegionId=Number(parameters["Free Obstacle Region Id"]||249);Lecode.S_TBS.defaultMoveScope=String(parameters["Default Move Scope"]||"circle(_mp_)");Lecode.S_TBS.defaultMovePoints=Number(parameters["Default Move Points"]||3);
Lecode.S_TBS.moveColorCell=String(parameters["Move Scope Color"]||"#0A5C85");Lecode.S_TBS.moveCellOpacity=Number(parameters["Move Scope Opacity"]||175);Lecode.S_TBS.moveInvalidCellOpacity=Number(parameters["Invalid Move Scope Opacity"]||60);Lecode.S_TBS.moveSelectedCellOpacity=Number(parameters["Selected Move Scope Opacity"]||255);Lecode.S_TBS.selectedMoveColorCell=String(parameters["Selected Move Scope Color"]||"#81F7F3");
Lecode.S_TBS.enableDirectionalFacing=String(parameters["Enable Directional Facing"]||"true")==="true";Lecode.S_TBS.defaultAttackAnimation=Number(parameters["Default Attack Animation"]||1);Lecode.S_TBS.defaultAttackSequence=String(parameters["Default Attack Sequence"]||"atk");Lecode.S_TBS.defaultAttackScope=String(parameters["Default Attack Scope"]||"circle(1)");Lecode.S_TBS.defaultAttackAoE=String(parameters["Default Attack Ao E"]||"circle(0)");
Lecode.S_TBS.attackColorCell=String(parameters["Attack Scope Color"]||"#E20F2B");Lecode.S_TBS.attackCellOpacity=Number(parameters["Attack Scope Opacity"]||175);Lecode.S_TBS.attackInvalidCellOpacity=Number(parameters["Invalid Attack Scope Opacity"]||60);Lecode.S_TBS.selectedAttackColorCell=String(parameters["Selected Attack Scope Color"]||"#FB3B54");Lecode.S_TBS.attackSelectedCellOpacity=Number(parameters["Selected Attack Scope Opacity"]||255);
Lecode.S_TBS.defaultSkillSequence=String(parameters["Default Skill Sequence"]||"skill");Lecode.S_TBS.defaultSkillScope=String(parameters["Default Skill Scope"]||"circle(3)");Lecode.S_TBS.defaultSkillAoE=String(parameters["Default Skill Ao E"]||"circle(0)");Lecode.S_TBS.skillColorCell=String(parameters["Skill Scope Color"]||"#E20F2B");Lecode.S_TBS.skillCellOpacity=Number(parameters["Skill Scope Opacity"]||175);Lecode.S_TBS.skillInvalidCellOpacity=Number(parameters["Invalid Skill Scope Opacity"]||60);
Lecode.S_TBS.selectedSkillColorCell=String(parameters["Selected Skill Scope Color"]||"#FB3B54");Lecode.S_TBS.skillSelectedCellOpacity=Number(parameters["Selected Skill Scope Opacity"]||255);Lecode.S_TBS.defaultItemSequence=String(parameters["Default Item Sequence"]||"item");Lecode.S_TBS.defaultItemScope=String(parameters["Default Item Scope"]||"circle(3)");Lecode.S_TBS.defaultItemAoE=String(parameters["Default Item Ao E"]||"circle(0)");
Lecode.S_TBS.ItemColorCell=String(parameters["Item Scope Color"]||"#DF01D7");Lecode.S_TBS.ItemCellOpacity=Number(parameters["Item Scope Opacity"]||175);Lecode.S_TBS.ItemInvalidCellOpacity=Number(parameters["Invalid Item Scope Opacity"]||60);Lecode.S_TBS.selectedItemColorCell=String(parameters["Selected Item Scope Color"]||"#F969F4");Lecode.S_TBS.ItemSelectedCellOpacity=Number(parameters["Selected Item Scope Opacity"]||255);
Lecode.S_TBS.backDirectionalDamageEffects=Number(parameters["Back Directional Damage Effects"]||15);Lecode.S_TBS.sideDirectionalDamageEffects=Number(parameters["Side Directional Damage Effects"]||0);Lecode.S_TBS.frontDirectionalDamageEffects=Number(parameters["Face Directional Damage Effects"]||-10);Lecode.S_TBS.defaultCollisionFormula=String(parameters["Default Collision Formula"]||"b.mhp * 0.05 * (distance-covered)");
Lecode.S_TBS.collissionDamageChainRate=Number(parameters["Collission Damage Chain Rate"]||.3);Lecode.S_TBS.battlersMoveSpeed=Number(parameters["Battlers Move Speed"]||4);Lecode.S_TBS.battlersFrameDelay=Number(parameters["Battlers Frame Delay"]||10);Lecode.S_TBS.defaultAiPattern=String(parameters["Default Ai Pattern"]||"melee_fighter");Lecode.S_TBS.aiWaitTime=Number(parameters["Ai Wait Time"]||5);Lecode.S_TBS.showScopes=String(parameters["Show Scopes"]||"false")==="true";
Lecode.S_TBS.escapeCooldown=Number(parameters["Escape Cooldown"]||2);Lecode.S_TBS.supportCooldown=Number(parameters["Support Cooldown"]||1);Lecode.S_TBS.aiProcessDelay=Number(parameters["Ai Process Delay"]||5);Lecode.S_TBS.oneTimeMove=String(parameters["One Time Move"]||"false")==="true";Lecode.S_TBS.oneTimeOffense=String(parameters["One Time Offense"]||"true")==="true";Lecode.S_TBS.autoPass=String(parameters["Auto Pass"]||"true")==="true";
Lecode.S_TBS.escapeSound=String(parameters["Escape Sound"]||"Buzzer2");Lecode.S_TBS.endOfBattleWait=Number(parameters["End Of Battle Wait"]||60);Lecode.S_TBS.collapseAnimation=Number(parameters["Collapse Animation"]||136);Lecode.S_TBS._qmapBackGround=true;Lecode.S_TBS._nameTextureBattle="";Lecode.S_TBS._fileBattleBack="";
class Spriteset_BattleTBS extends Spriteset_Map{constructor(){super()}initialize(){super.initialize();this._pictures=[];this.createTBSLayer();this.createBattleLayers()}createLowerLayer(){this._baseSprite=new Sprite;this._baseSprite.setFrame(0,0,this.width,this.height);this.addChild(this._baseSprite);this._hudField=new Sprite;this._hudField.z=10;this.addChild(this._hudField);this._tilemap=new SimpleTilemap;this._baseSprite.addChild(this._tilemap);this.createCharacters();if(!Lecode.S_TBS._qmapBackGround){this.battleback=
new PIXI.Sprite;this._tilemap.addChild(this.battleback);this.upQmap=true}else this.upQmap=false;if(!this._tilemap._requestSort)this._tilemap.requestSort()}update(){super.update();if(!Lecode.S_TBS._qmapBackGround)if(!this.updateeee&&$gameResources[Lecode.S_TBS._nameTextureBattle]&&$gameResources[Lecode.S_TBS._nameTextureBattle].textures!==undefined){this.battleback.texture=$gameResources[Lecode.S_TBS._nameTextureBattle].textures[Lecode.S_TBS._fileBattleBack];this.updateeee=true}}createCharacters(){this._characterSprites=
[];for(const event of $gameMap.events())if(event){const meta=event.event().meta||{};if(meta.hasOwnProperty("TBS Event")){const tmp=new Sprite_Character(event);this._characterSprites.push(tmp);this._tilemap.addChild(tmp)}}if(!Lecode.S_TBS._qmapBackGround)if(!$gameResources[Lecode.S_TBS._nameTextureBattle])$gameLoader.add(Lecode.S_TBS._nameTextureBattle,DataManager.choiceMetaData())}getEventSprite(event){for(const sprite of this._characterSprites)if(sprite&&sprite._character===event.event())return sprite;
return null}createTBSLayer(){this._tbsLayer=new Sprite;this._tbsLayer.x=this._tilemap.x;this._tbsLayer.y=this._tilemap.y;this._tbsLayer.width=this._tilemap.width;this._tbsLayer.height=this._tilemap.height;this._baseSprite.addChild(this._tbsLayer)}createBattleLayers(){this._scopesLayer=new TBSScopeLayer;this._scopesLayer.z=1;this._tilemap.addChild(this._scopesLayer);this._scopesLayer.createSelectionLayer();this._tbsLayer.addChild(this._scopesLayer._selectionLayer);this._battlersLayer=new Sprite;this._battlersLayer.z=
3;this._tilemap.addChild(this._battlersLayer);this._animationsLayer=new TBSMapAnimation;this._animationsLayer.z=4;this._tbsLayer.addChild(this._animationsLayer);this._movableInfoLayer=new Sprite;this._movableInfoLayer.z=6;this.addChild(this._movableInfoLayer);this._movableWindowsLayer=new Sprite;this._movableWindowsLayer.z=6;this.addChild(this._movableWindowsLayer);this._fixedInfoLayer=new Sprite;this._fixedInfoLayer.z=6;this.addChild(this._fixedInfoLayer)}setMapFilter(filter,includeParallax){this._tilemap.filters=
[filter];if(includeParallax)this._parallax.filters=[filter];const arr=[this._scopesLayer,this._battlersLayer];for(const layer of arr)layer.filters=[]}setEntitiesFilter(filter){const arr=[this._battlersLayer];for(const layer of arr)layer.filters=[filter]}setMapRenderable(bool,includeParallax){this._tilemap.lowerZLayer.renderable=bool;this._tilemap.upperZLayer.renderable=bool;if(includeParallax)this._parallax.renderable=bool}setMapAlpha(alpha,includeParallax){this._tilemap.lowerZLayer.alpha=alpha;this._tilemap.upperZLayer.alpha=
alpha;if(includeParallax)this._parallax.alpha=alpha}setMapTone(tone,includeParallax){var filter=new ToneFilter;filter.adjustTone(tone[0],tone[1],tone[2]);filter.adjustSaturation(-tone[3]);this.setMapFilter(filter,includeParallax)}setEntitiesTone(tone){var filter=new ToneFilter;filter.adjustTone(tone[0],tone[1],tone[2]);filter.adjustSaturation(-tone[3]);this.setEntitiesFilter(filter)}showPicture(picId,filename,xStr,yStr){const bitmap=ImageManager.loadPicture(filename,0);bitmap.addLoadListener(this.onPictureBitmapLoaded.bind(this,
bitmap,picId,xStr,yStr))}onPictureBitmapLoaded(bitmap,picId,xStr,yStr){const pic=new Sprite(bitmap);pic.x=this.getPicDestinationX(pic,xStr);pic.y=this.getPicDestinationY(pic,yStr);this._pictures[picId]=pic;this._fixedInfoLayer.addChild(pic)}freePicture(picId){var pic=this._pictures[picId];this._fixedInfoLayer.removeChild(pic);this._pictures[picId]=null}getPicDestinationX(pic,xStr){switch(xStr){case "offscreen-left":return-pic.width;case "middle":return Graphics.width/2-pic.width/2}return Number(xStr)}getPicDestinationY(pic,
yStr){switch(yStr){case "offscreen-top":return-pic.height;case "middle":return Graphics.height/2-pic.height/2}return Number(yStr)}movePicture(picId,xStr,yStr,time){const picture=this.getPicture(picId);const x=Math.round(this.getPicDestinationX(picture,xStr));const y=Math.round(this.getPicDestinationY(picture,yStr));LeUtilities.tweenProperty(picture,"x",x,time).start();LeUtilities.tweenProperty(picture,"y",y,time).start();return{x:x,y:y}}updateTilemap(){const arr=[this._tbsLayer,this._movableInfoLayer,
this._movableWindowsLayer,this._battlersLayer,this._scopesLayer];for(const layer of arr)if(layer){layer.x=-$gameMap.displayX()*$gameMap.tileWidth();layer.y=-$gameMap.displayY()*$gameMap.tileHeight()}}updateEntitiesZ(){}compareEntitiesOrder(a,b){}getPicture(picId){return this._pictures[picId]}}function TBSMapAnimation(){this.initialize.apply(this,arguments)}TBSMapAnimation.prototype=Object.create(Sprite_Base.prototype);TBSMapAnimation.prototype.constructor=TBSMapAnimation;
TBSMapAnimation.prototype.initialize=function(battler){Sprite_Base.prototype.initialize.call(this);this._cell=null;this._target=null};TBSMapAnimation.prototype.update=function(){Sprite_Base.prototype.update.call(this)};TBSMapAnimation.prototype.newAnimation=function(id,mirror,delay,cell,target){this._cell=cell;this._target=target;this.startAnimation($dataAnimations[id],mirror,delay)};
TBSMapAnimation.prototype.startAnimation=function(animation,mirror,delay){var sprite=new Sprite_TBSAnimation;sprite.setup(this._target||this._effectTarget,animation,mirror,delay,this._cell);this.addChild(sprite);this._animationSprites.push(sprite)};TBSMapAnimation.prototype.isAnimationPlaying=function(){return this._animationSprites.filter(function(sprite){return!sprite._isLoopAnim}).length>0};function Sprite_TBSAnimation(){this.initialize.apply(this,arguments)}Sprite_TBSAnimation.prototype=Object.create(Sprite_Animation.prototype);
Sprite_TBSAnimation.prototype.constructor=Sprite_TBSAnimation;Sprite_TBSAnimation.prototype.initialize=function(){Sprite_Animation.prototype.initialize.call(this);this._cell=null};Sprite_TBSAnimation.prototype.update=function(){Sprite_Animation.prototype.update.call(this)};
Sprite_TBSAnimation.prototype.setup=function(target,animation,mirror,delay,cell){this._cell=cell;this._target=target;this._animation=animation;this._mirror=mirror;this._delay=delay;if(this._animation){this.remove();this.setupRate();this.setupDuration();this.loadBitmaps();this.createSprites()}};
Sprite_TBSAnimation.prototype.updatePosition=function(){if(this._animation.position===3){this.x=this.parent.width/2;this.y=this.parent.height/2}else{var w=$gameMap.tileWidth();var h=$gameMap.tileHeight();this.x=this._cell.x*$gameMap.tileWidth()+w/2;this.y=this._cell.y*$gameMap.tileHeight()+h/2;if(this._animation.position===2)this.y+=h/2;else if(this._animation.position===0)this.y-=h/2}};function Sprite_TBSEntityAnimation(){this.initialize.apply(this,arguments)}
Sprite_TBSEntityAnimation.prototype=Object.create(Sprite_TBSAnimation.prototype);Sprite_TBSEntityAnimation.prototype.constructor=Sprite_TBSEntityAnimation;Sprite_TBSEntityAnimation.prototype.initialize=function(){Sprite_TBSAnimation.prototype.initialize.call(this)};Sprite_TBSEntityAnimation.prototype.setup=function(target,animation,mirror,delay,cell){Sprite_TBSAnimation.prototype.setup.call(this,target,animation,mirror,delay,cell);this.updatePosition()};
Sprite_TBSEntityAnimation.prototype.updatePosition=function(){if(this._animation.position===3){this.x=Graphics.width/2;this.y=Graphics.height/2}else{var w=this._target.width;var h=this._target.height;this.x=this._target.x;this.y=this._target.y-h/2;if(this._animation.position===2)this.y+=h/2;else if(this._animation.position===0)this.y-=h/2}};function InputHandlerTBS(){throw new Error("This is a static class");}
InputHandlerTBS.setup=function(){this._active=true;this._lastSelectedCell=null;this._windowsBlocking=[];this._oldMousePos={}};InputHandlerTBS.isActive=function(){return this._active};InputHandlerTBS.lastSelectedCell=function(){return this._lastSelectedCell||BattleManagerTBS._activeCell};InputHandlerTBS.setActive=function(active){this._active=active};InputHandlerTBS.addWindowBlockingTouch=function(window){this._windowsBlocking.push(window);return this};
InputHandlerTBS.setOnTouchCallback=function(callback){this._onTouchCallback=callback;return this};InputHandlerTBS.setOnTouchCancelCallback=function(callback){this._onTouchCancelCallback=callback;return this};InputHandlerTBS.setOnUpCallback=function(callback){this._onUpCallback=callback;return this};InputHandlerTBS.setOnRightCallback=function(callback){this._onRightCallback=callback;return this};InputHandlerTBS.setOnDownCallback=function(callback){this._onDownCallback=callback;return this};
InputHandlerTBS.setOnLeftCallback=function(callback){this._onLeftCallback=callback;return this};InputHandlerTBS.setOnOkCallback=function(callback){this._onOkCallback=callback;return this};InputHandlerTBS.setOnCancelCallback=function(callback){this._onCancelCallback=callback;return this};InputHandlerTBS.setOnMoveCallback=function(callback){this._onMoveCallback=callback;return this};
InputHandlerTBS.update=function(){if(!this.isActive())return;if(BattleManagerTBS.isWaiting())return;if(Input.isPressed(Lecode.S_TBS.explorationInput)&&!BattleManagerTBS.isExploring()){BattleManagerTBS.startMapExploration();return}if(!Input.isPressed(Lecode.S_TBS.explorationInput)&&BattleManagerTBS.isExploring()){BattleManagerTBS.endMapExploration();return}if(BattleManagerTBS.isExploring()){this.updateExplorationInput();return}if(Input.isPressed(Lecode.S_TBS.opacityInput))BattleManagerTBS.setInputOpacity();
else BattleManagerTBS._opacityInputed=false;if(TouchInput.isTriggered()){var x=$gameMap.canvasToMapX(TouchInput.x);var y=$gameMap.canvasToMapY(TouchInput.y);var cell=BattleManagerTBS.getCellAt(x,y);this.processCallback("Touch",cell);this._lastSelectedCell=cell;if(!this.isTouchBlocked()){$gameTemp.setDestination(x,y);BattleManagerTBS.resetDestinationCount()}return}if(TouchInput.isCancelled()){this.processCallback("TouchCancel");return}if(Input.isTriggered("right"))this.processCallback("Right");if(Input.isTriggered("down"))this.processCallback("Down");
if(Input.isTriggered("left"))this.processCallback("Left");if(Input.isTriggered("up"))this.processCallback("Up");if(Input.isTriggered("ok"))this.processCallback("Ok");if(Input.isTriggered("cancel"))this.processCallback("Cancel");if(TouchInput._leTBSMoveData.x!=this._oldMousePos.x||TouchInput._leTBSMoveData.y!=this._oldMousePos.y){this.processCallback("Move");this._oldMousePos.x=TouchInput._leTBSMoveData.x;this._oldMousePos.y=TouchInput._leTBSMoveData.y}};
InputHandlerTBS.processCallback=function(key,arg){var func=eval("this._on"+key+"Callback");if(func)func(arg)};
InputHandlerTBS.updateExplorationInput=function(){if(Input.isPressed("right"))BattleManagerTBS.scrollRight(1);if(Input.isPressed("down"))BattleManagerTBS.scrollDown(1);if(Input.isPressed("up"))BattleManagerTBS.scrollUp(1);if(Input.isPressed("left"))BattleManagerTBS.scrollLeft(1);var x=$gameMap.canvasToMapX(TouchInput.x);var y=$gameMap.canvasToMapY(TouchInput.y);var cell=BattleManagerTBS.getCellAt(x,y);BattleManagerTBS.centerCell(cell)};
InputHandlerTBS.isTouchBlocked=function(){var x=TouchInput.x;var y=TouchInput.y;for(let i=0;i<this._windowsBlocking.length;i++){var w=this._windowsBlocking[i];if(!w.visible||w.opacity===0||w.openness===0)continue;if(x>=w.x&&x<=w.x+w.width)if(y>=w.y&&y<=w.y+w.height)return true}return false};function BattleManagerTBS(){throw new Error("This is a static class");}BattleManagerTBS.setup=function(){this.initMembers()};
BattleManagerTBS.initMembers=function(){this._phase="init";this._subPhase="";this._startCells=[];this._positioningEntityToSwap=null;this._currentPositioningEntity=null;this._groundCells={};this._cursor=null;this._activeCell=null;this._spriteset=null;this._hiddenEntities=[];this._battlerEntities=[];this._neutralEntities=[];this._tbsEvents=[];this._entityEventsCooldown={};this._eventsCooldown={};this._lastTriggeredEventEntity=null;this._lastTriggeredEventBattler=null;this._startupFlags={};this._entitiesEvents=
{};this._explorationIniCell=null;this._exploring=false;this._inputOpacity=0;this._opacityInputed=false;this._waitTime=0;this._turnOrder=[];this._activeIndex=0;this._activeAction=null;this._moveScope=null;this._movePath=null;this._actionScope=null;this._destinationCount=0};BattleManagerTBS.cursor=function(){return this._cursor};BattleManagerTBS.hiddenEntities=function(){return this._hiddenEntities};BattleManagerTBS.allEntities=function(){return this._battlerEntities.concat(this._neutralEntities)};
BattleManagerTBS.allEntitiesWithHidden=function(){return this.allEntities().concat(this.hiddenEntities())};BattleManagerTBS.allPlayableEntities=function(){return this._battlerEntities};BattleManagerTBS.moveScope=function(){return this._moveScope};BattleManagerTBS.movePath=function(){return this._movePath};BattleManagerTBS.actionScope=function(){return this._actionScope};BattleManagerTBS.isExploring=function(){return this._exploring};BattleManagerTBS.activeAction=function(){return this._activeAction};
BattleManagerTBS.getLayer=function(id){return eval(`this._spriteset._${id}Layer`)};BattleManagerTBS.wait=function(time){this._waitTime+=time};BattleManagerTBS.isWaiting=function(){return this._waitTime>0};BattleManagerTBS.startBattle=function(){this.prepare();this.processPositioningPhase()};BattleManagerTBS.prepare=function(){this.createStartCells();this.createGroundCells();this.createTBSObjects();this.createTBSEvents();this.createNeutralEntities();this.prepareEventsCooldown();this.prepareEntityFlags()};
BattleManagerTBS.createTBSObjects=function(){this.createDirectionSelector();this.createCursor();this.createBattleStartSprite();this.createTurnOrderVisual();this.createProjectilesManager();this.createAiManager();this._easystar=new EasyStar.js};BattleManagerTBS.createDirectionSelector=function(){var layer=this.getLayer("movableInfo");this._directionSelector=new TBSDirectionSelector(layer)};BattleManagerTBS.createCursor=function(){this._cursor=new SpriteCursorTBS;this._spriteset._tbsLayer.addChild(this._cursor)};
BattleManagerTBS.createBattleStartSprite=function(){this._startSprite=new UHPD_Sprite($gameResources["HUD"].textures["Battle_Start.png"]);this._startSprite.visible=false;this.getLayer("fixedInfo").addChild(this._startSprite)};BattleManagerTBS.createProjectilesManager=function(){var layer=this.getLayer("animations");this._projectilesManager=new TBSProjectilesManager(layer)};BattleManagerTBS.createAiManager=function(){this._aiManager=new TBSAiManager};
BattleManagerTBS.createTurnOrderVisual=function(){var layer=this.getLayer("fixedInfo");this._turnOrderVisual=new TBSTurnOrderVisual(layer)};
BattleManagerTBS.createStartCells=function(){this.getLayer("scopes").clear();this._startCells=[];$gameMap.events().forEach(function(eventObj){var x=eventObj.event().x;var y=eventObj.event().y;var note=eventObj.event().note;var data={};if(note.match(/<Enemy Cell>/i))data.type="enemy";else if(note.match(/<Enemy Cell\s?:\s?(.+)>/i)){data.type="enemy";data.fixed=Number(RegExp.$1)}else if(note.match(/<Actor Cell>/i))data.type="actor";else if(note.match(/<Actor Cell\s?:\s?(.+)>/i)){data.type="actor";data.fixed=
Number(RegExp.$1)}if(data.type){let cell=new TBSCell(x,y);cell._event=eventObj.event();cell._positioningData=data;this.createPositioningCell(data.type,x,y,cell);this._startCells.push(cell);if(!this._entitiesEvents[x])this._entitiesEvents[x]={};this._entitiesEvents[x][y]=eventObj}}.bind(this))};
BattleManagerTBS.createGroundCells=function(){for(let i=0;i<$gameMap.width();i++){this._groundCells[i]={};for(let j=0;j<$gameMap.height();j++){let cell=new TBSCell(i,j);cell._regionId=$gameMap.regionId(i,j);this._groundCells[i][j]=cell}}};BattleManagerTBS.createTBSEvents=function(){$gameMap.events().forEach(function(event){if(event.event().note.match(/<TBS Event>/i))this._tbsEvents.push(new TBSEvent(event))}.bind(this))};
BattleManagerTBS.getTBSEventAt=function(x,y){for(let i=0;i<this._tbsEvents.length;i++){var event=this._tbsEvents[i];if(event.x()===x&&event.y()===y)return event}return null};BattleManagerTBS.onEventPageSetup=function(event){for(let i=0;i<this._tbsEvents.length;i++){var tbsEvent=this._tbsEvents[i];if(tbsEvent._event===event)tbsEvent.onEventPageSetup()}};
BattleManagerTBS.onEventForceMoveRoute=function(event){for(let i=0;i<this._tbsEvents.length;i++){var tbsEvent=this._tbsEvents[i];if(tbsEvent._event===event)tbsEvent.onEventForceMoveRoute()}};
BattleManagerTBS.createNeutralEntities=function(){var layer=this.getLayer("battlers");$gameMap.events().forEach(function(event){if(event.event().note.match(/<TBS Neutral (.+)>/i)){var enemyId=Number(RegExp.$1);var tbsEvent=new TBSEvent(event);this._tbsEvents.push(tbsEvent);var entity=new TBSNeutralEntity(layer,tbsEvent,enemyId);entity.setCell(this.getCellAt(event.x,event.y));this._neutralEntities.push(entity)}}.bind(this))};
BattleManagerTBS.prepareEventsCooldown=function(){for(let i=0;i<$dataCommonEvents.length;i++){var comEv=$dataCommonEvents[i];if(comEv){var id=comEv.id;this._entityEventsCooldown[id]=0}}for(let j=0;j<this._tbsEvents.length;j++){var ev=this._tbsEvents[j];this._eventsCooldown[ev._event.id]=0}};
BattleManagerTBS.prepareEntityFlags=function(){$gameMap.events().forEach(function(event){if(event&&!event._erased)for(let i=0;i<event.list().length;i++){var command=event.list()[i];if(command&&command.code==108){var comments=command.parameters;for(let j=0;j<comments.length;j++){var comment=comments[j];if(comment.match(/<LeTBS>\s?Flag\s?:\s?(.+)/i)){this._startupFlags[event.x]={};this._startupFlags[event.x][event.y]=RegExp.$1}}}}}.bind(this))};
BattleManagerTBS.update=function(){this.updateWait();this.updateWindowsInputOpacity();this.updateTBSObjects();this.updatePhase();this.updateBattlers();this.updateTBSEvents();this.updateDestination()};BattleManagerTBS.updateDestination=function(){this._destinationCount++;if(this._destinationCount>=Lecode.S_TBS.destinationDuration){this._destinationCount=0;$gameTemp.clearDestination()}};BattleManagerTBS.resetDestinationCount=function(){this._destinationCount=0};
BattleManagerTBS.waitMessagesForCommandWindow=function(){if($gameMessage.isBusy()&&!this._windowToResume){this.wait(1);var window=LeUtilities.getScene()._windowCommand;if(window.active){window.close();window.deactivate();this._windowToResume=window}}else if(this._windowToResume&&this._phase!=="battle_end"){this._windowToResume.open();this._windowToResume.activate();this._windowToResume=null}};
BattleManagerTBS.waitEventsForCommandWindow=function(){if($gameTroop.isEventRunning()&&!this._windowToResume){var window=LeUtilities.getScene()._windowCommand;if(window.active){window.close();window.deactivate();this._windowToResume=window}}else if(this._windowToResume&&this._phase!=="battle_end"){this._windowToResume.open();this._windowToResume.activate();this._windowToResume=null}};BattleManagerTBS.updateWait=function(){if(this.isWaiting())this._waitTime--};
BattleManagerTBS.updateWindowsInputOpacity=function(){if(this._inputOpacity===0)return;const windows=LeUtilities.getScene().getDismissibleWindows();windows.forEach(function(window){window.opacity=255-this._inputOpacity;window.backOpacity=255-this._inputOpacity;window.contentsOpacity=255-this._inputOpacity}.bind(this));if(!this._opacityInputed){const steps=Lecode.S_TBS.inputOpacityDecreaseSteps;const max=255-Lecode.S_TBS.minInputOpacity;this._inputOpacity-=steps;this._inputOpacity=this._inputOpacity.clamp(0,
max)}};BattleManagerTBS.updateTBSObjects=function(){this.updateCursor();this._turnOrderVisual.update();this._projectilesManager.update()};BattleManagerTBS.updateCursor=function(){if(!this._activeCell||!this.cursor())return;var x=this._activeCell.x;var y=this._activeCell.y;this.cursor().cellX=x;this.cursor().cellY=y;x*=$gameMap.tileWidth();y*=$gameMap.tileHeight();this.cursor().x=x;this.cursor().y=y;this.cursor().update()};
BattleManagerTBS.startMapExploration=function(){this._exploring=true;this._explorationIniCell=this._activeCell};BattleManagerTBS.endMapExploration=function(){this._exploring=false;this.centerCell(this._explorationIniCell)};BattleManagerTBS.setInputOpacity=function(){this._opacityInputed=true;var steps=Lecode.S_TBS.inputOpacityDecreaseSteps;var max=255-Lecode.S_TBS.minInputOpacity;this._inputOpacity+=steps;this._inputOpacity=this._inputOpacity.clamp(0,max)};
BattleManagerTBS.updatePhase=function(){InputHandlerTBS.setActive(!$gameMessage.isBusy());if($gameMessage.isBusy())return;switch(this._phase){case "positioning":this.updatePositioningPhase();break;case "battle_beginning":this.updateBeginningPhase();break;case "battle_processing":this.updateBattleProcessing();break;case "battle_stopping":this.updateBattleStopping();break;case "battle_end":this.updateBattleEnd();break}};BattleManagerTBS.updateBattlers=function(){this.allEntities().forEach(function(entity){entity.update()}.bind(this))};
BattleManagerTBS.updateTBSEvents=function(){for(let i=0;i<this._tbsEvents.length;i++)this._tbsEvents[i].update()};BattleManagerTBS.createPositioningCell=function(type,x,y,cell){var opacity=Lecode.S_TBS.positioningCellOpacity;var color=type==="actor"?Lecode.S_TBS.actorColorCell:Lecode.S_TBS.enemyColorCell;this.getLayer("scopes").drawCell(x,y,opacity,color);cell._type=type};
BattleManagerTBS.processPositioningPhase=function(){this._phase="positioning";this._subPhase="";this._actorsToPositionate=[];this._enemiesToPositionate=[];$gameTroop.members().forEach(function(mem){this._enemiesToPositionate.push(mem)}.bind(this));this.allyStartCells().forEach(function(cell){if(cell._positioningData.type==="actor"){var id=cell._positioningData.fixed;if(id)this._actorsToPositionate.push($gameActors.actor(id))}}.bind(this));this.processActorsPrePositioning();this.processEnemyPositioning();
InputHandlerTBS.setOnTouchCallback(this.positioningPhaseOnTouchInput.bind(this)).setOnTouchCancelCallback(this.positioningPhaseOnInputCancel.bind(this)).setOnOkCallback(this.positioningPhaseOnInputOk.bind(this)).setOnCancelCallback(this.positioningPhaseOnInputCancel.bind(this)).setOnRightCallback(this.positioningPhaseOnInputRight.bind(this)).setOnLeftCallback(this.positioningPhaseOnInputLeft.bind(this)).setOnDownCallback(this.positioningPhaseOnInputDown.bind(this)).setOnUpCallback(this.positioningPhaseOnInputUp.bind(this)).setOnMoveCallback(this.positioningPhaseOnMouseMove.bind(this))};
BattleManagerTBS.positioningPhaseOnMouseMove=function(){if(this._subPhase==="directionSelector_input"){var x=$gameMap.canvasToMapX(TouchInput._leTBSMoveData.x);var y=$gameMap.canvasToMapY(TouchInput._leTBSMoveData.y);var cell=BattleManagerTBS.getCellAt(x,y);if(cell){var entity=this._directionSelector._battlerEntity;var oldDir=entity.getDir();entity.lookAt(cell);if(oldDir!=entity.getDir())this._directionSelector.setDir(entity.getDir())}}};
BattleManagerTBS.positioningPhaseOnTouchInput=function(selectedCell){switch(this._subPhase){case "input":this.selectStartCellByTouch(selectedCell);break;case "directionSelector_input":this.setDirectionSelectionDirByTouch(selectedCell);break}this.checkStartWindowInput()};
BattleManagerTBS.checkStartWindowInput=function(){var window=LeUtilities.getScene()._windowPositioningConfirm;if(window.visible&&window.isMouseInsideFrame())LeUtilities.getScene().onPositioningExitUp();window=LeUtilities.getScene()._windowPositioning;if(window.visible&&!window.active&&window.isMouseInsideFrame())LeUtilities.getScene().onPositioningConfirmCursorDown()};
BattleManagerTBS.positioningPhaseOnInputOk=function(){switch(this._subPhase){case "input":this.positioningPhaseOk();break;case "directionSelector_input":this.directionSelectorValidatePositioning();break}};BattleManagerTBS.positioningPhaseOnInputCancel=function(){switch(this._subPhase){case "input":this.positioningPhaseCancel();break;case "directionSelector_input":this.directionSelectorCancelPositioning();break}};
BattleManagerTBS.positioningPhaseOnInputLeft=function(){switch(this._subPhase){case "input":this.selectStartCellByDir("left");break;case "directionSelector_input":this.setDirectionSelectorLeft();break}};BattleManagerTBS.positioningPhaseOnInputRight=function(){switch(this._subPhase){case "input":this.selectStartCellByDir("right");break;case "directionSelector_input":this.setDirectionSelectorRight();break}};
BattleManagerTBS.positioningPhaseOnInputDown=function(){switch(this._subPhase){case "input":this.selectStartCellByDir("down");break;case "directionSelector_input":this.setDirectionSelectorDown();break}};BattleManagerTBS.positioningPhaseOnInputUp=function(){switch(this._subPhase){case "input":this.selectStartCellByDir("up");break;case "directionSelector_input":this.setDirectionSelectorUp();break}};
BattleManagerTBS.updatePositioningPhase=function(){if(this._subPhase==="troop")if(!this.isAnimationPlaying())if(this._enemiesToPositionate.length===0)this.waitForPositioningInput();else this.placeNextEnemy()};
BattleManagerTBS.addEntity=function(battler,cell,anim,isNeutral){var entity=new TBSEntity(battler,this.getLayer("battlers"));entity.setCell(cell);entity.newAnimation(anim,false,0);entity._isNeutral=isNeutral;if(isNeutral)this._neutralEntities.push(entity);else this._battlerEntities.push(entity);return entity};
BattleManagerTBS.processActorsPrePositioning=function(){if(this._actorsToPositionate.length===0)return;do{var actor=this._actorsToPositionate.shift();var cell=this.allyStartCells().filter(function(cell){return cell._positioningData.fixed===actor.actorId()})[0];var entity=new TBSEntity(actor,this.getLayer("battlers"));entity.setCell(cell);this._battlerEntities.push(entity);LeUtilities.getScene().onActorPrePositioning(actor)}while(this._actorsToPositionate.length>0)};
BattleManagerTBS.processEnemyPositioning=function(){this._subPhase="troop";if(Lecode.S_TBS.instantiateAll)while(this._enemiesToPositionate.length>0)this.placeNextEnemy();else this.placeNextEnemy()};
BattleManagerTBS.placeNextEnemy=function(){var enemy=this._enemiesToPositionate.shift();var cells=this.enemyStartCells().filter(function(c){return c._positioningData.fixed===enemy.index()+1&&this.isCellFree(c)}.bind(this));if(cells.length===0)cells=this.enemyStartCells().filter(function(c){return this.isCellFree(c)}.bind(this));var cell=LeUtilities.getRandomValueInArray(cells);if(cell){cell.select();this.centerActiveCell();this.updateCursor();var entity=new TBSEntity(enemy,this.getLayer("battlers"));
entity.setCell(cell);entity.newAnimation(Lecode.S_TBS.placedBattlerAnim,false,0);this._battlerEntities.push(entity)}};BattleManagerTBS.waitForPositioningInput=function(){this._subPhase="wait";this.selectNextStartCell();this.cursor().hide();LeUtilities.getScene().showPositioningWindow();LeUtilities.getScene().activatePositioningWindow()};
BattleManagerTBS.processActorPositioning=function(actor){this.cursor().show();InputHandlerTBS.setActive(true);this._subPhase="input";var currentEntity=this.getEntityByActorId(actor.actorId());if(currentEntity){this._currentPositioningEntity=currentEntity;this.positioningSelect(currentEntity.getCell());currentEntity.startFlash([255,255,255,255],20,true);return}var entity=new TBSEntity(actor,this.getLayer("battlers"));var cell=this.getNextActorPositioningCell();entity.startFlash([255,255,255,255],20,
true);this._currentPositioningEntity=entity;this.positioningSelect(cell);entity.newAnimation(Lecode.S_TBS.placedBattlerAnim,false,0)};
BattleManagerTBS.positioningSelect=function(cell){cell.select();this.centerCell(cell);this.updateCursor();if(cell._positioningData&&cell._positioningData.fixed)return;if(this._currentPositioningEntity){var actorId=this._currentPositioningEntity.battler().actorId();if(this._positioningEntityToSwap)this._positioningEntityToSwap.stopFLash();var entity=cell.getEntity();if(entity&&entity.battler().actorId()!=actorId){this._positioningEntityToSwap=entity;this._currentPositioningEntity.stopFLash();this._currentPositioningEntity.startFlash([255,
255,255,255],20,true);entity.startFlash([255,255,255,255],20,true)}else{this._currentPositioningEntity.setCell(cell);this.updateEnemiesDirectionForPositioning();this._positioningEntityToSwap=null}}};
BattleManagerTBS.selectStartCellByDir=function(dir){var cell=this._activeCell;var cells=this.allyStartCells().filter(function(c){return c!=cell});var found=null;switch(dir){case "up":cells=cells.filter(function(c){return c.y<cell.y});found=LeUtilities.closestByDistance(cell,cells);break;case "down":cells=cells.filter(function(c){return c.y>cell.y});found=LeUtilities.closestByDistance(cell,cells);break;case "right":cells=cells.filter(function(c){return c.x>cell.x});found=LeUtilities.closestByDistance(cell,
cells);break;case "left":cells=cells.filter(function(c){return c.x<cell.x});found=LeUtilities.closestByDistance(cell,cells);break}if(found&&found!=cell){this.positioningSelect(found);SoundManager.playCursor()}};BattleManagerTBS.selectStartCellByTouch=function(cell){if(cell){const scope=this.allyStartCells();const currentCell=this._activeCell;if(this.isCellInScope(cell,scope))if(currentCell.isSame(cell))this.positioningPhaseOk();else this.positioningSelect(cell);else this.positioningPhaseOk()}};
BattleManagerTBS.getNextActorPositioningCell=function(){if(this.allyEntities().length>=this.allyStartCells().length)return this.allyStartCells()[0];var currentIndex=this.allyStartCells().indexOf(this._activeCell);if(currentIndex===-1)return this.allyStartCells()[0];var cell=this._activeCell;var currentEntity=cell.getEntity();if(!currentEntity)return cell;var index=currentIndex;do{if(index===this.allyStartCells().length-1)index=0;else index++;cell=this.allyStartCells()[index];currentEntity=cell.getEntity()}while(currentEntity);
return cell};BattleManagerTBS.selectNextStartCell=function(){var cell=this.getNextActorPositioningCell();this.positioningSelect(cell);SoundManager.playCursor()};
BattleManagerTBS.positioningPhaseOk=function(){SoundManager.playOk();var cell=this._activeCell;var entity=this._positioningEntityToSwap;if(entity){entity.setCell(this._currentPositioningEntity.getCell());entity.stopFLash();this._currentPositioningEntity.setCell(cell);this._positioningEntityToSwap=null;return}var actorId=this._currentPositioningEntity.battler().actorId();var currentEntity=this.getEntityByActorId(actorId);if(!currentEntity)this._battlerEntities.push(this._currentPositioningEntity);
cell=this._currentPositioningEntity.getCell();if(!Lecode.S_TBS.enableDirectionalFacing)this.directionSelectorValidatePositioning();else this.callDirectionSelector(this._currentPositioningEntity,cell);LeUtilities.getScene()._windowPositioningConfirm.setEnabled(true);LeUtilities.getScene()._windowPositioningConfirm.refresh()};
BattleManagerTBS.positioningPhaseCancel=function(){var entity=this._currentPositioningEntity;if(!entity){SoundManager.playBuzzer();return}this._subPhase="wait";InputHandlerTBS.setActive(false);var actor=LeUtilities.getScene()._windowPositioning.actor();LeUtilities.getScene()._windowPositioning.enableSelection();LeUtilities.getScene()._windowPositioning.refresh();LeUtilities.getScene().activatePositioningWindow();this.cursor().hide();SoundManager.playCancel();this.destroyEntity(entity);this._currentPositioningEntity=
null;if(this.allyEntities().length===0){LeUtilities.getScene()._windowPositioningConfirm.setEnabled(false);LeUtilities.getScene()._windowPositioningConfirm.refresh()}};BattleManagerTBS.updateEnemiesDirectionForPositioning=function(){var actors=this.allyEntities().concat([this._currentPositioningEntity]);this.enemyEntities().forEach(function(ent){ent.lookClosestBattler(actors)}.bind(this))};
BattleManagerTBS.callDirectionSelector=function(battler,cell){this._subPhase="directionSelector_input";this._directionSelector.set(cell,battler)};BattleManagerTBS.setDirectionSelectorUp=function(){this._directionSelector.setDir(8)};BattleManagerTBS.setDirectionSelectorDown=function(){this._directionSelector.setDir(2)};BattleManagerTBS.setDirectionSelectorLeft=function(){this._directionSelector.setDir(4)};BattleManagerTBS.setDirectionSelectorRight=function(){this._directionSelector.setDir(6)};
BattleManagerTBS.directionSelectorValidatePositioning=function(){SoundManager.playOk();Input.clear();this._currentPositioningEntity.stopFLash();this._directionSelector.hide();this._subPhase="";this._currentPositioningEntity=null;LeUtilities.getScene().activatePositioningWindow();this.cursor().hide();var nbrFixedActors=this.allyStartCells().filter(function(cell){return cell._positioningData.fixed!=null}).length;if(this.allyEntities().length===nbrFixedActors+$gameParty.members().length||this.allyEntities().length===
this.allyStartCells().length){LeUtilities.getScene()._windowPositioning.deactivate();LeUtilities.getScene()._windowPositioning.deselect();this.positioningPhaseEnd()}};BattleManagerTBS.setDirectionSelectionDirByTouch=function(selectedCell){var entity=this._directionSelector._battlerEntity;entity.lookAt(selectedCell);this.directionSelectorValidatePositioning()};BattleManagerTBS.directionSelectorCancelPositioning=function(){this._directionSelector.hide();this._subPhase="input";this.positioningPhaseCancel()};
BattleManagerTBS.positioningPhaseEnd=function(){this._subPhase="confirm";Input.clear();LeUtilities.getScene().showConfirmationWindow()};BattleManagerTBS.resumePositioningPhase=function(){LeUtilities.getScene().hideConfirmationWindow();LeUtilities.getScene().activatePositioningWindow();LeUtilities.getScene()._windowPositioningConfirm.deselect();this._subPhase=""};BattleManagerTBS.onConfirmationWindowOK=function(){switch(this._phase){case "positioning":this.battleBeginning();break}};
BattleManagerTBS.onConfirmationWindowCancel=function(){switch(this._phase){case "positioning":this.resumePositioningPhase();break}};BattleManagerTBS.battleBeginning=function(){this._phase="battle_beginning";LeUtilities.getScene().onTBSBattleBeginning();this._startSprite.visible=true;this._startSprite.x=Graphics.width/2-this._startSprite.width/2;this._startSprite.y=Graphics.height/2-this._startSprite.height/2;this._startSprite.opacity=0;this._subPhase="in"};
BattleManagerTBS.updateBeginningPhase=function(){var opa;if(this._subPhase==="in"){opa=this._startSprite.opacity;this._startSprite.opacity=(opa+6).clamp(0,255);if(this._startSprite.opacity===255){this._subPhase="wait";this.wait(Lecode.S_TBS.battleStartSpriteDelay)}}else if(this._subPhase==="wait"){if(!this.isWaiting())this._subPhase="out"}else if(this._subPhase==="out"){opa=this._startSprite.opacity;this._startSprite.opacity=(opa-6).clamp(0,255);if(this._startSprite.opacity===0)this.beginningPhaseEnd()}};
BattleManagerTBS.beginningPhaseEnd=function(){this._startSprite.visible=false;this.cursor().show();this.processBattle()};BattleManagerTBS.processBattle=function(){InputHandlerTBS.setActive(true);this._phase="battle_processing";this._subPhase="";BattleManager.startBattle();this.allEntities().forEach(function(entity){entity.onBattleStart()}.bind(this));this.hidePositioningCells();this.determineTurnOrder();this.setEntitiesFlag();this.executeEventsWhen("battle_start");this.startTurn();InputHandlerTBS.setOnTouchCallback(this.battlePhaseOnTouchInput.bind(this)).setOnTouchCancelCallback(this.battlePhaseOnInputCancel.bind(this)).setOnOkCallback(this.battlePhaseOnInputOk.bind(this)).setOnCancelCallback(this.battlePhaseOnInputCancel.bind(this)).setOnUpCallback(this.battlePhaseOnInputUp.bind(this)).setOnRightCallback(this.battlePhaseOnInputRight.bind(this)).setOnDownCallback(this.battlePhaseOnInputDown.bind(this)).setOnLeftCallback(this.battlePhaseOnInputLeft.bind(this))};
BattleManagerTBS.battlePhaseOnTouchInput=function(selectedCell){switch(this._subPhase){case "move":this.touchMoveSelection(selectedCell);break;case "directionSelector_input":this.passByTouch(selectedCell);break;case "attack":case "skill":case "item":this.touchActionSelection(selectedCell);break}};
BattleManagerTBS.battlePhaseOnInputOk=function(){switch(this._subPhase){case "move":this.validateMoveSelection();break;case "directionSelector_input":this.validatePass();break;case "attack":case "skill":case "item":this.validateActionSelection();break}};BattleManagerTBS.battlePhaseOnInputCancel=function(){switch(this._subPhase){case "move":this.onMoveCancel();break;case "directionSelector_input":this.cancelPass();break;case "attack":case "skill":case "item":this.onActionCancel();break}};
BattleManagerTBS.battlePhaseOnInputLeft=function(){switch(this._subPhase){case "directionSelector_input":this.setDirectionSelectorLeft();break;case "move":case "attack":case "skill":case "item":case "examine":this.moveCursor("left");break}};BattleManagerTBS.battlePhaseOnInputRight=function(){switch(this._subPhase){case "directionSelector_input":this.setDirectionSelectorRight();break;case "move":case "attack":case "skill":case "item":case "examine":this.moveCursor("right");break}};
BattleManagerTBS.battlePhaseOnInputDown=function(){switch(this._subPhase){case "directionSelector_input":this.setDirectionSelectorDown();break;case "move":case "attack":case "skill":case "item":case "examine":this.moveCursor("down");break}};BattleManagerTBS.battlePhaseOnInputUp=function(){switch(this._subPhase){case "directionSelector_input":this.setDirectionSelectorUp();break;case "move":case "attack":case "skill":case "item":case "examine":this.moveCursor("up");break}};
BattleManagerTBS.updateBattleProcessing=function(){this.updateSequences();if(this.isWaiting())return;if(this.turnOrderShouldWait())return;this.checkSubPhase()};
BattleManagerTBS.checkSubPhase=function(){switch(this._subPhase){case "":LeUtilities.getScene().showCommandWindow();break;case "moving":if(!this.activeEntity().isMoving())this.onActiveEntityMoveEnd();break;case "action_start":this.executeAction();break;case "obj_invokation":if(!this.anySequenceRunning())this.onActionEnd();break;case "ai":this._aiManager.update();break;case "turn_end":this.nextTurn();break;case "turn_resuming":this.resumeTurn();break;case "pass":this.processCommandPass();break;default:break}};
BattleManagerTBS.hidePositioningCells=function(){this.getLayer("scopes").clear()};BattleManagerTBS.determineTurnOrder=function(){if(Lecode.S_TBS.turnOrderFairDistribution)this.determineTurnOrderFair();else this.determineTurnOrderSimple()};
BattleManagerTBS.determineTurnOrderSimple=function(){var array=[];this._turnOrder=[];this._activeIndex=0;this.allPlayableEntities().forEach(function(entity){array.push(entity)});array=array.sort(function(a,b){return eval(Lecode.S_TBS.turnOrderSortMethod)});this._turnOrder=array;this._turnOrderVisual.set(this._turnOrder)};
BattleManagerTBS.determineTurnOrderFair=function(){var array=[];var actors=[];var enemies=[];this._turnOrder=[];this._activeIndex=0;this.allyEntities().forEach(function(entity){actors.push(entity)});actors=actors.sort(function(a,b){return eval(Lecode.S_TBS.turnOrderSortMethod)});this.enemyEntities().forEach(function(entity){enemies.push(entity)});enemies=enemies.sort(function(a,b){return eval(Lecode.S_TBS.turnOrderSortMethod)});var partySet=actors[0]._battler.agi>=enemies[0]._battler.agi?actors:enemies;
var partyLeft=actors[0]._battler.agi>=enemies[0]._battler.agi?enemies:actors;while(partySet.length>0)array.push(partySet.shift());var index=0;while(partyLeft.length>0){array.splice(index+1,0,partyLeft.shift());index+=2}this._turnOrder=array;this._turnOrderVisual.set(this._turnOrder)};
BattleManagerTBS.setEntitiesFlag=function(){this.allEntities().forEach(function(entity){var cell=entity.getCell();if(this._startupFlags[cell.x])entity._flag=this._startupFlags[cell.x][cell.y];if(this._entitiesEvents[cell.x])entity._event=this._entitiesEvents[cell.x][cell.y]}.bind(this))};BattleManagerTBS.activeEntity=function(){return this._turnOrder[this._activeIndex]};BattleManagerTBS.activeBattler=function(){return this.activeEntity()._battler};
BattleManagerTBS.startTurn=function(){this._actionScope={};this.getLayer("scopes").clear();this.getLayer("scopes").clearSelection();this._subPhase="";var entity=this.activeEntity();entity.onTurnStart();var battler=this.activeBattler();this.newAction(battler,true);LeUtilities.getScene().showStatusWindow(entity,true);const cell=entity.getCell();this.setCursorCell(cell);this.cursor().show();if(entity.playableByAI())this.startAiTurn(entity);this.executeEventsWhen("turn_start");if(this.activeBattler().isActor())this.executeEventsWhen("actor_turn_start");
else this.executeEventsWhen("enemy_turn_start");this.executeEntityEventsWhen("entity_turn_start",entity)};BattleManagerTBS.resumeTurn=function(){this._subPhase="";var entity=this.activeEntity();LeUtilities.getScene().showStatusWindow(entity,true);var cell=entity.getCell();this.setCursorCell(cell);this.cursor().show()};
BattleManagerTBS.startAiTurn=function(entity,options){this._subPhase="ai";if(entity.battler().isDead()||!entity.battler().canMove())this.requestCommandPass();else this._aiManager.process(entity,options);if(!Lecode.S_TBS.showScopes)this.cursor().hide()};BattleManagerTBS.updateSequences=function(){this.allEntities().forEach(function(entity){entity._sequenceManager.update()})};BattleManagerTBS.anySequenceRunning=function(){return this.allEntities().some(function(entity){return entity._sequenceManager.isRunning()})};
BattleManagerTBS.newAction=function(battler,isFloating){this._activeAction=isFloating?new TBS_FloatingAction(battler,false):new Game_Action(battler,false)};BattleManagerTBS.moveCursor=function(dir){var x=this._activeCell.x,y=this._activeCell.y;switch(dir){case "up":y--;break;case "down":y++;break;case "right":x++;break;case "left":x--;break}var cell=this.getCellAt(x,y);this.setCursorCell(cell);SoundManager.playCursor()};
BattleManagerTBS.setCursorCell=function(cell){if(!cell||!cell.select)return;cell.select();this.centerCell(cell);this.updateCursor();this.updateScopeSelection();this.updateTargetStatus()};BattleManagerTBS.updateScopeSelection=function(){if(this.cursorOnMoveScope())this.updateMoveSelection();else if(this.cursorOnActionScope())this.updateActionSelection();else{this.clearActionSelection();this.clearMoveSelection()}};
BattleManagerTBS.updateTargetStatus=function(){var cell=this._activeCell;var entity=cell.getEntity();var scene=LeUtilities.getScene();if(entity)scene.showStatusWindow(entity);else scene.showStatusWindow(this.activeEntity())};
BattleManagerTBS.onCommandInput=function(command){if(command.match(/skill\[(\d+)\]/i))this.processCommandCallSkill(Number(RegExp.$1));else switch(command){case "move":this.processCommandMove();break;case "attack":this.processCommandAttack();break;case "skill":this.processCommandSkill();break;case "item":this.processCommandItem();break;case "pass":this.requestCommandPass();break;case "cancel":this.processCommandCancel();break}};
BattleManagerTBS.processCommandCallSkill=function(id){const skill=$dataSkills[id];if(skill){this._subPhase="skill";this.activeAction().setItemObject(skill);this.drawSkillScope(this.activeEntity(),skill)}};BattleManagerTBS.processCommandCallItem=function(id){const item=$dataItems[id];if(item){this._subPhase="item";this.activeAction().setItemObject(item);this.drawItemScope(this.activeEntity(),item)}};BattleManagerTBS.processCommandCallEvent=function(id){const list=$dataCommonEvents[id].list;if(list)$gameTroop._interpreter.setupInQueue(list)};
BattleManagerTBS.previewObjectScope=function(entity,item,type){this.activeAction().setItemObject(item);if(type==="skill")this.drawSkillScope(entity,item);else if(type==="attack")this.drawAttackScope(entity);else this.drawItemScope(entity,item)};BattleManagerTBS.processCommandMove=function(){this._subPhase="move";this.drawMoveScope(this.activeEntity())};
BattleManagerTBS.makeMoveScope=function(entity,isFloating){var center=entity.getCell().toCoords();var param=this.makeMoveScopeParam(entity);var data=entity.getMoveScopeData();var scope=this.getScopeFromData(data,center,param);if(isFloating)return{cells:scope,center:center};this._moveScope={};this._moveScope.cells=scope;this._moveScope.center=center};
BattleManagerTBS.drawMoveScope=function(entity){this.makeMoveScope(entity);var scope=this._moveScope.cells;var color=Lecode.S_TBS.moveColorCell;var opa=Lecode.S_TBS.moveCellOpacity;var invalidOpa=Lecode.S_TBS.moveInvalidCellOpacity;var invalidCondition="!cell._walkable";this.getLayer("scopes").clear();this.drawScope(scope,color,opa,invalidOpa,invalidCondition)};
BattleManagerTBS.makeMoveScopeParam=function(entity){var param={points:entity.getMovePoints(),user:entity,dir:entity.getDir(),exclude_center:true,can_select_obstacles:false,cells_reachable:true};var data=entity.getMoveScopeParamData();data=LeUtilities.stringSplit(data,",");data.forEach(function(arg){if(arg.match(/through_obstacles/i))param.cells_reachable=false}.bind(this));return param};
BattleManagerTBS.cursorOnMoveScope=function(){if(!this.isMoveScopeAvailable())return false;for(let i=0;i<this.moveScope().cells.length;i++){var cell=this.moveScope().cells[i];if(cell._walkable)if(cell.x==this.cursor().cellX&&cell.y==this.cursor().cellY)return true}return false};
BattleManagerTBS.updateMoveSelection=function(){var sx=this.moveScope().center.x,sy=this.moveScope().center.y,dx=this.cursor().cellX,dy=this.cursor().cellY;this._movePath=this.getPathFromAToB(sx,sy,dx,dy,"walkable");if(!(this._subPhase==="ai"&&!Lecode.S_TBS.showScopes))this.drawMoveSelection()};
BattleManagerTBS.drawMoveSelection=function(){this.clearMoveSelection();var color=Lecode.S_TBS.moveColorCell;var scolor=Lecode.S_TBS.selectedMoveColorCell;var opacity=Lecode.S_TBS.moveSelectedCellOpacity;this.getLayer("scopes").drawSelectionCells(this.movePath(),opacity,color,scolor)};BattleManagerTBS.clearMoveSelection=function(){this.getLayer("scopes").clearSelection()};
BattleManagerTBS.validateMoveSelection=function(){if(!this.cursorOnMoveScope()){SoundManager.playBuzzer();return}SoundManager.playOk();this.centerCell(this.activeEntity().getCell());this.activeEntity().processMovement(this.movePath());this._subPhase="moving";this.getLayer("scopes").clear();this.clearMoveSelection()};BattleManagerTBS.touchMoveSelection=function(selectedCell){this.setCursorCell(selectedCell);if(this.cursorOnMoveScope()&&InputHandlerTBS.lastSelectedCell().isSame(selectedCell))this.validateMoveSelection()};
BattleManagerTBS.onActiveEntityMoveEnd=function(){this._subPhase="";this._moveScope={};this.activeEntity()._movePerformed=true;var entity=this.activeEntity();if(!entity.playableByAI())if(Lecode.S_TBS.autoPass&&!entity.canMoveCommand()&&entity._actionPerformed)this.requestCommandPass();LeUtilities.getScene().showStatusWindow(entity);var cell=entity.getCell();this.setCursorCell(cell);this.executeEventsWhen("move_action_end");if(this.activeBattler().isActor())this.executeEventsWhen("actor_move_action_end");
else this.executeEventsWhen("enemy_move_action_end");this.executeEntityEventsWhen("entity_move_action_end",entity)};BattleManagerTBS.onMoveCancel=function(){this._subPhase="";this.getLayer("scopes").clear();this.clearMoveSelection();this._moveScope={};var cell=this.activeEntity().getCell();this.setCursorCell(cell);Input.clear();SoundManager.playCancel()};BattleManagerTBS.isMoveScopeAvailable=function(){return this.moveScope()&&this.moveScope().cells&&this.moveScope().center};
BattleManagerTBS.processCommandAttack=function(){this._subPhase="attack";this.activeAction().setAttack();this.drawAttackScope(this.activeEntity())};BattleManagerTBS.makeAttackScope=function(entity){var data=entity.getAttackScopeData();var battler=entity.battler();var obj=battler.isActor()?battler.weapons()[0]:null;this.makeActionScope(entity,data,obj)};
BattleManagerTBS.drawAttackScope=function(entity){this.makeAttackScope(entity);this._actionScopeParam={color:Lecode.S_TBS.attackColorCell,scolor:Lecode.S_TBS.selectedAttackColorCell,opacity:Lecode.S_TBS.attackCellOpacity,invalidOpa:Lecode.S_TBS.attackInvalidCellOpacity};this.drawActionScope(entity);this.updateScopeSelection()};BattleManagerTBS.updateAttackSelection=function(){this._actionAoE=this.getAttackAoE();if(!(this._subPhase==="ai"&&!Lecode.S_TBS.showScopes))this.drawActionSelection()};
BattleManagerTBS.getAttackAoE=function(){var data=this.activeEntity().getAttackAoEData();var center=this._activeCell.toCoords();var battler=this.activeEntity().battler();var obj=battler.isActor()?battler.weapons()[0]:null;var param=this.makeObjAoEParam(obj,this.activeEntity(),center);return this.getScopeFromData(data,center,param)};BattleManagerTBS.processCommandSkill=function(){LeUtilities.getScene().showSkillWindow()};
BattleManagerTBS.onSkillInput=function(command){switch(command){case "ok":this.onSkillSelected();break;case "cancel":this.onActionCancel();break}};BattleManagerTBS.onSkillSelected=function(){var skill=LeUtilities.getScene()._windowSkill.item();if(skill){this._subPhase="skill";this.activeAction().setItemObject(skill);this.drawSkillScope(this.activeEntity(),skill)}};
BattleManagerTBS.makeSkillScope=function(entity,obj){obj=obj||this.activeAction().item();var data=entity.getObjectScopeData(obj);this.makeActionScope(entity,data,obj)};
BattleManagerTBS.drawSkillScope=function(entity,obj){this.makeSkillScope(entity,obj);this._actionScopeParam={color:obj.TagsLetbs.scopeColor||Lecode.S_TBS.skillColorCell,scolor:obj.TagsLetbs.scopeSColor||Lecode.S_TBS.selectedSkillColorCell,opacity:obj.TagsLetbs.scopeOpacity||Lecode.S_TBS.skillCellOpacity,invalidOpa:Lecode.S_TBS.skillInvalidCellOpacity,selectedOpacity:Lecode.S_TBS.skillSelectedCellOpacity};this.drawActionScope(entity);this.updateScopeSelection()};
BattleManagerTBS.processCommandItem=function(){LeUtilities.getScene().showItemWindow()};BattleManagerTBS.onItemInput=function(command){switch(command){case "ok":this.onItemSelected();break;case "cancel":this.onActionCancel();break}};BattleManagerTBS.onItemSelected=function(){var item=LeUtilities.getScene()._windowItem.item();if(item){this._subPhase="item";this.activeAction().setItemObject(item);this.drawItemScope(this.activeEntity(),item)}};
BattleManagerTBS.makeItemScope=function(entity,obj){obj=obj||this.activeAction().item();var data=entity.getObjectScopeData(obj);this.makeActionScope(entity,data,obj)};
BattleManagerTBS.drawItemScope=function(entity,obj){this.makeItemScope(entity,obj);this._actionScopeParam={color:obj.TagsLetbs.scopeColor||Lecode.S_TBS.ItemColorCell,scolor:obj.TagsLetbs.scopeSColor||Lecode.S_TBS.selectedItemColorCell,opacity:obj.TagsLetbs.scopeOpacity||Lecode.S_TBS.ItemCellOpacity,invalidOpa:Lecode.S_TBS.ItemInvalidCellOpacity,selectedOpacity:Lecode.S_TBS.ItemSelectedCellOpacity};this.drawActionScope(entity);this.updateScopeSelection()};
BattleManagerTBS.updateActionSelection=function(){if(this._subPhase==="attack"){this.updateAttackSelection();return}this._actionAoE=this.getActionAoE();if(!(this._subPhase==="ai"&&!Lecode.S_TBS.showScopes))this.drawActionSelection()};
BattleManagerTBS.getActionAoE=function(){var obj=this.activeAction().item();var data=this.activeEntity().getObjectAoEData(obj);var center=this._activeCell.toCoords();var param=this.makeObjAoEParam(obj,this.activeEntity(),center);return this.getScopeFromData(data,center,param)};BattleManagerTBS.validateActionSelection=function(){if(!this.cursorOnActionScope()){SoundManager.playBuzzer();return}SoundManager.playOk();this.getLayer("scopes").clear();this.clearActionSelection();this.processAction()};
BattleManagerTBS.touchActionSelection=function(selectedCell){this.setCursorCell(selectedCell);if(this.cursorOnActionScope()&&InputHandlerTBS.lastSelectedCell().isSame(selectedCell))this.validateActionSelection()};
BattleManagerTBS.onActionCancel=function(){this.getLayer("scopes").clear();this.clearActionSelection();this._actionScope={};var cell=this.activeEntity().getCell();this.setCursorCell(cell);Input.clear();SoundManager.playCancel();if(this._subPhase==="skill")this.processCommandSkill();else if(this._subPhase==="item")this.processCommandItem();this._subPhase=""};BattleManagerTBS.isActionScopeAvailable=function(){return this.actionScope()&&this.actionScope().cells&&this.actionScope().center};
BattleManagerTBS.processAction=function(){this._subPhase="action_start";var entity=this.activeEntity();this.executeEventsWhen("action_start");if(this.activeBattler().isActor())this.executeEventsWhen("actor_action_start");else this.executeEventsWhen("enemy_action_start");this.executeEntityEventsWhen("entity_action_start",entity)};
BattleManagerTBS.executeAction=function(){this._subPhase="obj_invokation";var action=this.activeAction();var item=action.item();var entity=this.activeEntity();var id=action.isAttack()?entity.getWeaponSequenceData():entity.getObjectSequenceData(item);var fastSequence=action.isAttack()?entity.getWeaponFastSequence():entity.getObjectFastSequence(item);entity.lookAt(this._activeCell);entity._actionPerformed=true;entity.battler()._itemOnUse=item;this.activeBattler().useItem(item);action.applyGlobal();
entity.onActionStart(id,fastSequence,action);if(fastSequence.length>0)entity.startSequence(fastSequence,action);else entity.startSequence(id,action)};BattleManagerTBS.onForcedActionStart=function(entity){this._actionScope={};this.getLayer("scopes").clear();this.getLayer("scopes").clearSelection()};BattleManagerTBS.onRequestedActionStart=function(entity){this.onForcedActionStart(entity);entity._actionPerformed=false;entity._movePerformed=false};
BattleManagerTBS.onPrimarySequenceEnd=function(seqMng){var entities=LeUtilities.uniqArray(seqMng._affectedTargets);this.processCounterAttack(entities,seqMng.getUser(),seqMng._action)};
BattleManagerTBS.processCounterAttack=function(targets,subject,action){if(!action)return;this.setCursorCell(subject.getCell());targets.forEach(function(entity){if(entity){var dist=LeUtilities.distanceBetweenCells(subject.getCell(),entity.getCell());if(dist<=1&&Math.random()<action.itemCnt(entity.battler())){var skill=$dataSkills[entity.battler().attackSkillId()];subject.battler().clearResult();entity.lookAt(subject.getCell());entity.addTextPopup("Counter");entity.startSequence("counter");this.forceAction(skill,
entity)}}}.bind(this))};BattleManagerTBS.invokeObjEffects=function(user,item,targets,hitAnim,animDelay){this.activeAction().setItemObject(item);this.prepareDirectionalDamageBonus(user,targets,item);this.applyObjEffects(user,targets,hitAnim,animDelay);this.dealObjTagEffects(user,targets);this.resetDirectionalDamageBonus(targets);this.refreshBattlersStatus()};
BattleManagerTBS.applyObjEffects=function(user,targets,hitAnim,animDelay){targets.forEach(function(target){target.prepareExtraPopups();if(Math.random()<this.activeAction().itemMrf(target.battler()))this.processMagicReflection(user,target,hitAnim,animDelay);else{this.activeAction().apply(target.battler());if(target.battler().result().isHit()){if(hitAnim)target.newAnimation(hitAnim,false,animDelay);if(target.battler().result().hpDamage>0)target.callSequence("damaged")}else target.callSequence("evaded");
target.onObjectEffects(user,this.activeAction().item());target.onDamage(user);if(target!==user)user.addPopup()}}.bind(this))};BattleManagerTBS.dealObjTagEffects=function(user,targets){var item=this.activeAction().item();var movePointsDmg=user.battler().getLeTBSTagNumberValue("[deal]movePoints",0);if(movePointsDmg!==0)targets.forEach(function(entity){entity.changeMovePoints(movePointsDmg)})};
BattleManagerTBS.processMagicReflection=function(user,target,hitAnim,animDelay){var cell=target.getCell();user.prepareExtraPopups();target.newAnimation(178,false,0);this.activeAction().apply(user.battler());user.addTextPopup("Reflect");if(user.battler().result().isHit()){if(hitAnim)user.newAnimation(hitAnim,false,animDelay);if(user.battler().result().hpDamage>0)user.callSequence("damaged")}else user.callSequence("evaded");user.onObjectEffects(target,this.activeAction().item());user.onDamage(target)};
BattleManagerTBS.invokeObjEffectsOnMap=function(user,item,cellTargets,hitAnim,animDelay){this.applyObjEffectsOnMap(user,item,cellTargets,hitAnim,animDelay);this.refreshBattlersStatus()};
BattleManagerTBS.applyObjEffectsOnMap=function(user,item,cellTargets,hitAnim,animDelay){cellTargets.forEach(function(cell){var target=cell.getEntity();var sprite;if(target)if(Math.random()<this.activeAction().itemMrf(target.battler()))this.processMagicReflectionOnMap(user,item,target,hitAnim,animDelay);else{this.prepareDirectionalDamageBonus(user,[target],item);this.activeAction().apply(target.battler());if(target.battler().result().isHit()){sprite=target._sprite;if(target.battler().result().hpDamage>
0)target.callSequence("damaged")}else target.callSequence("evaded");target.onObjectEffects(user,this.activeAction().item());target.onDamage(user);this.resetDirectionalDamageBonus([target])}if(hitAnim)this.getLayer("animations").newAnimation(hitAnim,false,animDelay,cell,sprite)}.bind(this))};
BattleManagerTBS.processMagicReflectionOnMap=function(user,item,target,hitAnim,animDelay){var sprite;var cell=user.getCell();user.prepareExtraPopups();this.prepareDirectionalDamageBonus(target,[user],item);this.activeAction().apply(user.battler());if(user.battler().result().isHit()){sprite=user._sprite;if(user.battler().result().hpDamage>0)user.callSequence("damaged")}else user.callSequence("evaded");user.onObjectEffects(target,this.activeAction().item());user.onDamage(target);this.resetDirectionalDamageBonus([target]);
if(hitAnim)this.getLayer("animations").newAnimation(hitAnim,false,animDelay,cell,sprite)};BattleManagerTBS.applyFloatingDamage=function(amount,target){target.battler().gainHp(-amount);target.addPopup();target.callSequence("damaged");target.checkDeath()};
BattleManagerTBS.forceAction=function(obj,entity){let battler=entity.battler();entity.getCell().toCoords();const action=new TBS_FloatingAction(battler,false);action.setItemObject(obj);entity.battler()._itemOnUse=obj;let data,aoeData;if(obj&&obj.id&&obj.id===battler.attackSkillId()){data=entity.getAttackScopeData();aoeData=entity.getAttackAoEData()}else{data=entity.getObjectScopeData(obj);aoeData=entity.getObjectAoEData(obj)}this.makeActionScope(entity,data,obj);const aoeCenter=this._activeCell.toCoords();
const param=this.makeObjAoEParam(obj,entity,aoeCenter);this._actionAoE=this.getScopeFromData(aoeData,aoeCenter,param);const item=action.item();const id=action.isAttack()?entity.getWeaponSequenceData():entity.getObjectSequenceData(item);battler.useItem(item);action.applyGlobal();entity.lookAt(this._activeCell);entity.appendSequence(id,action)};BattleManagerTBS.refreshBattlersStatus=function(){LeUtilities.getScene()._windowStatus.refresh()};
BattleManagerTBS.onActionEnd=function(entity){this._subPhase="";this._actionScope={};entity=entity||this.activeEntity();var cell=entity.getCell();this.setCursorCell(cell);Input.clear();LeUtilities.getScene().showStatusWindow(entity);var obj=this.activeAction().item();if(entity.passAfterObjUse(obj))this.requestCommandPass();else if(!entity.playableByAI())if(Lecode.S_TBS.autoPass&&!entity.canMoveCommand())this.requestCommandPass();this.getLayer("scopes").clear();this.getLayer("scopes").clearSelection();
this.executeEventsWhen("action_end");if(this.activeBattler().isActor())this.executeEventsWhen("actor_action_end");else this.executeEventsWhen("enemy_action_end");this.executeEntityEventsWhen("entity_action_end",entity);entity.battler()._itemOnUse=null};
BattleManagerTBS.onForcedActionEnd=function(entity){this._actionScope={};var cell=entity.getCell();this.setCursorCell(cell);this.getLayer("scopes").clear();this.getLayer("scopes").clearSelection();Lecode.S_TBS.requestedAction=false;entity.battler()._itemOnUse=null};BattleManagerTBS.onRequestedActionEnd=function(entity){this.onForcedActionEnd(entity);entity._actionPerformed=false;entity._movePerformed=false};BattleManagerTBS.requestCommandPass=function(){this._subPhase="pass"};
BattleManagerTBS.processCommandPass=function(){var entity=this.activeEntity();var cell=entity.getCell();if(!this.activeEntity().playableByAI()&&Lecode.S_TBS.enableDirectionalFacing){this._subPhase="directionSelector_input";this._beforePassDir=entity.getDir();this._directionSelector.set(cell,entity)}else this.validatePass()};BattleManagerTBS.cancelPass=function(){this._subPhase="";this._directionSelector.hide();Input.clear();SoundManager.playCancel();this.activeEntity().setDir(this._beforePassDir)};
BattleManagerTBS.validatePass=function(){this._directionSelector.hide();this.turnEnd()};BattleManagerTBS.passByTouch=function(selectedCell){var entity=this._directionSelector._battlerEntity;entity.lookAt(selectedCell);this.validatePass()};
BattleManagerTBS.turnEnd=function(){this._subPhase="turn_end";var entity=this.activeEntity();entity.onTurnEnd();this.executeEventsWhen("turn_end");if(this.activeBattler().isActor())this.executeEventsWhen("actor_turn_end");else this.executeEventsWhen("enemy_turn_end");this.executeEntityEventsWhen("entity_turn_end",entity);this.updateTiedEventsCooldown(entity)};
BattleManagerTBS.turnOrderShouldWait=function(){var canContinue=!this.updateEvents()&&this.checkDefeatAndVictory()&&!this.isWaiting()&&!this.anySequenceRunning();return!canContinue};BattleManagerTBS.updateStartOfTurnEvents=function(){if(!this.turnOrderShouldWait())this.nextTurn()};BattleManagerTBS.updateEndOfTurnEvents=function(){if(!this.turnOrderShouldWait())this._subPhase="next_turn"};
BattleManagerTBS.updateEvents=function(){$gameTroop.updateInterpreter();$gameParty.requestMotionRefresh();if($gameTroop.isEventRunning())return true;$gameTroop.setupBattleEvent();if($gameTroop.isEventRunning()||SceneManager.isSceneChanging())return true;return false};
BattleManagerTBS.nextTurn=function(){do{this._activeIndex++;if(this._activeIndex>=this._turnOrder.length){this._activeIndex=0;this.onTurnOrderEnd()}}while(this.activeEntity()._dead);if(this.activeEntity().isTurnHidden()){this.nextTurn();return}this._turnOrderVisual.updateOnNextTurn(this._turnOrder,this._activeIndex);this.startTurn()};BattleManagerTBS.onTurnOrderEnd=function(){$gameTroop.increaseTurn();this._logWindow.startTurn();this.executeEventsWhen("turn_order_end")};
BattleManagerTBS.processCommandCancel=function(){this._subPhase="end_command";LeUtilities.getScene().showEndCommandWindow()};BattleManagerTBS.onEndCommandInput=function(command){switch(command){case "options":break;case "escape":this.processEscape();break;case "cancel":this.exitEndCommand();break}};BattleManagerTBS.exitEndCommand=function(){this._subPhase="";Input.clear()};
BattleManagerTBS.processEscape=function(){$gameParty.performEscape();const success=true;if(success){BattleManager._escaped=true;SoundManager.playEscape();this.prepareAbort()}};BattleManagerTBS.checkDefeatAndVictory=function(){if(this.canPrepareDefeat()){this.prepareDefeat();return false}else if(this.canPrepareVictory()){this.prepareVictory();return false}return true};BattleManagerTBS.canPrepareDefeat=function(){return this.allyEntities().every(function(entity){return entity.battler().isActor()&&entity.battler().isDead()})};
BattleManagerTBS.canPrepareVictory=function(){return $gameTroop.isAllDead()};BattleManagerTBS.prepareAbort=function(){this._battleStopStatus="abort";this.stopBattle()};BattleManagerTBS.prepareDefeat=function(){this._battleStopStatus="defeat";this.stopBattle()};BattleManagerTBS.prepareVictory=function(){this._battleStopStatus="victory";this.stopBattle();this.allyEntities().forEach(function(entity){entity.startSequence("victory")})};
BattleManagerTBS.processDefeat=function(){BattleManager.processDefeat();this._phase="battle_end";this.enemyEntities().forEach(function(entity){entity.startSequence("victory")})};BattleManagerTBS.processAbort=function(){BattleManager.processAbort();this._phase="battle_end"};BattleManagerTBS.processVictory=function(){BattleManager.processVictory();this._phase="battle_end"};
BattleManagerTBS.stopBattle=function(){InputHandlerTBS.setActive(false);this._phase="battle_stopping";this.wait(Lecode.S_TBS.endOfBattleWait);this.executeEventsWhen("battle_end")};
BattleManagerTBS.updateBattleStopping=function(){LeUtilities.getScene()._windowCommand.close();this._directionSelector.hide();this.updateSequences();if(this.updateEvents()||this.anySequenceRunning())return;var waiting=this.isWaiting();switch(this._battleStopStatus){case "abort":waiting=waiting||this.isWaitingForAbortEvents();break;case "victory":waiting=waiting||this.isWaitingForVictoryEvents();break;case "defeat":waiting=waiting||this.isWaitingForDefeatEvents();break}if(!waiting)switch(this._battleStopStatus){case "abort":this.processAbort();
break;case "victory":this.processVictory();break;case "defeat":this.processDefeat();break}};BattleManagerTBS.isWaitingForAbortEvents=function(){return false};BattleManagerTBS.isWaitingForVictoryEvents=function(){return false};BattleManagerTBS.isWaitingForDefeatEvents=function(){return false};BattleManagerTBS.updateBattleEnd=function(){BattleManager.updateBattleEnd();this._phase=null};
BattleManagerTBS.onEntityDeath=function(entity){if(this.activeEntity()===entity){this.getLayer("scopes").clear();this.getLayer("scopes").clearSelection();this.turnEnd()}this._turnOrderVisual.updateOnEntityDeath(this._turnOrder,this._activeIndex);this.executeEntityEventsWhen("entity_death",entity);if(entity.hasNoCorpse())this.destroyEntity(entity,false)};BattleManagerTBS.onEntityRevive=function(entity){this._turnOrderVisual.updateOnEntityRevive(this._turnOrder,this._activeIndex)};
BattleManagerTBS.destroyEntity=function(entity,removeTurn){if(removeTurn)this.removeEntityTurn(entity);entity.destroy();LeUtilities.removeInArray(this._battlerEntities,entity);LeUtilities.removeInArray(this._neutralEntities,entity)};
BattleManagerTBS.removeEntityTurn=function(entity){var index;for(let i=0;i<this._turnOrder.length;i++){var e=this._turnOrder[i];if(entity===e)index=i}if(isNaN(index))return;LeUtilities.removeInArray(this._turnOrder,entity);if(this._activeIndex>=index)this._activeIndex--;this._turnOrderVisual.set(this._turnOrder,this._activeIndex)};
BattleManagerTBS.makeActionScope=function(entity,data,obj,isFloating){var center=entity.getCell().toCoords();var param=this.makeObjScopeParam(obj,entity,center);var scope=this.getScopeFromData(data,center,param);if(isFloating)return{cells:scope,center:center};this._actionScope={};this._actionScope.cells=scope;this._actionScope.center=center};
BattleManagerTBS.drawActionScope=function(entity){var color=this._actionScopeParam.color;var opacity=this._actionScopeParam.opacity;var invalidOpa=this._actionScopeParam.invalidOpa;var scope=this._actionScope.cells;var invalidCondition="!cell._selectable || (cell.isObstacleForLOS() && !cell.isThereEntity())";this.getLayer("scopes").clear();this.drawScope(scope,color,opacity,invalidOpa,invalidCondition)};
BattleManagerTBS.makeObjScopeParam=function(obj,entity,center){obj=obj||this.activeAction().item();var param={user:entity,dir:entity.getDirectionTo(center),need_check_los:true,exclude_center:true,line_of_sight:true,remove_nonvisibleCells:false,select:obj?obj.TagsLetbs.scopeSelect:null};if(!obj)return param;var data=obj.TagsLetbs.scopeOptions;data=LeUtilities.stringSplit(data,",");data.forEach(function(arg){if(arg.match(/include_center/i))param.exclude_center=false;else if(arg.match(/through_obstacles/i))param.line_of_sight=
false;else if(arg.match(/need_free_cell/i))param.need_free_cell=true}.bind(this));return param};
BattleManagerTBS.makeObjAoEParam=function(obj,entity,center){obj=obj||this.activeAction().item();var param={user:entity,dir:entity.getDirectionTo(center)};this._requestSpecialSelection=null;if(!obj)return param;var data=obj.TagsLetbs.aoeOptions;data=LeUtilities.stringSplit(data,",");data.forEach(function(arg){if(arg.match(/line_of_sight/i)){this._requestSpecialSelection={};param.need_check_los=true;param.line_of_sight=true;param.remove_nonvisibleCells=true}else if(arg.match(/exclude_center/i))param.exclude_center=
true;else if(arg.match(/need_free_cell/i))param.need_free_cell=true;else if(arg.match(/exclude_user/i))param.exclude_user=true;else if(arg.match(/exclude_allies/i))param.exclude_allies=true;else if(arg.match(/exclude_enemies/i))param.exclude_enemies=true;else if(arg.match(/exclude_free_cells/i))param.exclude_free_cells=true}.bind(this));return param};
BattleManagerTBS.cursorOnActionScope=function(){if(!this.isActionScopeAvailable())return false;for(let i=0;i<this.actionScope().cells.length;i++){var cell=this.actionScope().cells[i];if(cell._selectable&&!(cell.isObstacle()&&!cell.isThereEntity()))if(cell.x==this.cursor().cellX&&cell.y==this.cursor().cellY)return true}return false};
BattleManagerTBS.drawActionSelection=function(){this.clearActionSelection();var color=this._actionScopeParam.color;var scolor=this._actionScopeParam.scolor;var opacity;var invalidOpa=this._actionScopeParam.invalidOpa;if(this._requestSpecialSelection){var aoe=this._requestSpecialSelection.aoe;opacity=invalidOpa;this.getLayer("scopes").drawSelectionCells(aoe,opacity,color,scolor)}opacity=this._actionScopeParam.selectedOpacity;this.getLayer("scopes").drawSelectionCells(this._actionAoE,opacity,color,
scolor)};BattleManagerTBS.clearActionSelection=function(){this.getLayer("scopes").clearSelection()};BattleManagerTBS.getScopeFromData=function(data,center,param){let scope=[];const scopesStr=data.split(";");for(let scopeStr of scopesStr)if(scopeStr){scopeStr=String(scopeStr).trim();scope=scope.concat(this.makeScope(scopeStr,center,param))}scope=LeUtilities.uniqArray(scope);if(this._requestSpecialSelection)this._requestSpecialSelection.aoe=scope;scope=this.applyParamToScope(scope,center,param);return scope};
BattleManagerTBS.makeScope=function(data,center,param){let str,min,size;const e=param.user;let a;let scope=[];if(e)a=e.battler();if(data.match(/(circle|line|square|cross)\((.+)\)/i))if(RegExp.$2.includes(",")){str=RegExp.$2.split(",");size=Math.floor(Number(eval(str[0])));min=Math.floor(Number(eval(str[1])))}else size=Math.floor(Number(eval(RegExp.$2)));if(data.match(/custom\((.+)\)/i)){const scopeData=Lecode.S_TBS.Config.Custom_Scopes[String(RegExp.$1)];scope=this.getScopeFromRawData(scopeData,center,
param)}else if(data.match(/circle\((.+)\)/i))scope=this.makeCircleScope(center,size,min,param);else if(data.match(/line\((.+)\)/i))scope=this.makeLineScope(center,size,min,param);else if(data.match(/square\((.+)\)/i))scope=this.makeSquareScope(center,size,min,param);else if(data.match(/cross\((.+)\)/i))scope=this.makeCrossScope(center,size,min,param);else if(data.match(/path/i))scope=this.makePathScope(param);else{let aoe=eval("["+data+"]");for(let o of aoe)if(o){let cell=this.getCellAt(o[0],o[1]);
if(cell)scope.push(cell)}}return LeUtilities.uniqArray(scope)};
BattleManagerTBS.getScopeFromRawData=function(scopeData,center,param){var scope=[];var cx=center.x;var cy=center.y;var ux=this.activeEntity()._cellX;var uy=this.activeEntity()._cellY;var dir=param.dir;var dirData=eval("scopeData.data_"+LeUtilities.directionCodeToText(dir));var data=dirData?dirData:scopeData.data;var array=eval("["+data+"]");array.forEach(function(arr){var cell=this.getCellAt(arr[0],arr[1]);if(cell)scope.push(cell)}.bind(this));return LeUtilities.uniqArray(scope)};
BattleManagerTBS.makeCircleScope=function(center,range,min,param){var cells=[];var start=param.exclude_center?1:0;var x=center.x,y=center.y;for(let i=start;i<=range;i++){cells.push(this.getCellAt(x+i,y));cells.push(this.getCellAt(x-i,y));cells.push(this.getCellAt(x,y+i));cells.push(this.getCellAt(x,y-i));for(var a=start;a<=range-i;a++){cells.push(this.getCellAt(x-i,y-a));cells.push(this.getCellAt(x-i,y+a));cells.push(this.getCellAt(x+i,y-a));cells.push(this.getCellAt(x+i,y+a))}}cells=cells.filter(function(cell){return cell}.bind(this));
if(min){var minCells=this.makeCircleScope(center,min,null,param);cells=cells.filter(function(cell){return!this.isCellInScope(cell,minCells)}.bind(this))}return cells};
BattleManagerTBS.makeSquareScope=function(center,range,min,param){var cells=[];var x=center.x,y=center.y;for(let i=-range;i<=range;i++)for(let j=-range;j<=range;j++){if(param.exclude_center&&i===0&&j===0)continue;cells.push(this.getCellAt(x+i,y+j))}cells=cells.filter(function(cell){return cell}.bind(this));if(min){var minCells=this.makeSquareScope(center,min,null,param);cells=cells.filter(function(cell){return!this.isCellInScope(cell,minCells)}.bind(this))}return cells};
BattleManagerTBS.makeLineScope=function(center,range,min,param){var cells=[];var start=param.exclude_center?1:0;start=min||start;var x=center.x,y=center.y;for(let i=start;i<=range;i++){cells.push(this.getCellAt(x+i,y));cells.push(this.getCellAt(x-i,y));cells.push(this.getCellAt(x,y+i));cells.push(this.getCellAt(x,y-i))}cells=cells.filter(function(cell){return cell}.bind(this));if(min){var minCells=this.makeLineScope(center,min,null,param);cells=cells.filter(function(cell){return!this.isCellInScope(cell,
minCells)}.bind(this))}return cells};
BattleManagerTBS.makeCrossScope=function(center,range,min,param){var cells=[];var start=param.exclude_center?1:0;var x=center.x,y=center.y;for(let i=start;i<=range;i++){cells.push(this.getCellAt(x+i,y+i));cells.push(this.getCellAt(x+i,y-i));cells.push(this.getCellAt(x-i,y+i));cells.push(this.getCellAt(x-i,y-i))}cells=cells.filter(function(cell){return cell}.bind(this));if(min){var minCells=this.makeCrossScope(center,min,null,param);cells=cells.filter(function(cell){return!this.isCellInScope(cell,minCells)}.bind(this))}return cells};
BattleManagerTBS.makePathScope=function(param){var sx=param.user.getCell().x;var sy=param.user.getCell().y;var dx=this._activeCell.x;var dy=this._activeCell.y;return this.getPathFromAToB(sx,sy,dx,dy,"free")};
BattleManagerTBS.applyParamToScope=function(cells,center,param){let party;let user;cells=this.removeInvalidCells(cells);if(!param.exclude_center){let centerCell=this.getCellAt(center.x,center.y);if(!this.isCellInScope(centerCell,cells))cells.push(centerCell)}if(param.exclude_user)cells=cells.filter((v)=>!v.isSame(param.user.getCell()));if(param.exclude_allies){user=param.user;party=user.battler().isEnemy()?this.enemyEntities():this.allyEntities();cells=cells.filter(function(cell){return!party.some(function(e){return cell.isSame(e.getCell())})})}if(param.exclude_enemies){user=
param.user;party=user.battler().isActor()?this.enemyEntities():this.allyEntities();cells=cells.filter(function(cell){return!party.some(function(e){return cell.isSame(e.getCell())})})}if(!param.can_select_obstacles)if(param.remove_obstacles)cells=this.removeObstaclesFromScope(cells);if(param.cells_reachable){this.checkScopeWalkable(cells,param.points,center);if(param.remove_unreachableCells)cells=this.makeScopeReachable(cells,param.points,center)}if(param.need_check_los){for(let cell of cells)if(cell)cell._selectable=
true;if(param.line_of_sight){this.checkScopeVisibility(cells,center);if(param.remove_nonvisibleCells)cells=this.makeScopeVisible(cells,center)}if(param.select)cells=this.selectScopeTargets(cells,param.select,param.user)}if(param.need_free_cell){cells=this.removeObstaclesFromScope(cells);cells=this.removeEntitiesFromScope(cells)}return cells};BattleManagerTBS.removeInvalidCells=function(cells){return cells.filter((c)=>c)};
BattleManagerTBS.removeObstaclesFromScope=function(cells){return cells.filter((v)=>!v.isObstacle())};BattleManagerTBS.removeEntitiesFromScope=function(cells){return cells.filter((c)=>{if(c&&c.isThereEntity)return!c.isThereEntity()})};
BattleManagerTBS.checkScopeWalkable=function(cells,range,center){for(let c of cells)if(c)c._walkable=false;let grid=this.getWalkableGridForEasyStar();this._easystar.setGrid(grid);this._easystar.setAcceptableTiles([0]);this._easystar.enableSync();let scope=LeUtilities.sortByClosestDistance(center,cells);scope.reverse();var reachables=[];for(let i=0;i<scope.length;i++){var cell=scope[i];cell._walkable=this.isCellReachable(cell,range,center,reachables);reachables=LeUtilities.uniqArray(reachables)}};
BattleManagerTBS.makeScopeReachable=function(cells,range,center){return cells.filter(function(cell){return cell._walkable}.bind(this))};
BattleManagerTBS.isCellReachable=function(cell,range,center,reachables){if(!cell)return false;if(cell instanceof TBSCell){const c=cell.getEntity();if(c&&!c.entitiesCanLayOnMe())return false;else if(cell.isObstacle())return false;for(const r of reachables)if(r&&cell.isSame(r))return true;let pathResult=[];const {x,y}=center;this._easystar.findPath(x,y,cell.x,cell.y,(rs)=>{return pathResult=rs});this._easystar.calculate();if(!pathResult)return false;pathResult.shift();if(pathResult.length>range)return false;
if(reachables)reachables.push(cell);return true}return false};
BattleManagerTBS.selectScopeTargets=function(cells,str,user){var conditions=[],flagId,actorId,enemyId,evalStr;var query=str.split(",");query.forEach(function(type){var condition=function(){return false};if(type==="user")condition=function(e){return e.getCell().isSame(user.getCell())};else if(type==="allies")condition=function(e){return e&&LeUtilities.isAlly(user.battler(),e.battler())};else if(type==="enemies")condition=function(e){return e&&LeUtilities.isEnemy(user.battler(),e.battler())};else if(type.match(/flaggedentity\((.+)\)/i)){flagId=
RegExp.$1;condition=function(e){return e&&e._flag===flagId}}else if(type.match(/actorId\((.+)\)/i)){actorId=Number(RegExp.$1);condition=function(e){return e&&e.battler().isActor()&&e.battler().actorId()===actorId}}else if(type.match(/enemyId\((.+)\)/i)){actorId=Number(RegExp.$1);condition=function(e){return e&&e.battler().isEnemy()&&e.battler().enemyId()===enemyId}}else if(type.match(/eval\((.+)\)/i)){evalStr=RegExp.$1;condition=function(e){if(!e)return false;var b=e.battler();var a=user.battler();
return eval(evalStr)}}conditions.push(condition)});var match=function(e){if(e)for(let i=0;i<conditions.length;i++){var condition=conditions[i];if(condition(e))return true}return false};cells.forEach(function(cell){var e=cell.getEntity();cell._selectable=cell._selectable&&match(e)},this);return cells};
BattleManagerTBS.checkScopeVisibility=function(cells,center){let w=48;let h=48;let cx=center.x*w+w/2;let cy=center.y*h+h/2;let obstacles=[];let boundaries=this.getScopeBoundaries(cells);for(let x=boundaries.left;x<=boundaries.right;x++)for(let y=boundaries.top;y<=boundaries.bottom;y++){let cell=this.getCellAt(x,y);if(cell.isObstacleForLOS())obstacles.push(cell)}let nonVisible=[];for(let cell of cells)if(cell)cell._selectable=true;for(let ob of obstacles)if(ob){let cellsToCheck=this.cellsToCheckNearObstacle(ob,
cells,center);for(let cellToCheck of cellsToCheck)if(cellToCheck){if(ob.x===cellToCheck.x&&ob.y===cellToCheck.y)continue;let dx=cellToCheck.x*w+w/2;let dy=cellToCheck.y*h+h/2;let pixels=LeUtilities.getPixelsOfLine(cx,cy,dx,dy);for(let obstacle of obstacles)if(obstacle){if(obstacle.x===center.x&&obstacle.y===center.y)continue;if(obstacle.isSame(cellToCheck))continue;let x=obstacle.x*w;let y=obstacle.y*h;for(let cc of pixels)if(cc)if(LeUtilities.doesRectIncludeCoord(x,y,w,h,cc))nonVisible.push([cellToCheck.x,
cellToCheck.y])}}}for(let non of nonVisible)if(non)for(let px of cells)if(px)if(px.x===non[0]&&px.y===non[1])px._selectable=false};
BattleManagerTBS.checkSingleCellVisibility=function(cell,center){const w=48;const h=48;const cx=center.x*w+w/2;const cy=center.y*h+h/2;let obstacles=[];let cells=this.getAllCells();for(let c of cells)if(c&&c.isObstacleForLOS())obstacles.push(c);cell._selectable=true;const dx=cell.x*w+w/2;const dy=cell.y*h+h/2;const pixels=LeUtilities.getPixelsOfLine(cx,cy,dx,dy);for(let obstacle of obstacles)if(obstacle){if(obstacle.x===center.x&&obstacle.y===center.y)continue;if(obstacle.isSame(cell))continue;let x=
obstacle.x*w;const y=obstacle.y*h;for(let px of pixels)if(px)if(LeUtilities.doesRectIncludeCoord(x,y,w,h,px)){cell._selectable=false;return}}};
BattleManagerTBS.cellsToCheckNearObstacle=function(obstacle,cells,center){let cx=center.x;let cy=center.y;let result=[];let condition;if(obstacle.y>cy&&obstacle.x>cx)condition="cell.x >= obstacle.x && cell.y >= obstacle.y";else if(obstacle.y>cy&&obstacle.x<cx)condition="cell.x <= obstacle.x && cell.y >= obstacle.y";else if(obstacle.y<cy&&obstacle.x>cx)condition="cell.x >= obstacle.x && cell.y <= obstacle.y";else if(obstacle.y<cy&&obstacle.x<cx)condition="cell.x <= obstacle.x && cell.y <= obstacle.y";
else if(obstacle.y===cy&&obstacle.x<cx)condition="cell.x <= obstacle.x";else if(obstacle.y===cy&&obstacle.x>cx)condition="cell.x >= obstacle.x";else if(obstacle.x===cx&&obstacle.y<cy)condition="cell.y <= obstacle.y";else if(obstacle.x===cx&&obstacle.y>cy)condition="cell.y >= obstacle.y";for(const cell of cells)if(cell&&!!eval(condition))result.push(cell);return result};BattleManagerTBS.makeScopeVisible=function(cells,center){return cells.filter((cell)=>cell._selectable)};
BattleManagerTBS.getScopeBoundaries=function(cells){let copy=cells.filter((v)=>true);let cellsByX=copy.sort((cellA,cellB)=>cellA.x>cellB.x?1:cellA.x<cellB.x?-1:0);let rightCell=cellsByX.leU_last();let cellsByY=copy.sort((cellA,cellB)=>cellA.y>cellB.y?1:cellA.y<cellB.y?-1:0);let bottomCell=cellsByY.leU_last();return{left:cellsByX[0].x,right:rightCell.x,top:cellsByY[0].y,bottom:bottomCell.y}};
BattleManagerTBS.getPathFromAToB=function(sx,sy,dx,dy,gridType,cellsToIgnore){let pathResult=[];let grid;if(gridType==="walkable")grid=this.getWalkableGridForEasyStar(cellsToIgnore);else if(gridType==="free")grid=this.getFreeGridForEasyStar();else grid=this.getGridForEasyStar();this._easystar.setGrid(grid);this._easystar.setAcceptableTiles([0]);this._easystar.enableSync();this._easystar.findPath(sx,sy,dx,dy,(result)=>{return pathResult=result});this._easystar.calculate();if(pathResult.length<=0)return pathResult;
pathResult.shift();return pathResult.map((cellArr)=>this.getCellAt(cellArr.x,cellArr.y))};BattleManagerTBS.getGridForEasyStar=function(){const grid=[];for(let y=0;y<$gameMap.height();y++){const arr=[];for(let x=0;x<$gameMap.width();x++){const cell=this.getCellAt(x,y);if(!cell||cell.isObstacle())arr.push(1);else arr.push(0)}grid.push(arr)}return grid};
BattleManagerTBS.getFreeGridForEasyStar=function(){const grid=[];for(let y=0;y<$gameMap.height();y++){const arr=[];for(let x=0;x<$gameMap.width();x++){const cell=this.getCellAt(x,y);if(!cell)arr.push(1);else arr.push(0)}grid.push(arr)}return grid};
BattleManagerTBS.getWalkableGridForEasyStar=function(cellsToIgnore){cellsToIgnore=cellsToIgnore||[];const grid=[];for(let y=0;y<$gameMap.height();y++){const arr=[];for(let x=0;x<$gameMap.width();x++){const cell=this.getCellAt(x,y);if(this.isCellInScope(cell,cellsToIgnore))arr.push(0);else if(cell){const entity=cell.getEntity();if(entity)arr.push(entity.isPassable()?0:1);else arr.push(cell.isObstacle()?1:0)}else arr.push(1)}grid.push(arr)}return grid};
BattleManagerTBS.drawScope=function(cells,color,opa,invalidOpa,invalidCondition){if(!cells||cells.length<=0)return;for(const cell of cells)if(cell)this.getLayer("scopes").drawCell(cell.x,cell.y,opa,color)};BattleManagerTBS.isCellInScope=function(cell,scope){if(!scope||scope.length<=0)return false;for(const c of scope)if(c&&c.isSame(cell))return true;return false};
BattleManagerTBS.getEntitiesInScope=function(scope){const entities=[];if(!scope||scope.length<=0)return entities;for(const cell of scope)if(cell&&cell instanceof TBSCell){const entity=cell.getEntity()||null;if(entity)entities.push(entity)}return entities};
BattleManagerTBS.closestWalkableCellTo=function(cellTarget,scope){return scope.sort(function(a,b){const obj_aPath=this.getPathFromAToB(a.x,a.y,cellTarget.x,cellTarget.y,"walkable",[cellTarget]);const obj_bPath=this.getPathFromAToB(b.x,b.y,cellTarget.x,cellTarget.y,"walkable",[cellTarget]);const obj_aDist=obj_aPath.length===0?999:obj_aPath.length;const obj_bDist=obj_bPath.length===0?999:obj_bPath.length;return obj_aDist>obj_bDist?1:obj_aDist<obj_bDist?-1:0}.bind(this))[0]};
BattleManagerTBS.farthestWalkableCellTo=function(cellTarget,scope){return scope.sort(function(a,b){const obj_aPath=this.getPathFromAToB(a.x,a.y,cellTarget.x,cellTarget.y,"walkable",[cellTarget]);const obj_bPath=this.getPathFromAToB(b.x,b.y,cellTarget.x,cellTarget.y,"walkable",[cellTarget]);const obj_aDist=obj_aPath.length===0?999:obj_aPath.length;const obj_bDist=obj_bPath.length===0?999:obj_bPath.length;return obj_aDist>obj_bDist?1:obj_aDist<obj_bDist?-1:0}.bind(this)).pop()};
BattleManagerTBS.processCollisionEffects=function(entity){var collisionData=entity._collisionData;if(!collisionData.endCell)return;var distance=collisionData.distance;var covered=collisionData.covered;var user=collisionData.user;var obj=collisionData.obj;var a=user.battler();var b=entity.battler();var formula=Lecode.S_TBS.defaultCollisionFormula;if(obj&&obj.TagsLetbs.collisionFormula)formula=obj.TagsLetbs.collisionFormula;var damage=Math.floor(eval(formula));var dmgBonus=user.getCollisionDamageBonus(damage,
obj);var dmgMinus=entity.getCollisionDamageReduction(damage,obj);damage+=dmgBonus-dmgMinus;if(damage<0)damage=0;this.applyFloatingDamage(Math.floor(damage),entity);var endCell=collisionData.endCell;var next=endCell.getEntity();while(next){if(next.battler().isDead())break;damage-=damage*Lecode.S_TBS.collissionDamageChainRate;this.applyFloatingDamage(Math.floor(damage),next);var oldDir=next.getDir();next.setDir(collisionData.dir);endCell=next.getForwardCell();next.setDir(oldDir);next=endCell.getEntity()}entity._collisionData=
null};
BattleManagerTBS.prepareDirectionalDamageBonus=function(user,targets,item){var oldUserDir=user.getDir();for(let i=0;i<targets.length;i++){var entity=targets[i];if(entity===user)continue;var dir=entity.getDir();var effects=0;user.lookAt(entity.getCell());if(user.getDir()===dir){effects=Lecode.S_TBS.backDirectionalDamageEffects*.01;effects+=user.getDirectionalDmgBonus("back",item);effects-=entity.getDirectionalDmgReduction("back",item)}else if(user.getDir()===2&&dir===8||user.getDir()===8&&dir===2||
user.getDir()===4&&dir===6||user.getDir()===6&&dir===4){effects=Lecode.S_TBS.frontDirectionalDamageEffects*.01;effects+=user.getDirectionalDmgBonus("front",item);effects-=entity.getDirectionalDmgReduction("front",item)}else{effects=Lecode.S_TBS.sideDirectionalDamageEffects*.01;effects+=user.getDirectionalDmgBonus("side",item);effects-=entity.getDirectionalDmgReduction("side",item)}entity.battler().leTBS_setDirectionalDmgEffects(effects)}user.setDir(oldUserDir)};
BattleManagerTBS.resetDirectionalDamageBonus=function(targets){for(let i=0;i<targets.length;i++)targets[i].battler().leTBS_setDirectionalDmgEffects(0)};BattleManagerTBS.executeEventsByTouch=function(entity){var cell=entity.getForwardCell();if(cell){var event=this.getTBSEventAt(cell.x,cell.y);if(event&&event.canTriggerWhen("touch")){event.start();this._lastTriggeredEventEntity=entity;this._lastTriggeredEventBattler=entity.battler()}}};
BattleManagerTBS.executeEventsByStep=function(entity){var cell=entity.getCell();var event=this.getTBSEventAt(cell.x,cell.y);if(event&&event.canTriggerWhen("step_on")){event.start();this._lastTriggeredEventEntity=entity;this._lastTriggeredEventBattler=entity.battler();return event._stopWhenStepped}return false};
BattleManagerTBS.executeEventsWhen=function(condition){var tbsEvents=this._tbsEvents;for(let i=0;i<tbsEvents.length;i++){var tbsEvent=tbsEvents[i];if(tbsEvent.canTriggerWhen(condition))tbsEvent.start()}this.allEntities().forEach(function(entity){this.executeEntityEventsWhen(condition,entity)},this)};BattleManagerTBS.executeEventsByForce=function(id){var tbsEvents=this._tbsEvents;for(let i=0;i<tbsEvents.length;i++){var tbsEvent=tbsEvents[i];if(tbsEvent._event.eventId()===id){tbsEvent.start();break}}};
BattleManagerTBS.executeEntityEventsWhen=function(condition,entity){var events=entity.getTiedEvents();for(let i=0;i<events.length;i++){var tbsEvent=events[i];if(tbsEvent&&tbsEvent.canTriggerWhen(condition)){var id=tbsEvent.event()._commonEventId;if(!this._entityEventsCooldown[id]){var str=tbsEvent.triggerConditions();if(!str||this.evaluateEntityEventConditions(str)){this._triggeredEventEntity=entity;var list=$dataCommonEvents[id].list;$gameTroop._interpreter.setupInQueue(list);this._entityEventsCooldown[id]=
tbsEvent._cooldown}}}}};BattleManagerTBS.updateTiedEventsCooldown=function(entity){entity.getTiedEvents().forEach(function(tbsEvent){var id=tbsEvent.event()._commonEventId;this._entityEventsCooldown[id]=Math.max(0,this._entityEventsCooldown[id]-1)},this)};BattleManagerTBS.hideEntity=function(entity){this.destroyEntity(entity);this._hiddenEntities.push(entity);entity.hideTurn();this._turnOrderVisual.updateOnEntityHide()};
BattleManagerTBS.showEntity=function(entity){if(entity._isNeutral)this._neutralEntities.push(entity);else this._battlerEntities.push(entity);entity.showTurn();this._turnOrderVisual.updateOnEntityShow();LeUtilities.removeInArray(this._hiddenEntities,entity)};BattleManagerTBS.allyStartCells=function(){return this._startCells.filter(function(cell){return cell._positioningData.type==="actor"})};
BattleManagerTBS.enemyStartCells=function(){return this._startCells.filter(function(cell){return cell._positioningData.type==="enemy"})};BattleManagerTBS.allyEntities=function(){return this.allPlayableEntities().filter(function(ent){return ent._battler.isActor()})};BattleManagerTBS.enemyEntities=function(){return this.allPlayableEntities().filter(function(ent){return!ent._battler.isActor()})};BattleManagerTBS.isCellFree=function(cell){if(cell==null)return true;return cell.getEntity()==null};
BattleManagerTBS.getCellAt=function(x,y){if(this._groundCells[x])return this._groundCells[x][y];return null};BattleManagerTBS.getAllCells=function(){let cells=[];for(let i=0;i<$gameMap.width();i++)for(let j=0;j<$gameMap.height();j++)cells.push(this._groundCells[i][j]);return cells};BattleManagerTBS.getEntityAt=function(x,y){let cell=this.getCellAt(x,y);if(cell)return cell.getEntity();return null};
BattleManagerTBS.getEntitiesXY=function(excludeActive){var arr=[];if(!this.allEntities())return arr;for(let i=0;i<this.allEntities().length;i++){var entity=this.allEntities()[i];if(!(excludeActive&&entity==this.activeEntity()))arr.push([entity._cellX,entity._cellY])}return arr};BattleManagerTBS.getEntityByBattler=function(battler){var entities=this.allEntitiesWithHidden();for(let i=0;i<entities.length;i++){var entity=entities[i];if(entity.battler()===battler)return entity}};
BattleManagerTBS.getEntitiesByEnemyId=function(enemyId){var result=[];var entities=this.enemyEntities();for(let i=0;i<entities.length;i++){var entity=entities[i];if(entity.battler().enemyId()===enemyId)result.push(entity)}return result};BattleManagerTBS.getEntityByEnemyId=function(enemyId){return this.getEntitiesByEnemyId(enemyId)[0]};
BattleManagerTBS.getEntityByActorId=function(actorId){var entities=this.allyEntities();for(let i=0;i<entities.length;i++){var entity=entities[i];if(entity.battler().actorId()===actorId)return entity}return null};BattleManagerTBS.getEntityByName=function(name){var entities=this.allEntitiesWithHidden();for(let i=0;i<entities.length;i++){var entity=entities[i];var battler=entity.battler();if(battler.isActor()&&battler.name===name||battler.isEnemy()&&battler.originalName()===name)return entity}return null};
BattleManagerTBS.getFlaggedEntity=function(flagId){var entities=this.allEntitiesWithHidden();for(let i=0;i<entities.length;i++){var entity=entities[i];if(entity._flag===flagId)return entity}return null};
BattleManagerTBS.getCellAwayParty=function(scope,party){var results=[];for(let j=0;j<scope.length;j++){var cell=scope[j];var data={dist:0,cell:cell};for(let i=0;i<party.length;i++){var entity=party[i];var dist=LeUtilities.distanceBetweenCells(cell,entity.getCell());data.dist+=dist}results.push(data)}var best=LeUtilities.getMaxInArrayBy(results,"dist");return best?best.cell:null};
BattleManagerTBS.getCellTowardParty=function(scope,party){var results=[];for(let j=0;j<scope.length;j++){var cell=scope[j];var data={dist:0,cell:cell};for(let i=0;i<party.length;i++){var entity=party[i];var dist=LeUtilities.distanceBetweenCells(cell,entity.getCell());data.dist+=dist}results.push(data)}var best=LeUtilities.getMinInArrayBy(results,"dist");return best?best.cell:null};
BattleManagerTBS.getCellNear=function(center,destCell,maxRange){var foundCell=null;var range=1;var reachables=[];var grid=this.getWalkableGridForEasyStar();this._easystar.setGrid(grid);this._easystar.setAcceptableTiles([0]);this._easystar.enableSync();if(!destCell.isSame(center)&&BattleManagerTBS.isCellReachable(destCell,maxRange,center,reachables))return destCell;do{var scope=this.makeCircleScope(destCell,range,null,{});scope=LeUtilities.sortByClosestDistance(center,scope);for(let i=0;i<scope.length;i++){var cell=
scope[i];if(!cell.isSame(center)&&BattleManagerTBS.isCellReachable(cell,maxRange,center,reachables)){foundCell=cell;break}}range+=1}while(!foundCell||foundCell.isSame(center));return foundCell};
BattleManagerTBS.getCellAway=function(center,destCell,maxRange){var range=Math.min(LeUtilities.distanceBetween(center,destCell),maxRange);var scope=[];do{scope=this.makeCircleScope(center,range,null,{}).filter(function(cell){return!cell.isSame(center)&&BattleManagerTBS.isCellReachable(cell,maxRange,center,[])});range++;if(range>=maxRange)break}while(scope.length===0);return LeUtilities.farthestByDistance(destCell,scope)};BattleManagerTBS.centerActiveCell=function(){this.centerCell(this._activeCell)};
BattleManagerTBS.centerCell=function(cell){$gamePlayer.center(cell.x,cell.y)};BattleManagerTBS.scrollRight=function(distance){var oldX=$gameMap._displayX;var oldY=$gameMap._displayY;var oldPX=$gameMap._parallaxX;var oldPY=$gameMap._parallaxY;$gameMap.setDisplayPos(oldX+distance,oldY)};BattleManagerTBS.scrollDown=function(distance){var oldX=$gameMap._displayX;var oldY=$gameMap._displayY;var oldPX=$gameMap._parallaxX;var oldPY=$gameMap._parallaxY;$gameMap.setDisplayPos(oldX,oldY+distance)};
BattleManagerTBS.scrollLeft=function(distance){this.scrollRight(-distance)};BattleManagerTBS.scrollUp=function(distance){this.scrollDown(-distance)};BattleManagerTBS.isAnimationPlaying=function(){return this.getLayer("animations").isAnimationPlaying()||this.allEntities().some(function(entity){return entity._sprite.isAnimationPlaying()})};BattleManagerTBS.isAllEnemyDead=function(){return this.enemyEntities().every(function(entity){return entity.battler().isDead()})};
BattleManagerTBS.evaluateEntityEventConditions=function(str){var aEntity=this.activeEntity();var aBattler=aEntity?aEntity.battler():null;var aAction=this.activeAction();var aObject=aAction?aAction.item():null;var isActiveEntity=function(){if(!aEntity)return false;var queries=arguments;for(let i=0;i<queries.length;i++){var query=queries[i];var result=false;if(query.match(/actor\s(.+)/i))result=aBattler.isActor()&&aBattler.actor().id===Number(RegExp.$1);else if(query.match(/enemy\s(.+)/i))result=aBattler.isEnemy()&&
aBattler.enemy().id===Number(RegExp.$1);else if(query.match(/flag\s(.+)/i))result=aEntity._flag===RegExp.$1;else result=query===(aBattler.isActor()?aBattler.name():aBattler.originalName());if(result)return true}return false};var isActiveSkill=function(){if(!aAction)return;if(!aAction.isSkill())return;var queries=arguments;for(let i=0;i<queries.length;i++){var query=queries[i];var result=false;var number=Number(query);if(isNaN(number))result=aObject.name===query;else result=aObject.id===number;if(result)return true}return false};
return eval(str)};
BattleManagerTBS.evaluateSequenceConditions=function(seqMng,str){var entity=function(query){query=query.trim();if(query==="user")return seqMng.getUser();else if(query.match(/actor\s(.+)/i))return this.getEntityByActorId(Number(RegExp.$1));else if(query.match(/enemy\s(.+)/i))return this.getEntityByEnemyId(Number(RegExp.$1));else if(query.match(/flag\s(.+)/i))return this.getFlaggedEntity(RegExp.$1);return null};var isHit=function(entityTargets){var entities=seqMng.readTargets(entityTargets);return entities.every(function(e){var result=
e.battler().result();if(result)return result.isHit();return false})};var isAnyHit=function(entityTargets){var entities=seqMng.readTargets(entityTargets);return entities.some(function(e){var result=e.battler().result();if(result)return result.isHit();return false})};try{return eval(str)}catch(e){throw new Error("Condition eval error!");}};
BattleManagerTBS.makeTrajectory=function(sx,sy,dx,dy,h,d,type){var mx,my,p1,p2,p3,p4;var xDist=Math.abs(dx-sx);var yDist=Math.abs(dy-sy);var topY=dx>=sy?sy:dy;if(type.match(/(.+)\((\d+)\)/i)){var data=Lecode.S_TBS.Config.Trajectories[RegExp.$1];var dataPoints=data.points.slice();var range=-Number(RegExp.$2);var distance=LeUtilities.distanceBetween({x:sx,y:sy},{x:dx,y:dy});var angle=Math.atan2(dy-sy,dx-sx);var result=[];var startPoint,endPoint;for(let i=0;i<dataPoints.length;i++){var content=dataPoints[i];
var path=[];if(typeof content==="string"){if(content.match(/\((.+)\)/i)){var strTable=RegExp.$1.split(",");var sx1=sx+Number(strTable[0])*distance;var sy1=sy+Number(strTable[1])*range;var dx1=sx+Number(strTable[2])*distance;var dy1=sy+Number(strTable[3])*range;startPoint=LeUtilities.rotatePoint(sx,sy,angle,{x:sx1,y:sy1});endPoint=LeUtilities.rotatePoint(sx,sy,angle,{x:dx1,y:dy1})}if(content.match(/parabola\((.+)\)/i))path=LeUtilities.getPixelsOfJump(startPoint.x,startPoint.y,endPoint.x,endPoint.y,
-range);else if(content.match(/linear\((.+)\)/i))path=LeUtilities.getPixelsOfLine(startPoint.x,startPoint.y,endPoint.x,endPoint.y);if(Math.round(path[0][0])!=startPoint.x||Math.round(path[0][1])!=startPoint.y)path=path.reverse();path.push("control");result=result.concat(path)}}dataPoints=dataPoints.filter(function(content){return typeof content!=="string"});if(angle>Math.PI/2)range*=-1;var pointsArray=dataPoints.join(",").split(",");var points=LeUtilities.getCurvePoints(pointsArray);var coords=[];
for(let i=0;i<points.length;i+=2){var x=sx+points[i]*distance;var y=sy+points[i+1]*range;var newPoint=LeUtilities.rotatePoint(sx,sy,angle,{x:x,y:y});coords.push([newPoint.x,newPoint.y])}coords.push("control");return result.concat(coords)}else if(type==="normal_jump"){mx=sx+(dx-sx)/2;my=sy+(dy-sy)/2-h}else{mx=dx;my=dy}p1={x:sx,y:sy};p2={x:mx,y:my};p3={x:mx,y:my};p4={x:dx,y:dy};var path=LeUtilities.getBezierTrajectory(d,p1,p2,p3,p4);if(path[0][0]!=sx||path[0][1]!=sy)path=path.reverse();path.push("control");
return path};function TBSAiManager(){this.initialize.call(this,arguments)}TBSAiManager.prototype.initialize=function(){this._entity=null;this._battler=null;this._commandRunning=null;this._ifArray=[];this._targetData=null;this._cellTarget=null;this._failureCode="";this._constructionDelay=0};
TBSAiManager.prototype.process=function(entity,aiOptions){if(this.getEnemiesOf(entity.battler(),true).length===0){this.forceEnd();return}this._aiOptions=aiOptions||{};this._entity=entity;this._battler=entity._battler;this._phase=0;this._commands=this.getBehavior().slice();this._commandRunning=null;this._commandNextPhaseCallBack=null;this._commandExtraData={};this._actionBuilding={};this._actionData=null;this._actionDataType=null;this._builtData={};this._isBuilding=true;this._commandPhase="init";this.makeOffenseData();
this.makeHealingData();this.makeSupportData();this.makeMoveData();this.makeSummonData();this.updateEscapeCooldown();this.updateSupportCooldown()};TBSAiManager.prototype.updateEscapeCooldown=function(){if(!this._entity._aiEscapeCount)this._entity._aiEscapeCount=0;if(this._entity._aiEscapeCount>0)this._entity._aiEscapeCount--};TBSAiManager.prototype.updateSupportCooldown=function(){if(!this._entity._aiSupportCount)this._entity._aiSupportCount=0;if(this._entity._aiSupportCount>0)this._entity._aiSupportCount--};
TBSAiManager.prototype.makeOffenseData=function(){var party=this.getEnemiesOf(this._battler,true);var skills=this.getUsableSkills(this._battler);var objects=[];for(let i=0;i<skills.length;i++){var skill=skills[i];if(!this._entity.rpgObject().TagsLetbs.aiNoAttack&&skill.id===this._battler.attackSkillId()||skill.TagsLetbsAi.type.match("offense"))objects.push(skill)}this.makeActionData("offense",party,objects)};
TBSAiManager.prototype.makeHealingData=function(){var party=this.getAlliesOf(this._battler,false);party.push(this._entity);var skills=this.getUsableSkills(this._battler);var objects=[];for(let i=0;i<skills.length;i++){var skill=skills[i];if(skill.TagsLetbsAi.type.match("healing"))objects.push(skill)}this.makeActionData("healing",party,objects)};
TBSAiManager.prototype.makeSupportData=function(){var party=this.getAlliesOf(this._battler,false);party.push(this._entity);var skills=this.getUsableSkills(this._battler);var objects=[];for(let i=0;i<skills.length;i++){var skill=skills[i];if(skill.TagsLetbsAi.type.match("support"))objects.push(skill)}this.makeActionData("support",party,objects)};
TBSAiManager.prototype.makeMoveData=function(){var skills=this.getUsableSkills(this._battler);var objects=[];for(let i=0;i<skills.length;i++){var skill=skills[i];if(skill.TagsLetbsAi.type.match("move"))objects.push(skill)}this.makeActionData("move",[],objects)};
TBSAiManager.prototype.makeSummonData=function(){var skills=this.getUsableSkills(this._battler);var objects=[];for(let i=0;i<skills.length;i++){var skill=skills[i];if(skill.TagsLetbsAi.type.match("summon"))objects.push(skill)}this.makeActionData("summon",[],objects)};TBSAiManager.prototype.updateOffenseActionsBuilding=function(){this.updateActionsBuilding("offense","nbrEnemies")};TBSAiManager.prototype.updateHealingActionsBuilding=function(){this.updateActionsBuilding("healing","nbrAllies")};
TBSAiManager.prototype.updateSupportActionsBuilding=function(){this.updateActionsBuilding("support","nbrAllies")};TBSAiManager.prototype.updateMoveActionsBuilding=function(){this.updateMoveActionsBuilding()};TBSAiManager.prototype.updateSummonActionsBuilding=function(){this.updateSummonActionsBuilding()};
TBSAiManager.prototype.makeActionData=function(type,party,skills){this._builtData[type]=null;this._actionBuilding[type]={};this._actionBuilding[type].objects=skills;this._actionBuilding[type].data=[];var entity=this._entity;this._actionBuilding[type].party=LeUtilities.sortByClosestDistance(entity,party)};
TBSAiManager.prototype.updateMoveActionsBuilding=function(){var object=this._actionBuilding["move"].objects.shift();var user=this._battler;var entity=this._entity;var center=entity.getCell().toCoords();var a=entity.battler();if(!object){this.onActionBuildingEnd("move");return}var data=object.id===user.attackSkillId()?entity.getAttackScopeData():entity.getObjectScopeData(object);var param=BattleManagerTBS.makeObjScopeParam(object,entity,center);var scope=BattleManagerTBS.getScopeFromData(data,center,
param).filter(function(cell){return cell._selectable});if(scope.length===0)return;var closestCellToEnemy=BattleManagerTBS.getCellTowardParty(scope,this.getEnemiesOf(this._battler,true));var farthestCellToEnemy=BattleManagerTBS.getCellAwayParty(scope,this.getEnemiesOf(this._battler,true));var action={};action.type="move";action.cellToMoveTo=entity.getCell();action.userCell=entity.getCell();action.cellTarget=null;action.obj=object;action.targets=[];action.nbrTargets=0;if(eval(object.TagsLetbsAi.escapeCondition)){action.escapeCellTarget=
farthestCellToEnemy;action.escapeDistance=LeUtilities.distanceBetween(center,farthestCellToEnemy)}else{action.escapeCellTarget=null;action.escapeDistance=0}if(eval(object.TagsLetbsAi.rushCondition)){action.rushCellTarget=closestCellToEnemy;action.rushDistance=LeUtilities.distanceBetween(center,closestCellToEnemy)}else{action.rushCellTarget=null;action.rushDistance=0}this._actionBuilding["move"].data.push(action)};
TBSAiManager.prototype.updateSummonActionsBuilding=function(){var object=this._actionBuilding["summon"].objects.shift();var user=this._battler;var entity=this._entity;var center=entity.getCell().toCoords();var a=entity.battler();if(!object){this.onActionBuildingEnd("summon");return}var data=object.id===user.attackSkillId()?entity.getAttackScopeData():entity.getObjectScopeData(object);var param=BattleManagerTBS.makeObjScopeParam(object,entity,center);var scope=BattleManagerTBS.getScopeFromData(data,
center,param).filter(function(cell){return cell._selectable});if(scope.length===0)return;var closestCellToEnemy=BattleManagerTBS.getCellTowardParty(scope,this.getEnemiesOf(this._battler,true));var closestCellToAlly=BattleManagerTBS.getCellTowardParty(scope,this.getAlliesOf(this._battler,true));var closestCellToCaster=BattleManagerTBS.getCellTowardParty(scope,[entity]);var action={};action.type="summon";action.cellToMoveTo=entity.getCell();action.userCell=entity.getCell();action.obj=object;action.targets=
[];action.nbrTargets=0;var summonNear=object.TagsLetbsAi.summonNear;switch(summonNear){case "caster":action.cellTarget=closestCellToCaster;break;case "enemies":action.cellTarget=closestCellToEnemy;break;case "allies":action.cellTarget=closestCellToAlly;break}this._actionBuilding["summon"].data.push(action)};
TBSAiManager.prototype.updateActionsBuilding=function(type,nbrMembers){var object=this._actionBuilding[type].objects.shift();var party=this._actionBuilding[type].party;var entity=this._entity;var center=entity.getCell().toCoords();var a=entity.battler();var opNbrMembers=nbrMembers==="nbrEnemies"?"nbrAllies":"nbrEnemies";if(!object){this.onActionBuildingEnd(type);return}if(object.TagsLetbsAi.maximiseTargets){var possibilities=this.getAoEPossibleMoves(entity,object,center).sort(function(p1,p2){return p1[nbrMembers]>
p2[nbrMembers]?-1:p1[nbrMembers]<p2[nbrMembers]?1:0});if(possibilities.length===0)return;if(type==="offense"&&possibilities[0][nbrMembers]===1||Math.random()<object.TagsLetbsAi.avoidFriendlyFire){possibilities=possibilities.filter(function(p){return p[opNbrMembers]===0});if(possibilities.length===0)return}var best=possibilities[0][nbrMembers];possibilities=possibilities.filter(function(p){return p[nbrMembers]===best});if(possibilities.length>1)possibilities=possibilities.sort(function(p1,p2){var avgHpRate1=
LeUtilities.avgOfArray(p1.targets.map(function(ent){return ent.battler().hpRate()}.bind(this)));var avgHpRate2=LeUtilities.avgOfArray(p2.targets.map(function(ent){return ent.battler().hpRate()}.bind(this)));return avgHpRate1-avgHpRate2}.bind(this));best=LeUtilities.avgOfArray(possibilities[0].targets.map(function(ent){return ent.battler().hpRate()}.bind(this)));possibilities=possibilities.filter(function(p){var avgHpRate=LeUtilities.avgOfArray(p.targets.map(function(ent){return ent.battler().hpRate()}.bind(this)));
return avgHpRate===best}.bind(this));possibilities=possibilities.sort(function(p1,p2){var req1=LeUtilities.distanceBetweenCells(entity.getCell(),p1.moveCell);var req2=LeUtilities.distanceBetweenCells(entity.getCell(),p2.moveCell);return req1-req2}.bind(this));possibilities=possibilities.filter(function(p){for(let i=0;i<p.targets.length;i++){var target=p.targets[i];var b=target.battler();if(eval(object.TagsLetbsAi.useCondition))return true}});var move=possibilities[0];if(!move)return;var action={};
action.type=type;action.requiredMp=LeUtilities.distanceBetweenCells(entity.getCell(),move.moveCell);action.cellToMoveTo=move.moveCell;action.cellTarget=move.actionCell;action.userCell=entity.getCell();action.obj=object;action.targets=move.targets;action.nbrTargets=move[nbrMembers];this._actionBuilding[type].data.push(action)}else for(let i=0;i<party.length;i++){var member=party[i];var b=member.battler();if(eval(object.TagsLetbsAi.useCondition)){var cellToMoveTo=this.getCellToMoveToForAction(entity,
member.getCell(),object,center);if(cellToMoveTo){var action={};action.type=type;action.requiredMp=LeUtilities.distanceBetweenCells(entity.getCell(),cellToMoveTo);action.cellToMoveTo=cellToMoveTo;action.cellTarget=member.getCell();action.userCell=entity.getCell();action.obj=object;action.targets=[member];action.nbrTargets=1;this._actionBuilding[type].data.push(action)}}}};TBSAiManager.prototype.onActionBuildingEnd=function(type){this._builtData[type]=this._actionBuilding[type].data};
TBSAiManager.prototype.getClosestActionCellToTarget=function(cellTarget,obj,center){const entity=this._entity;const data=obj.id===entity._battler.attackSkillId()?entity.getAttackScopeData():entity.getObjectScopeData(obj);let param=BattleManagerTBS.makeObjScopeParam(obj,entity,center);const scope=BattleManagerTBS.getScopeFromData(data,center,param);if(BattleManagerTBS.isCellInScope(cellTarget,scope))return scope.filter((cell)=>{if(cell instanceof TBSCell)return cell.isSame(cellTarget)})[0];const closestCell=
LeUtilities.closestByDistance(cellTarget,scope);const oldActiveCell=BattleManagerTBS._activeCell;BattleManagerTBS._activeCell=closestCell;const aoeData=obj.id===entity._battler.attackSkillId()?entity.getAttackAoEData():entity.getObjectAoEData(obj);const aoeCenter=closestCell.toCoords();param=BattleManagerTBS.makeObjAoEParam(obj,entity,aoeCenter);const aoe=BattleManagerTBS.getScopeFromData(aoeData,aoeCenter,param);const closestCellInAoE=LeUtilities.closestByDistance(cellTarget,aoe);BattleManagerTBS._activeCell=
oldActiveCell;return closestCellInAoE};
TBSAiManager.prototype.getCellToMoveToForAction=function(entity,targetCell,obj,center){var moveParam=BattleManagerTBS.makeMoveScopeParam(entity);var moveData=entity.getMoveScopeData();var scope=BattleManagerTBS.getScopeFromData(moveData,center,moveParam);var closestCell=this.getClosestActionCellToTarget(targetCell,obj,entity.getCell());var exactDistance=LeUtilities.distanceBetweenCells(closestCell,targetCell);scope=scope.filter(function(cell){return cell._walkable&&LeUtilities.distanceBetweenCells(cell,
entity.getCell())===exactDistance}.bind(this));var cellsToCheck=LeUtilities.sortByClosestDistance(entity.getCell(),scope);cellsToCheck=[entity.getCell()].concat(cellsToCheck);var cellToMoveTo=null;while(cellsToCheck.length>0){var cell=cellsToCheck.shift();var currentCenter=cell.toCoords();var oldCell=entity.getCell();entity.setCell(cell);closestCell=this.getClosestActionCellToTarget(targetCell,obj,currentCenter);entity.setCell(oldCell);if(closestCell.isSame(targetCell)&&closestCell._selectable){cellToMoveTo=
cell;break}}return cellToMoveTo};
TBSAiManager.prototype.getAoEPossibleMoves=function(entity,obj,center){const possibilities=[];let scope=BattleManagerTBS.makeMoveScope(entity,true).cells;scope=scope.filter((cell)=>cell._walkable);const enC=[entity.getCell()];let moveScope=[...enC,...scope];while(moveScope.length>0){let moveCell=moveScope.shift();moveCell.toCoords();let oldCell=entity.getCell();entity.setCell(moveCell);let data=obj.id===entity._battler.attackSkillId()?entity.getAttackScopeData():entity.getObjectScopeData(obj);let actionScope=
BattleManagerTBS.makeActionScope(entity,data,obj,true).cells;actionScope=actionScope.filter((cell)=>{if(cell instanceof TBSCell)return!(!cell._selectable||cell.isObstacleForLOS()&&!cell.isThereEntity())});while(actionScope.length>0){let actionCell=actionScope.shift();let aoeData=obj.id===entity._battler.attackSkillId()?entity.getAttackAoEData():entity.getObjectAoEData(obj);let aoeCenter=actionCell.toCoords();let param=BattleManagerTBS.makeObjAoEParam(obj,entity,aoeCenter);let aoe=BattleManagerTBS.getScopeFromData(aoeData,
aoeCenter,param);let entities=BattleManagerTBS.getEntitiesInScope(aoe).filter(function(){return eval(obj.TagsLetbsAi.useCondition)});let nbrAllies=entities.filter(function(ent){return this.isAlly(ent)}.bind(this)).length;let nbrEnemies=entities.filter(function(ent){return this.isEnemy(ent)}.bind(this)).length;if(nbrAllies>0||nbrEnemies>0)possibilities.push({moveCell:moveCell,actionCell:actionCell,nbrAllies:nbrAllies,nbrEnemies:nbrEnemies,targets:entities})}entity.setCell(oldCell)}return possibilities};
TBSAiManager.prototype.getBehavior=function(){const behavior=this._aiOptions.behavior;if(!behavior)return Lecode.S_TBS.Config.AI["default"];else return Lecode.S_TBS.Config.AI[behavior]};TBSAiManager.prototype.currentCommand=function(){return this._commands[this._phase]};TBSAiManager.prototype.nextCommand=function(){this._phase++;this._commandRunning=null;this._commandPhase="init";this._commandNextPhaseCallBack=null;this._commandExtraData={}};
TBSAiManager.prototype.areConditionsOkay=function(){if(this._ifArray.length===0)return true;return!!this._ifArray[this._ifArray.length-1]};TBSAiManager.prototype.update=function(){if(this._isBuilding&&this.updateActionConstruction())return;if(this._commandRunning){this.updateRunningCommand();return}const command=this.currentCommand();if(command)this.runCommand(command);else this.forceEnd()};
TBSAiManager.prototype.updateActionConstruction=function(){if(this._constructionDelay<Lecode.S_TBS.aiProcessDelay){this._constructionDelay++;return true}this._constructionDelay=0;if(!this._builtData["offense"]){this.updateOffenseActionsBuilding();return true}else if(!this._builtData["healing"]){this.updateHealingActionsBuilding();return true}else if(!this._builtData["support"]){this.updateSupportActionsBuilding();return true}else if(!this._builtData["move"]){this.updateMoveActionsBuilding();return true}else if(!this._builtData["summon"]){this.updateSummonActionsBuilding();
return true}this._isBuilding=false;return false};TBSAiManager.prototype.forceEnd=function(){if(this._aiOptions){let callback=this._aiOptions.endCallback;if(callback){callback();return}}BattleManagerTBS.processCommandPass()};
TBSAiManager.prototype.runCommand=function(command){if(command==="else"){this.commandElse();this.nextCommand();return}else if(command==="endif"){this.commandEndIf();this.nextCommand();return}else if(command==="process_behaviors"){this.processBehaviors();this.nextCommand();return}else if(command==="process_requested_action"){this.processRequestedAction();this.nextCommand();return}else if(command==="force_end"){this.forceEnd();return}if(!command.match(/(.+)\s?:\s?(.+)/i)){this.nextCommand();return}var main=
String(RegExp.$1).trim();var paramStr=String(RegExp.$2).trim();var param=LeUtilities.stringSplit(paramStr,",");param.forEach(function(p){p=p.trim().replace(" ","")}.bind(this));if(main==="if"){this.commandIf(paramStr);this.nextCommand();return}if(this.areConditionsOkay()){var functionName=LeUtilities.shrinkTextWithUnderscores(main);var func=eval("this.command"+functionName+".bind(this,param)");func();this._commandRunning=main}else this.nextCommand()};
TBSAiManager.prototype.commandIf=function(condition){var user=this._battler;var entity=this._entity;var canUseOffense=this.func_CanUseOffense.bind(this);var canUseHealing=this.func_CanUseHealing.bind(this);var canUseSupport=this.func_CanUseSupport.bind(this);var canUseEscape=this.func_CanUseEscape.bind(this);var canUseRush=this.func_CanUseRush.bind(this);var isTargetValid=this.func_IsTargetValid.bind(this);var chance=this.func_Chance.bind(this);var failureCode=this.func_FailureCode.bind(this);var battlerInRange=
this.func_BattlerInRange.bind(this);var distanceBetween=this.func_DistanceBetween.bind(this);var distanceToEnemies=this.func_DistanceToEnemies.bind(this);var distanceToAllies=this.func_DistanceToAllies.bind(this);var isInMeleeWith=this.func_IsInMeleeWith.bind(this);var isInMelee=this.func_IsInMelee.bind(this);var pattern=function(str){return this.func_GetPattern()===str}.bind(this);var result=eval(condition);this._ifArray.push(result)};
TBSAiManager.prototype.commandElse=function(){this._ifArray[this._ifArray.length-1]=!this._ifArray.leU_last()};TBSAiManager.prototype.commandEndIf=function(){this._ifArray.pop()};
TBSAiManager.prototype.processBehaviors=function(){if(!this._battler.canMove())return;if(this._battler.isConfused()){if(this.func_CanUseOffense())this.commandCallBehavior(["use_offense"]);return}var order=Lecode.S_TBS.Config.AI.BehaviorsOrder;for(let i=0;i<order.length;i++){var tag=order[i];if(tag==="healing"&&this.func_CanUseHealing()){this.commandCallBehavior(["use_healing"]);break}else if(tag==="escape"&&this.func_CanUseEscape()){this._entity._aiEscapeCount=Lecode.S_TBS.escapeCooldown+1;this.commandCallBehavior(["escape"]);
break}else if(tag==="summon"&&this.func_CanUseSummon()){this._entity._aiSupportCount=Lecode.S_TBS.supportCooldown+1;this.commandCallBehavior(["use_summon"]);break}else if(tag==="support"&&this.func_CanUseSupport()){this.commandCallBehavior(["use_support"]);break}else if(tag==="offense"){if(this.func_CanUseOffense())this.commandCallBehavior(["use_offense"]);else this.commandCallBehavior(["cant_use_offense"]);break}}};
TBSAiManager.prototype.processRequestedAction=function(){var type=this._aiOptions.behaviorType;var requestedTarget=this._aiOptions.entityTarget;this._targetData={};if(requestedTarget)this._targetData.entity=requestedTarget;else{if(type==="offense"){this.commandSearchTarget(["lowest_enemy","100%",type]);if(!this._targetData)this.commandSearchTarget(["closest_enemy","100%",type])}else if(type==="healing"){this.commandSearchTarget(["self","100%",type]);if(!this._targetData)this.commandSearchTarget(["lowest_ally",
"100%",type]);if(!this._targetData)this.commandSearchTarget(["closest_ally","100%",type])}else if(type==="support"){this.commandSearchTarget(["lowest_ally","100%",type]);if(!this._targetData)this.commandSearchTarget(["self","100%",type]);if(!this._targetData)this.commandSearchTarget(["closest_ally","100%",type])}if(!this.func_IsTargetValid()){Lecode.S_TBS.CommandSuccess=false;return}}this.commandSetAction([type,"average"]);var commands=["move_for_action: -","use: defined_action"];commands.reverse();
for(let i=0;i<commands.length;i++)this._commands.splice(this._phase+1,0,commands[i])};TBSAiManager.prototype.commandWait=function(param){var value=Number(param[0]);BattleManagerTBS.wait(value)};TBSAiManager.prototype.commandCallBehavior=function(param){var id=param[0].trim();var commands=Lecode.S_TBS.Config.AI[id].slice();commands.reverse();for(let i=0;i<commands.length;i++)this._commands.splice(this._phase+1,0,commands[i])};
TBSAiManager.prototype.commandSetActionData=function(param){var id=param[0].trim();this._actionDataType=this._builtData[id]};
TBSAiManager.prototype.commandSearchTarget=function(param){var search=param[0];var maxPm=param[1];var dataScope=param[2];this.commandSetActionData([dataScope]);if(maxPm.match(/(.+)%/i))maxPm=Number(RegExp.$1)*.01*this._entity.getMovePoints();else maxPm=Number(maxPm);maxPm=Math.floor(maxPm);if(LeUtilities.isNumeric(maxPm)){maxPm=Math.floor(maxPm);if(maxPm<1)maxPm=1;if(maxPm>this._entity.getMovePoints())maxPm=this._entity.getMovePoints()}var group=this.getGroupFromActionData(maxPm);var focusedEntities=
this.getFocusedEntities(group,dataScope);if(focusedEntities.length>0){var entity=focusedEntities[0];this._targetData={};this._targetData.entity=entity;return}if(search.match(/self/i))group=group.filter(function(entity){return entity===this._entity});else if(search.match(/enemy/i))group=group.filter(function(entity){return this.isEnemy(entity)}.bind(this));else if(search.match(/ally/i))group=group.filter(function(entity){return this.isAlly(entity)}.bind(this));if(search.match(/lowest/i))group=group.sort(function(a,
b){a=a._battler;b=b._battler;return a.hpRate()>b.hpRate()?1:a.hpRate()<b.hpRate()?-1:0});else if(search.match(/closest/i))group=LeUtilities.sortByClosestDistance(this._entity,group);this._targetData=null;if(!group||group.length===0)return;this._targetData={};this._targetData.entity=group[0]};TBSAiManager.prototype.commandDrawMoveScope=function(param){BattleManagerTBS.drawMoveScope(this._entity)};
TBSAiManager.prototype.commandMove=function(param){var search=param[0];var maxPm=param[1];if(!this._entity.canMoveCommand())return;if(maxPm.match(/(.+)%/i))maxPm=Number(RegExp.$1)*.01*this._entity.getMovePoints();else if(maxPm.match(/minimum/i))maxPm=this._actionData.requiredMp;else maxPm=Number(maxPm);if(LeUtilities.isNumeric(maxPm)){maxPm=Math.floor(maxPm);if(maxPm<1)maxPm=1;if(maxPm>this._entity.getMovePoints())maxPm=this._entity.getMovePoints()}if(Lecode.S_TBS.showScopes){this.commandDrawMoveScope();
var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}else BattleManagerTBS.makeMoveScope(this._entity);this._commandPhase="move_scope_wait";this._commandNextPhaseCallBack=this.commandMoveP2.bind(this,param,search,maxPm)};
TBSAiManager.prototype.commandMoveP2=function(param,search,maxPm){var cellTarget;var focusedEntities;if(search.match(/toward_target/i))cellTarget=this._targetData.cellTarget;else if(search.match(/enemies/i)){focusedEntities=this.getFocusedEntities(this.getEnemiesOf(this._battler,true),"offense");if(search.match(/toward/i)&&focusedEntities.length>0)cellTarget=focusedEntities[0].getCell();else cellTarget=LeUtilities.closestByDistance(this._entity,this.getEnemiesOf(this._battler,true)).getCell()}else if(search.match(/allies/i)){focusedEntities=
this.getFocusedEntities(this.getEnemiesOf(this._battler,true),"healing");if(focusedEntities.length===0)focusedEntities=this.getFocusedEntities(this.getEnemiesOf(this._battler,true),"support");if(search.match(/toward/i)&&focusedEntities.length>0)cellTarget=focusedEntities[0].getCell();else cellTarget=LeUtilities.closestByDistance(this._entity,this.getAlliesOf(this._battler,true)).getCell()}var scope=BattleManagerTBS.moveScope().cells;scope=scope.filter(function(cell){return cell._walkable&&LeUtilities.distanceBetweenCells(cell,
this._entity.getCell())<=maxPm}.bind(this));var destCell;if(search.match(/toward/i))destCell=BattleManagerTBS.closestWalkableCellTo(cellTarget,scope);else destCell=BattleManagerTBS.farthestWalkableCellTo(cellTarget,scope);BattleManagerTBS.setCursorCell(destCell);if(!BattleManagerTBS.movePath()||BattleManagerTBS.movePath().length===0){this.nextCommand();return}if(Lecode.S_TBS.showScopes){var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}this._commandPhase="move_selection_wait";this._commandNextPhaseCallBack=
this.commandMoveP3.bind(this);this._commandExtraData.destCell=destCell;this._commandExtraData.savedParams=param.slice()};TBSAiManager.prototype.commandMoveP3=function(){BattleManagerTBS.centerCell(this._entity.getCell());this._entity.processMovement(BattleManagerTBS.movePath());this._commandPhase="moving"};
TBSAiManager.prototype.commandMoveForAction=function(param){var cellToMoveTo=this._actionData.cellToMoveTo;if(cellToMoveTo.isSame(this._entity.getCell()))return;if(!this._entity.canMoveCommand())return;if(Lecode.S_TBS.showScopes){this.commandDrawMoveScope();var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}else BattleManagerTBS.makeMoveScope(this._entity);this._commandPhase="move_scope_wait";this._commandNextPhaseCallBack=this.commandMoveForActionP2.bind(this,param)};
TBSAiManager.prototype.commandMoveForActionP2=function(param){var cellToMoveTo=this._actionData.cellToMoveTo;BattleManagerTBS.setCursorCell(cellToMoveTo);if(Lecode.S_TBS.showScopes){var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}this._commandPhase="move_selection_wait";this._commandNextPhaseCallBack=this.commandMoveP3.bind(this);this._commandExtraData.destCell=cellToMoveTo;this._commandExtraData.savedParams=param};
TBSAiManager.prototype.commandSetAction=function(param){var type=param[0];var priority=param[1];var possibilities=[];var data;if(type.match(/move/i)){data=this._builtData["move"];var action,cellType;if(priority.match(/toward/i)){action=data.sort(function(data1,data2){var value1=data1.rushCellDistance;var value2=data2.rushCellDistance;return value1<value2?1:value1>value2?-1:0}.bind(this))[0];cellType=action.rushCellTarget}else{action=data.sort(function(data1,data2){var value1=data1.escapeCellDistance;
var value2=data2.escapeCellDistance;return value1<value2?1:value1>value2?-1:0}.bind(this))[0];cellType=action.escapeCellTarget}this._actionData=action;this._actionData.cellTarget=cellType;return}if(type.match(/summon/i)){data=this._builtData["summon"];this._actionData=LeUtilities.getRandomValueInArray(data);return}var searchedEntity=this._targetData.entity;if(type.match(/damage/i)||type.match(/offense/i))data=this._builtData["offense"];else if(type.match(/healing/i))data=this._builtData["healing"];
else if(type.match(/support/i))data=this._builtData["support"];for(let i=0;i<data.length;i++){var action=data[i];if(action.targets.indexOf(searchedEntity)>=0)possibilities.push(action)}possibilities=possibilities.sort(function(data1,data2){var value1=data1.nbrTargets;var value2=data2.nbrTargets;return value1<value2?1:value1>value2?-1:0}.bind(this));var bestNbrTargets=possibilities[0].nbrTargets;if(Math.random()<.8)possibilities=possibilities.filter(function(p){return p.nbrTargets===bestNbrTargets});
if(type.match(/healing/i))possibilities=this.sortActionsByDmg(possibilities).reverse();else if(type.match(/damage/i))possibilities=this.sortActionsByDmg(possibilities);var action=null;if(priority.match(/average/i)){var array=[];for(let i=0;i<possibilities.length;i++){var p=possibilities[i];var obj=p.obj;for(let j=0;j<(obj._leTbsRating||1);j++)array.push(p)}action=LeUtilities.getRandomValueInArray(array)}else if(priority.match(/best/i))action=possibilities[0];else action=possibilities.leU_last();this._actionData=
action};TBSAiManager.prototype.sortActionsByDmg=function(actionsData){return actionsData.sort(function(data1,data2){var obj1=data1.obj;var obj2=data2.obj;var dummyAction1=new TBS_FloatingAction(this._battler,false);dummyAction1.setItemObject(obj1);var dummyAction2=new TBS_FloatingAction(this._battler,false);dummyAction2.setItemObject(obj2);var value1=dummyAction1.evaluate();var value2=dummyAction2.evaluate();return value1<value2?1:value1>value2?-1:0}.bind(this))};
TBSAiManager.prototype.commandUse=function(param){var info=param[0];if(!this._entity.canObjCommand())return;var obj;if(info.match(/defined_action/i))obj=this._actionData.obj;if(obj){BattleManagerTBS.activeAction().setItemObject(obj);if(BattleManagerTBS.activeAction().isAttack())if(Lecode.S_TBS.showScopes)BattleManagerTBS.drawAttackScope(this._entity);else BattleManagerTBS.makeAttackScope(this._entity);else if(Lecode.S_TBS.showScopes)BattleManagerTBS.drawSkillScope(this._entity,obj);else BattleManagerTBS.makeSkillScope(this._entity,
obj);if(Lecode.S_TBS.showScopes){var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}this._commandPhase="obj_scope_wait";this._commandNextPhaseCallBack=this.commandUseP2.bind(this,obj)}};
TBSAiManager.prototype.commandUseP2=function(obj){var cellTarget=this._actionData.cellTarget;var center=this._entity.getCell().toCoords();var cell=this.getClosestActionCellToTarget(cellTarget,obj,center);BattleManagerTBS.setCursorCell(cell);this._entity.lookAt(cell);if(Lecode.S_TBS.showScopes){var wait=Lecode.S_TBS.aiWaitTime;BattleManagerTBS.wait(wait)}this._commandPhase="obj_selection_wait";this._commandNextPhaseCallBack=this.commandUseP3.bind(this,obj)};
TBSAiManager.prototype.commandUseP3=function(obj){BattleManagerTBS.getLayer("scopes").clear();BattleManagerTBS.clearActionSelection();BattleManagerTBS.processAction();BattleManagerTBS._subPhase="ai";this._commandPhase="action_start"};
TBSAiManager.prototype.commandPass=function(param){var look=param[0];switch(look){case "look_closest_enemy":this._entity.lookClosestBattler(this.getEnemiesOf(this._battler,true));break;case "look_closest_ally":this._entity.lookClosestBattler(this.getAlliesOf(this._battler,true));break}this.forceEnd()};TBSAiManager.prototype.commandScript=function(param){var script=param[0];eval(script)};
TBSAiManager.prototype.getFocusedEntities=function(group,type){var focusData=[];group.forEach(function(entity){var priority=entity.isFocusedByAI(type);if(priority)focusData.push({entity:entity,priority:priority})});return focusData.sort(function(da,db){return db.priority-da.priority}).map(function(data){return data.entity})};
TBSAiManager.prototype.updateRunningCommand=function(){var functionName=LeUtilities.shrinkTextWithUnderscores(this._commandRunning);var func=eval("this.updateCommand"+functionName);if(func)func.call(this);else this.nextCommand()};TBSAiManager.prototype.onMoveInterrupted=function(){this.process(this._entity,this._aiOptions)};TBSAiManager.prototype.updateCommandWait=function(){if(!BattleManagerTBS.isWaiting())this.nextCommand()};
TBSAiManager.prototype.updateCommandMove=function(){var phase=this._commandPhase;switch(phase){case "move_scope_wait":case "move_selection_wait":if(!BattleManagerTBS.isWaiting())this._commandNextPhaseCallBack();break;case "moving":if(!this._entity.isMoving()){BattleManagerTBS.onActiveEntityMoveEnd();BattleManagerTBS._subPhase="ai";if(this._entity.getCell()===this._commandExtraData.destCell)this.nextCommand();else if(this._entity.canMoveCommand())this.commandMove(this._commandExtraData.savedParams);
else this.onMoveInterrupted()}break;default:this.nextCommand();break}};
TBSAiManager.prototype.updateCommandMoveForAction=function(){var phase=this._commandPhase;switch(phase){case "move_scope_wait":case "move_selection_wait":if(!BattleManagerTBS.isWaiting())this._commandNextPhaseCallBack();break;case "moving":if(!this._entity.isMoving()){BattleManagerTBS.onActiveEntityMoveEnd();BattleManagerTBS._subPhase="ai";if(this._entity.getCell()===this._commandExtraData.destCell)this.nextCommand();else if(this._entity.canMoveCommand())this.commandMoveForAction();else this.onMoveInterrupted()}break;
default:this.nextCommand();break}};
TBSAiManager.prototype.updateCommandUse=function(){var phase=this._commandPhase;switch(phase){case "obj_scope_wait":case "obj_selection_wait":if(!BattleManagerTBS.isWaiting())this._commandNextPhaseCallBack();break;case "action_start":BattleManagerTBS.executeAction();BattleManagerTBS._subPhase="ai";this._commandPhase="invoking";break;case "invoking":if(!BattleManagerTBS.anySequenceRunning()){if(!Lecode.S_TBS.requestedAction)BattleManagerTBS.onActionEnd();else BattleManagerTBS.onRequestedActionEnd(this._entity);BattleManagerTBS._subPhase=
"ai";this.nextCommand()}break;default:this.nextCommand();break}};TBSAiManager.prototype.BM=function(){return BattleManagerTBS};TBSAiManager.prototype.func_Chance=function(value){return Math.random()<value*.01};TBSAiManager.prototype.func_IsTargetValid=function(){return this._targetData!=null};TBSAiManager.prototype.func_FailureCode=function(){return this._failureCode};
TBSAiManager.prototype.func_CanUseOffense=function(){if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["offense"].length<=0){this._failureCode="out_of_range";return false}return true};TBSAiManager.prototype.func_CanUseHealing=function(){if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["healing"].length<=0){this._failureCode="unable_to_heal";return false}return true};
TBSAiManager.prototype.func_CanUseSupport=function(){if(this._entity._aiSupportCount===0)return false;if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["support"].length<=0){this._failureCode="unable_to_use_support";return false}return true};
TBSAiManager.prototype.func_CanUseSummon=function(){if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["summon"].length<=0){this._failureCode="unable_to_use_summon";return false}return true};
TBSAiManager.prototype.func_CanUseEscape=function(){if(this._entity._aiEscapeCount===0)return false;if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["move"].filter(function(action){return!!action.escapeCellTarget}).length<=0){this._failureCode="unable_to_escape_w_skill";return false}return true};
TBSAiManager.prototype.func_CanUseRush=function(){if(this.getUsableSkills(this._battler).length===0){this._failureCode="no_usable_skill";return false}if(this._builtData["move"].filter(function(action){return!!action.rushCellTarget}).length<=0){this._failureCode="unable_to_rush_w_skill";return false}return true};TBSAiManager.prototype.func_ReadTarget=function(target){if(target.match(/defined_target/i))if(this._actionData)return this._actionData.cellTarget;return null};
TBSAiManager.prototype.func_ReadAction=function(action){if(action.match(/defined_action/i))if(this._actionData)return this._actionData.obj;return null};
TBSAiManager.prototype.func_BattlerInRange=function(target,action){var cellTarget=this.func_ReadTarget(target);var obj=this.func_ReadAction(action);if(!cellTarget||!!obj)return false;var data=obj.id===this._battler.attackSkillId()?this._entity.getAttackScopeData():this._entity.getObjectScopeData(obj);var center=this._entity.getCell().toCoords();var param=BattleManagerTBS.makeObjScopeParam(obj,this._entity,center);var scope=BattleManagerTBS.getScopeFromData(data,center,param);for(let i=0;i<scope.length;i++){var cell=
scope[i];if(cellTarget.isSame(cell))return true}return false};TBSAiManager.prototype.func_DistanceBetween=function(target){var cellTarget=this.func_ReadTarget(target);if(!cellTarget)return 999;return LeUtilities.distanceBetweenCells(cellTarget,this._entity.getCell())};
TBSAiManager.prototype.func_DistanceToEnemies=function(){var scope=BattleManagerTBS.makeMoveScope(this._entity,true).cells;scope=scope.filter(function(cell){return cell._walkable}.bind(this));if(scope.length===0)scope=[this._entity.getCell()];var cell=BattleManagerTBS.getCellTowardParty(scope,this.getEnemiesOf(this._battler,true));var result=LeUtilities.distanceBetweenCells(cell,this._entity.getCell());return result};
TBSAiManager.prototype.func_DistanceToAllies=function(){var scope=BattleManagerTBS.makeMoveScope(this._entity,true).cells;scope=scope.filter(function(cell){return cell._walkable}.bind(this));if(scope.length===0)scope=[this._entity.getCell()];var cell=BattleManagerTBS.getCellTowardParty(scope,this.getAlliesOf(this._battler,true));return LeUtilities.distanceBetweenCells(cell,this._entity.getCell())};
TBSAiManager.prototype.func_IsInMeleeWith=function(target){var cellTarget=this.func_ReadTarget(target);if(!cellTarget)return false;target=cellTarget.getEntity();if(!target)return false;if(target.isNonActiveSummon())return false;return LeUtilities.distanceBetweenCells(cellTarget,this._entity.getCell())<=1};TBSAiManager.prototype.func_IsInMelee=function(){return this.func_DistanceToEnemies()<=1};TBSAiManager.prototype.func_GetPattern=function(){return this._entity.getAiPattern()};
TBSAiManager.prototype.getEnemiesOf=function(battler,needAlive){if(battler.hasConfusionStateAttackAlly())return this.getAlliesOf(battler,needAlive);if(battler.hasConfusionStateAttackAnyone()&&Math.randomInt(2)===0)return this.getAlliesOf(battler,needAlive);var group=battler.isActor()?BattleManagerTBS.enemyEntities():BattleManagerTBS.allyEntities();if(needAlive)return group.filter(function(ent){return!ent.battler().isDead()});else return group};
TBSAiManager.prototype.getAlliesOf=function(battler,needAlive){if(battler.hasConfusionStateAttackEnemy())return this.getEnemiesOf(battler,needAlive);if(battler.hasConfusionStateAttackAnyone()&&Math.randomInt(2)===0)return this.getEnemiesOf(battler,needAlive);var group=battler.isEnemy()?BattleManagerTBS.enemyEntities():BattleManagerTBS.allyEntities();if(needAlive)return group.filter(function(ent){return!ent.battler().isDead()});else return group};
TBSAiManager.prototype.isAlly=function(entity){if(entity.isSummon())return entity._summonData.caster.battler().isActor()===this._battler.isActor();return this._battler.isActor()===entity.battler().isActor()};TBSAiManager.prototype.isEnemy=function(entity){return!this.isAlly(entity)};
TBSAiManager.prototype.getUsableSkills=function(user){var item=this._aiOptions.item;if(item)return[item];if(user.isActor())return user.usableSkills().concat($dataSkills[user.attackSkillId()]);var actionList=user.enemy().actions.filter(function(a){return user.isActionValid(a)});var skills=[];for(let i=0;i<actionList.length;i++){var action=actionList[i];var skill=$dataSkills[action.skillId];if(user.canUse(skill)){skill._leTbsRating=action.rating;skills.push(skill)}}return skills};
TBSAiManager.prototype.getGroupFromActionData=function(maxPm){var group=[];var data=this._actionDataType;for(let i=0;i<data.length;i++)if(data[i].requiredMp<=maxPm)for(let j=0;j<data[i].targets.length;j++){var target=data[i].targets[j];if(!target._battler.isDead())group.push(target)}return group};function TBSSequenceManager(){this.initialize.call(this,arguments)}
TBSSequenceManager.prototype.initialize=function(){this._sequence={name:"",table:[]};this._command={instruction:"",waitWhile:function(){return false},update:function(){},onEnd:function(){}};this._users=[];this._lastBattlerTargets=[];this._lastCellTargets=[];this._savedEntities={};this._savedCells={};this._sequenceQueue=[];this._obj=null;this._affectedTargets=[]};
TBSSequenceManager.prototype.start=function(sequenceId,user,action){var sequence=user.overloadedSequence(sequenceId);this._sequence={name:sequenceId,table:this.parseSequence(sequence).slice(),started:true};this._users=[user];this._affectedTargets=[];this._action=action;if(action)this._obj=action.item();this._ifArray=[]};
TBSSequenceManager.prototype.startWithData=function(sequence,user){this._sequence={name:"<improvised>",table:sequence,started:true};this._users=[user];this._affectedTargets=[];this._ifArray=[]};TBSSequenceManager.prototype.append=function(sequence,user,action){this._sequenceQueue.push([sequence,user,action])};TBSSequenceManager.prototype.unshift=function(sequence,user,action){this._sequenceQueue.unshift([sequence,user,action])};TBSSequenceManager.prototype.getUser=function(){return this._users.leU_last()};
TBSSequenceManager.prototype.getObj=function(){return this._obj};TBSSequenceManager.prototype.parseSequence=function(id){if(id instanceof Array)return id;if(id.match(/\((.+)\)/i)){var args=RegExp.$1.split(",");id=id.replace(/\(.+\)/i,"");var sequence=Lecode.S_TBS.Config.Sequences[id].slice();for(let i=0;i<sequence.length;i++){var line=sequence[i];for(let j=0;j<args.length;j++){var arg=args[j];sequence[i]=line.replace("$"+String(j+1),arg)}}return sequence}return Lecode.S_TBS.Config.Sequences[id]};
TBSSequenceManager.prototype.update=function(){if(!this.isRunning())return;this._command.update();var canContinue=!this._command.waitWhile();if(canContinue)this._command.onEnd();else return;var command=this._sequence.table.shift();if(command)this.runCommand(command);else this.endOfSequence()};
TBSSequenceManager.prototype.runCommand=function(command){if(command.match(/if\s?:\s?(.+)/i))this.runIfCommand(RegExp.$1);else if(command.trim()==="else")this.runElseCommand();else if(command.trim()==="end_if")this.runEndIfCommand();else if(command.match(/for_each\s?:\s?(.+)/i))this.runForEachCommand(RegExp.$1);else if(command.trim()==="end_for")this.runEndForCommand();else if(command.match(/(.+)\s?:\s?(.+)/i))if(this.areConditionsOkay()){var main=String(RegExp.$1).trim();var param=LeUtilities.stringSplit(String(RegExp.$2).trim(),
",");for(let i=0;i<param.length;i++){var line=param[i].trim();if(line.match(/\[(.+)\]/i)){var str=RegExp.$1;if(str.match(/(.+)\.tag\.(.+)/i)){var obj;switch(RegExp.$1){case "obj":obj=this.getObj();break;default:break}if(obj)line=obj._TagsLetbs[RegExp.$2]}}param[i]=line}var functionName=LeUtilities.shrinkTextWithUnderscores(main);var func=function(){};try{func=eval("this.command"+functionName+".bind(this,param)")}catch(e){}var result=func();var requireWait=result.requestWait;if(result){if(requireWait)this._command.waitWhile=
result.waitWhile||function(){return false};else this._command.waitWhile=function(){return false};this._command.update=result.update||function(){};this._command.onEnd=result.onEnd||function(){}}}};TBSSequenceManager.prototype.runIfCommand=function(condition){var result=BattleManagerTBS.evaluateSequenceConditions(this,condition);this._ifArray.push(result)};TBSSequenceManager.prototype.runElseCommand=function(){this._ifArray[this._ifArray.length-1]=!this._ifArray.leU_last()};
TBSSequenceManager.prototype.runEndIfCommand=function(){this._ifArray.pop()};TBSSequenceManager.prototype.runForEachCommand=function(query){if(query.match(/cell in (.+)/i))this._forEachCellArray=this.readCellTargets(RegExp.$1)};TBSSequenceManager.prototype.areConditionsOkay=function(){if(this._ifArray.length===0)return true;return!!this._ifArray[this._ifArray.length-1]};
TBSSequenceManager.prototype.commandPlayPose=function(param){var targets=this.readTargets(param[0]);var pose=param[1];var afterPose=param[2];var wait=false;if(afterPose==="wait"){wait=true;afterPose=null}targets.forEach(function(target){target.requestPlayPose();target.setPose(pose,afterPose)}.bind(this));return{requestWait:wait,waitWhile:function(targets){return targets.some(function(entity){return!entity.isRequestedPosePlayed()})}.bind(this,targets)}};
TBSSequenceManager.prototype.commandSetFrame=function(param){var targets=this.readTargets(param[0]);var pose=param[1];var frame=param[2];targets.forEach(function(target){target.setFixedPose(pose,frame)}.bind(this));return{}};
TBSSequenceManager.prototype.commandSetSpeed=function(param){var targets=this.readTargets(param[0]);var value=param[1];if(value==="reset")targets.forEach(function(target){target.initializeSpeed()}.bind(this));else if(value.match(/\+(.+)/i))targets.forEach(function(target){target.changeSpeed(Number(RegExp.$1))}.bind(this));else if(value.match(/\-(.+)/i))targets.forEach(function(target){target.changeSpeed(-Number(RegExp.$1))}.bind(this));else targets.forEach(function(target){target.setSpeed(Number(value))}.bind(this));
return{}};
TBSSequenceManager.prototype.commandSetFrameDelay=function(param){var targets=this.readTargets(param[0]);var value=param[1];if(value==="reset")targets.forEach(function(target){target.sprite().initializeFrameDelay()}.bind(this));else if(value.match(/\+(.+)/i))targets.forEach(function(target){target.sprite().changeFrameDelay(Number(RegExp.$1))}.bind(this));else if(value.match(/\-(.+)/i))targets.forEach(function(target){target.sprite().changeFrameDelay(-Number(RegExp.$1))}.bind(this));else targets.forEach(function(target){target.sprite().setFrameDelay(Number(value))}.bind(this));return{}};
TBSSequenceManager.prototype.commandSpriteShake=function(param){var targets=this.readTargets(param[0]);var power=Number(param[1]);var duration=Number(param[2]);var wait=param[3]==="true";for(let i=0;i<targets.length;i++)targets[i].startShake(power,duration);if(wait)return this.commandWait([duration]);return{}};
TBSSequenceManager.prototype.commandSpriteProp=function(param){var targets=this.readTargets(param[0]);var prop=param[1];var value=Number(param[2]);for(let i=0;i<targets.length;i++)targets[i]._sprite[prop]=value;return{}};TBSSequenceManager.prototype.commandWait=function(param){var duration=Number(param[0]);BattleManagerTBS.wait(duration);return{requestWait:true,waitWhile:function(){return BattleManagerTBS.isWaiting()}}};
TBSSequenceManager.prototype.commandEffects=function(param){var targets=this.readTargets(param[0]);var objData=param[1];var obj=this.readObject(objData);var hitAnim=this.readAnimation(param[2]);var animDelay=Number(param[3]||0);var wait=String(param[4]||"false");wait=wait==="true";BattleManagerTBS.invokeObjEffects(this.getUser(),obj,targets,hitAnim,animDelay);this._affectedTargets=this._affectedTargets.concat(targets);return{requestWait:wait,waitWhile:function(){return BattleManagerTBS.isAnimationPlaying()}.bind(this)}};
TBSSequenceManager.prototype.commandMapEffects=function(param){var cellTargets=this.readCellTargets(param[0]);var obj=this.readObject(param[1]);var hitAnim=this.readAnimation(param[2]);var animDelay=Number(param[3]||0);var wait=String(param[4]||"false");wait=wait=="true";BattleManagerTBS.invokeObjEffectsOnMap(this.getUser(),obj,cellTargets,hitAnim,animDelay);var targets=cellTargets.map(function(cell){return cell.getEntity()});this._affectedTargets=this._affectedTargets.concat(targets);return{requestWait:wait,
waitWhile:function(){return BattleManagerTBS.isAnimationPlaying()}.bind(this)}};TBSSequenceManager.prototype.commandValidateDeath=function(param){var targets=this.readTargets(param[0]);for(let i=0;i<targets.length;i++)targets[i].validateDeath();return{}};
TBSSequenceManager.prototype.commandAnim=function(param){var targets=this.readTargets(param[0]);var anim=this.readAnimation(param[1]);var animDelay=Number(param[2]||0);var wait=String(param[3]||"false");wait=wait=="true";targets.forEach(function(target){target.newAnimation(anim,false,animDelay)}.bind(this));return{requestWait:wait,waitWhile:function(){return BattleManagerTBS.isAnimationPlaying()}.bind(this)}};
TBSSequenceManager.prototype.commandMapAnim=function(param){var cellTargets=this.readCellTargets(param[0]);var anim=this.readAnimation(param[1]);var animDelay=Number(param[2]||0);var wait=String(param[3]||"false");wait=wait=="true";cellTargets.forEach(function(cell){BattleManagerTBS.getLayer("animations").newAnimation(anim,false,animDelay,cell)}.bind(this));return{requestWait:wait,waitWhile:function(){return BattleManagerTBS.isAnimationPlaying()}.bind(this)}};
TBSSequenceManager.prototype.commandDirectionalAnim=function(param){var targetData1=param[0];var targetData2=param[1];var anim_2=param[2];var anim_4=param[3];var anim_6=param[4];var anim_8=param[5];var animDelay=Number(param[6]||0);var wait=String(param[7]||"false");var targets1=this.readTargets(targetData1);if(targets1.length>0){var anim;switch(targets1[0].getDir()){case 2:anim=anim_2;break;case 4:anim=anim_4;break;case 6:anim=anim_6;break;case 8:anim=anim_8;break}param[0]=targetData2;param[1]=anim;
param[2]=animDelay;param[3]=wait;return this.commandAnim(param)}return{}};TBSSequenceManager.prototype.commandWeaponAnim=function(param){var targets=this.readTargets(param[0]);var type=param[1];var wtype=param[2];targets.forEach(function(entity){entity.startWeaponAnimation(type,wtype)});return{}};TBSSequenceManager.prototype.commandLookAt=function(param){var targets=this.readTargets(param[0]);var cellTargets=this.readCellTargets(param[1]);if(cellTargets.length>0){var cell=cellTargets[0];targets.forEach(function(target){target.lookAt(cell)}.bind(this))}return{}};
TBSSequenceManager.prototype.commandLookAway=function(param){var targets=this.readTargets(param[0]);var cellTargets=this.readCellTargets(param[1]);if(cellTargets.length>0){var cell=cellTargets[0];targets.forEach(function(target){target.lookAway(cell)}.bind(this))}return{}};TBSSequenceManager.prototype.commandSetDirection=function(param){var targets=this.readTargets(param[0]);var dir=Number(param[1]);targets.forEach(function(entity){entity.setDir(dir)});return{}};
TBSSequenceManager.prototype.commandMoveToCell=function(param){var targets=this.readTargets(param[0]);var cellTargets=this.readCellTargets(param[1]);var isInstant=String(param[2]||"false")==="true";if(targets.length>0&&cellTargets.length>0){var target=targets[0];var cell=cellTargets[0];if(isInstant)target.teleport(cell);else{var path=BattleManagerTBS.getPathFromAToB(target._cellX,target._cellY,cell.x,cell.y,"walkable");target.processMovement(path)}}return{requestWait:true,waitWhile:function(targets){return targets.some(function(entity){return entity.isMoving()})}.bind(this,
targets)}};TBSSequenceManager.prototype.commandSwitchCells=function(param){var target1=this.readTargets(param[0])[0];var target2=this.readTargets(param[1])[0];if(target1&&target2)target1.switchCellWith(target2);return{}};
TBSSequenceManager.prototype.commandJumpToCell=function(param){var targets=this.readTargets(param[0]);var cellTargets=this.readCellTargets(param[1]);var height=param[2]||120;if(targets.length>0&&cellTargets.length>0){var target=targets[0];var cell=cellTargets[0];var sx=target.x;var sy=target.y;var dx=cell.x*$gameMap.tileWidth();var dy=cell.y*$gameMap.tileHeight();var trajectory=BattleManagerTBS.makeTrajectory(sx,sy,dx,dy,height,60,"normal_jump");target.followTrajectory(trajectory,cell)}return{requestWait:true,
waitWhile:function(targets){return targets.some(function(entity){return entity._sprite.hasTrajectory()})}.bind(this,targets)}};TBSSequenceManager.prototype.commandMoveStraight=function(param){var targets=this.readTargets(param[0]);var nbr=Number(param[1]||1);targets.forEach(function(target){target.forceMoveStraight(nbr,false)}.bind(this));return{requestWait:true,waitWhile:function(targets){return targets.some(function(entity){return entity.isMoving()})}.bind(this,targets)}};
TBSSequenceManager.prototype.commandPush=function(param){var targets=this.readTargets(param[0]);var sourceCell=this.readCellTargets(param[1])[0];var distance=Number(param[2]);var damage=param[3]!=="false";for(let i=0;i<targets.length;i++){var entity=targets[i];entity.forcePush(this.getUser(),sourceCell,distance,this.getObj(),damage)}return{requestWait:true,waitWhile:function(targets){return targets.some(function(entity){return entity.isMoving()})}.bind(this,targets)}};
TBSSequenceManager.prototype.commandPull=function(param){var targets=this.readTargets(param[0]);var sourceCell=this.readCellTargets(param[1])[0];var distance=Number(param[2]);var damage=param[3]!=="false";for(let i=0;i<targets.length;i++){var entity=targets[i];entity.forcePull(this.getUser(),sourceCell,distance,this.getObj(),damage)}return{requestWait:true,waitWhile:function(targets){return targets.some(function(entity){return entity.isMoving()})}.bind(this,targets)}};
TBSSequenceManager.prototype.commandReachTarget=function(param){var user=this.readTargets(param[0])[0];var target=this.readTargets(param[1])[0];var type=param[2];var endIf=(param[3]||"true")==="true";if(target)if(endIf&&!user.reachEntity(target,type))this.endOfSequence();return{}};
TBSSequenceManager.prototype.commandProjectile=function(param){var id=param[0];var cellTargets1=this.readCellTargets(param[1]);var cellTargets2=this.readCellTargets(param[2]);cellTargets2=LeUtilities.uniqArray(cellTargets2);if(cellTargets1.length>0&&cellTargets2.length>0){var cellStart=cellTargets1[0];cellTargets2.forEach(function(cellEnd){var w=$gameMap.tileWidth();var h=$gameMap.tileHeight();var sx=cellStart.x*w+w/2;var sy=cellStart.y*h+h/2;var dx=cellEnd.x*w+w/2;var dy=cellEnd.y*h+h/2;var effects=
{obj:param[3],anim:param[4],user:this.getUser()};BattleManagerTBS._projectilesManager.newProjectile(id,[sx,sy],[dx,dy],effects)},this)}return{requestWait:true,waitWhile:function(){return BattleManagerTBS._projectilesManager.isRunning()}}};
TBSSequenceManager.prototype.commandSaveEntities=function(param){var id=param[0];var targets=this.readTargets(param[1]);var option=param[2];this._savedEntities[id]=targets;if(option==="shift")this._savedEntities[id]=[targets.shift()];else this._savedEntities[id]=targets;return{}};
TBSSequenceManager.prototype.commandSaveCells=function(param){var id=param[0];var targets=this.readCellTargets(param[1]);var option=param[2];if(option==="shift")this._savedCells[id]=[targets.shift()];else this._savedCells[id]=targets;return{}};
TBSSequenceManager.prototype.commandFilterEntities=function(param){var oriTargets=this.readTargets(param[0]);var targetsToExclude=this.readTargets(param[1]);var id=param[2];this._savedEntities[id]=oriTargets.filter(function(e){return targetsToExclude.indexOf(e)===-1});return{}};
TBSSequenceManager.prototype.commandFilterCells=function(param){var oriTargets=this.readCellTargets(param[0]);var targetsToExclude=this.readCellTargets(param[1]);var id=param[2];this._savedCells[id]=oriTargets.filter(function(e){return targetsToExclude.indexOf(e)===-1});return{}};TBSSequenceManager.prototype.commandSetCursor=function(param){var targets=this.readCellTargets(param[0]);var cell=targets[0];BattleManagerTBS.setCursorCell(cell);return{}};
TBSSequenceManager.prototype.commandCall=function(param){var seq=param[0];var times=Number(param[1]||1);var seqArray=param[2]||Lecode.S_TBS.Config.Sequences[seq].slice();for(let i=0;i<times;i++)for(let j=seqArray.length-1;j>=0;j--){var command=seqArray[j];this._sequence.table.unshift(command)}return{}};
TBSSequenceManager.prototype.commandCallForEveryCell=function(param){var seq=param[0];var aoe=this.readCellTargets(param[1]);var sortType=param[2]||"random";if(sortType==="close->far")aoe=LeUtilities.sortByClosestDistance(this.getUser().getCell(),aoe);else if(sortType==="far->close")aoe=LeUtilities.sortByFarthestDistance(this.getUser().getCell(),aoe);else if(sortType==="random")aoe=aoe.filter(function(cell){return true});if(aoe.length>0){this._savedCells["every_cell_base"]=aoe;var seqArray=param[3]||
Lecode.S_TBS.Config.Sequences[seq].slice();for(let i=0;i<aoe.length;i++){for(let j=seqArray.length-1;j>=0;j--){var command=seqArray[j];this._sequence.table.unshift(command)}this._sequence.table.unshift("save_cells: every_cell, saved(every_cell_base), shift")}}return{}};
TBSSequenceManager.prototype.commandCallForEveryEntity=function(param){var seq=param[0];var entities=this.readTargets(param[1]);var sortType=param[2]||"random";if(sortType==="close->far")entities=entities.sort(function(a,b){var obj_aDist=LeUtilities.distanceBetween(a.getCell(),this.getUser().getCell());var obj_bDist=LeUtilities.distanceBetween(b.getCell(),this.getUser().getCell());return obj_aDist>obj_bDist?1:obj_aDist<obj_bDist?-1:0}.bind(this));else if(sortType==="far->close")entities=entities.sort(function(a,
b){var obj_aDist=LeUtilities.distanceBetween(a.getCell(),this.getUser().getCell());var obj_bDist=LeUtilities.distanceBetween(b.getCell(),this.getUser().getCell());return obj_aDist>obj_bDist?-1:obj_aDist<obj_bDist?1:0}.bind(this));else if(sortType==="random")entities=entities.filter(function(cell){return true});if(entities.length>0){this._savedEntities["every_entity_base"]=entities;var seqArray=param[3]||Lecode.S_TBS.Config.Sequences[seq].slice();for(let i=0;i<entities.length;i++){for(let j=seqArray.length-
1;j>=0;j--){var command=seqArray[j];this._sequence.table.unshift(command)}this._sequence.table.unshift("save_entities: every_entity, saved(every_entity_base), shift")}}return{}};
TBSSequenceManager.prototype.commandBounce=function(param){var seq=param[0];var startEntity=param[1];var maxTargets=Number(param[2]);var aoe=param[3];var targetType=param[4]||"all";var seqArray=Lecode.S_TBS.Config.Sequences[seq].slice();startEntity=this.readTargets(startEntity)[0];var entities1=[this.getUser()];var entities2=[startEntity];var targeted=[this.getUser(),startEntity];var targets=0;var entity1=startEntity;do{var center=entity1.getCell().toCoords();var size=BattleManagerTBS.getScopeFromData(aoe,
center,{});var entities=BattleManagerTBS.getEntitiesInScope(size).filter(function(entity){if(targeted.indexOf(entity)>-1)return false;if(targetType==="all")return true;if(targetType==="enemy"&&this.isEnemy(entity.battler()))return true;if(targetType==="ally"&&this.isAlly(entity.battler()))return true;return false},this);if(entities.length===0)break;var entity2=LeUtilities.getRandomValueInArray(entities);targeted.push(entity2);entities1.push(entity1);entities2.push(entity2);entity1=entity2;targets++}while(targets!=
maxTargets);this._savedEntities["bounce_entities1"]=entities1;this._savedEntities["bounce_entities2"]=entities2;for(let i=0;i<=targets;i++){for(let j=seqArray.length-1;j>=0;j--){var command=seqArray[j];this._sequence.table.unshift(command)}this._sequence.table.unshift("save_entities: bounce_entity1, saved(bounce_entities1), shift");this._sequence.table.unshift("save_entities: bounce_entity2, saved(bounce_entities2), shift")}return{}};
TBSSequenceManager.prototype.commandDelegateCall=function(param){var seq=param[0];var targets=this.readTargets(param[1]);if(targets.length>0){this._users.push(targets[0]);param[1]=1;this.commandCall(param)}return{}};TBSSequenceManager.prototype.commandEndDelegatedCall=function(){this._users.pop();return{}};TBSSequenceManager.prototype.commandAskCall=function(param){var seq=param[0];var targets=this.readTargets(param[1]);for(let i=0;i<targets.length;i++)targets[i].startSequence(seq);return{}};
TBSSequenceManager.prototype.commandUseSkill=function(param){var targets=this.readTargets(param[0]);var skillId=param[1];var skill=$dataSkills[skillId];for(let i=0;i<targets.length;i++)BattleManagerTBS.forceAction(skill,targets[i]);return{}};TBSSequenceManager.prototype.commandScript=function(param){var code=param[0];var user=this.getUser();eval(code);return{}};
TBSSequenceManager.prototype.commandCommonEvent=function(param){var id=Number(param[1]);var wait=param[2]==="wait";var list=$dataCommonEvents[id].list;if(list)$gameTroop._interpreter.setupInQueue(list);return{}};TBSSequenceManager.prototype.commandPluginCommand=function(param){var args=param.join(" ").split(",  ");$gameTroop._interpreter.pluginCommand("LeTBS",args)};
TBSSequenceManager.prototype.commandShowHuds=function(param){var scene=LeUtilities.getScene();for(let i=0;i<param.length;i++){var hudStr=param[i];scene.showHud(hudStr)}return{}};TBSSequenceManager.prototype.commandHideHuds=function(param){var scene=LeUtilities.getScene();for(let i=0;i<param.length;i++){var hudStr=param[i];scene.hideHud(hudStr)}return{}};
TBSSequenceManager.prototype.commandShowPicture=function(param){var picId=param[0];var filename=param[1];var xStr=param[2];var yStr=param[3];BattleManagerTBS._spriteset.showPicture(picId,filename,xStr,yStr);return{}};TBSSequenceManager.prototype.commandFreePicture=function(param){var picId=param[0];BattleManagerTBS._spriteset.freePicture(picId);return{}};
TBSSequenceManager.prototype.commandPictureOpacity=function(param){var picId=param[0];var opacity=Number(param[1]);var time=param[2]?Number(param[2]):0;var wait=param[3]==="true";var picture=BattleManagerTBS._spriteset.getPicture(picId);LeUtilities.tweenProperty(picture,"opacity",opacity,time).start();return{requestWait:wait,waitWhile:function(picture,opacity){return picture.opacity!==opacity}.bind(this,picture,opacity)}};
TBSSequenceManager.prototype.commandMovePicture=function(param){var picId=param[0];var xStr=param[1];var yStr=param[2];var time=param[3];var wait=param[4]==="true";var picture=BattleManagerTBS._spriteset.getPicture(picId);var coords=BattleManagerTBS._spriteset.movePicture(picId,xStr,yStr,time);return{waitWhile:function(picture,coords){return picture.x!=coords.x||picture.y!=coords.y}.bind(this,picture,coords)}};
TBSSequenceManager.prototype.commandFlashPicture=function(param){var picId=param[0];var r=Number(param[1]);var g=Number(param[2]);var b=Number(param[3]);var gray=Number(param[4]);var duration=Number(param[5]);var wait=param[6]==="true";var picture=BattleManagerTBS._spriteset.getPicture(picId);picture.leU_startFlash([r,g,b,gray],duration);return{waitWhile:function(picture){return picture._leU_flashDuration>0}.bind(this,picture)}};
TBSSequenceManager.prototype.commandScreenTone=function(param){var r=param[0];var g=param[1];var b=param[2];var gray=param[3];var duration=Number(param[4]);if(r==="clear")$gameScreen.clearTone();else $gameScreen.startTint([Number(r),Number(g),Number(b),Number(gray)],duration);return{}};
TBSSequenceManager.prototype.commandScreenFlash=function(param){var r=param[0];var g=param[1];var b=param[2];var gray=param[3];var duration=Number(param[4]);if(r==="clear")$gameScreen.clearFlash();else $gameScreen.startFlash([Number(r),Number(g),Number(b),Number(gray)],duration);return{}};TBSSequenceManager.prototype.commandMapLayer=function(param){var spriteset=BattleManagerTBS._spriteset;if(Graphics.isWebGL());return{}};
TBSSequenceManager.prototype.commandPlaySe=function(param){var audio={};audio.name=param[0];audio.pitch=Number(param[1])||100;audio.volume=Number(param[2])||90;audio.pan=Number(param[3])||0;AudioManager.playSe(audio);return{}};TBSSequenceManager.prototype.baseAoE=function(){return BattleManagerTBS._actionAoE};TBSSequenceManager.prototype.baseCursorCell=function(){return BattleManagerTBS._activeCell};
TBSSequenceManager.prototype.readTargets=function(data,deepRead){if(deepRead==null)deepRead=true;if(data instanceof Array)return data;if(deepRead){var cells=this.readCellTargets(data,false);if(cells.length>0)return BattleManagerTBS.getEntitiesInScope(cells)}var targets=[];var cursorCell=this.baseCursorCell();var aoe=[];if(data.match(/\{(.+)\}/i)){var aoeKey=RegExp.$1;if(aoeKey==="aoe")aoe=this.baseAoE();else if(aoeKey==="cursor")aoe=[cursorCell];else{var param={user:this.getUser(),dir:this.getUser().getDirectionTo(cursorCell),
need_check_los:false,exclude_center:false,line_of_sight:false};aoe=BattleManagerTBS.getScopeFromData(aoeKey,cursorCell,param)}}var aoeTargets=BattleManagerTBS.getEntitiesInScope(aoe);var aoeAllyTargets=aoeTargets.filter(function(entity){return this.isAlly(entity.battler())}.bind(this));var aoeEnemyTargets=aoeTargets.filter(function(entity){return this.isEnemy(entity.battler())}.bind(this));var aoeDeadTargets=aoeTargets.filter(function(entity){return entity.battler().isDead()});var aoeDeadAllyTargets=
aoeAllyTargets.filter(function(entity){return entity.battler().isDead()});var aoeDeadEnemyTargets=aoeEnemyTargets.filter(function(entity){return entity.battler().isDead()});var cursorTarget=[cursorCell.getEntity()];var cursorAllyTarget=cursorTarget[0]&&this.isAlly(cursorTarget[0].battler())?cursorTarget:[];var cursorEnemyTarget=cursorTarget[0]&&this.isEnemy(cursorTarget[0].battler())?cursorTarget:[];var cursorDeadTarget=cursorTarget[0]&&cursorTarget[0].battler().isDead()?cursorTarget:[];var cursorDeadAllyTarget=
cursorAllyTarget[0]>0&&cursorAllyTarget[0].battler().isDead()?cursorAllyTarget:[];var cursorDeadEnemyTarget=cursorEnemyTarget[0]>0&&cursorEnemyTarget[0].battler().isDead()?cursorEnemyTarget:[];if(data.match(/^user$/i))targets=[this.getUser()];else if(data.match(/^all$/i))BattleManagerTBS.allEntities().forEach(function(entity){targets.push(entity)});else if(data.match(/^allies$/i))BattleManagerTBS.allEntities().forEach(function(entity){if(this.isAlly(entity.battler()))targets.push(entity)}.bind(this));
else if(data.match(/^enemies$/i))BattleManagerTBS.allEntities().forEach(function(entity){if(this.isEnemy(entity.battler()))targets.push(entity)}.bind(this));else if(data.match(/^active_entity$/i))targets=[BattleManagerTBS.activeEntity()];else if(data.match(/^cursor_battler$/i))targets=cursorTarget;else if(data.match(/^cursor_ally$/i))targets=cursorAllyTarget;else if(data.match(/^cursor_enemy$/i))targets=cursorEnemyTarget;else if(data.match(/^saved\((.+)\)$/i)&&this._savedEntities[RegExp.$1])targets=
this._savedEntities[RegExp.$1];else if(data.match(/^\{.+\}_battlers$/i))targets=aoeTargets;else if(data.match(/^\{.+\}_allies$/i))targets=aoeAllyTargets;else if(data.match(/^\{.+\}_enemies$/i))targets=aoeEnemyTargets;else if(data.match(/^(\d+)_battlers_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoeTargets,Number(RegExp.$1));else if(data.match(/^(\d+)_allies_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoeAllyTargets,Number(RegExp.$1));else if(data.match(/^(\d+)_enemies_in_\{.+\}$/i))targets=
LeUtilities.getXRandomValuesInArray(aoeEnemyTargets,Number(RegExp.$1));else if(data.match(/^\{.+\}_dead_battlers$/i))targets=aoeDeadTargets;else if(data.match(/^\{.+\}_dead_allies$/i))targets=aoeDeadAllyTargets;else if(data.match(/^\{.+\}_dead_enemies$/i))targets=aoeDeadEnemyTargets;else if(data.match(/^(\d+)_dead_battlers_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoeDeadTargets,Number(RegExp.$1));else if(data.match(/^(\d+)_dead_allies_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoeDeadAllyTargets,
Number(RegExp.$1));else if(data.match(/^(\d+)_dead_enemies_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoeDeadEnemyTargets,Number(RegExp.$1));else if(data.match(/^cursor_dead_battler/i))targets=cursorDeadTarget;else if(data.match(/^cursor_dead_ally$/i))targets=cursorDeadAllyTarget;else if(data.match(/^cursor_dead_enemy$/i))targets=cursorDeadEnemyTarget;else if(data.match(/^battler_toward_user$/i)){var cell=this.getUser().getForwardCell();if(cell){var target=cell.getEntity();if(target)targets=
[target]}}return targets};
TBSSequenceManager.prototype.readCellTargets=function(data,deepRead){if(deepRead==null)deepRead=true;if(data instanceof Array)return data;if(deepRead){var entities=this.readTargets(data,false);if(entities.length>0)return entities.map(function(entity){return entity.getCell()})}var targets=[];var cursorCell=this.baseCursorCell();var aoe=[];if(data.match(/\{(.+)\}/i)){var aoeKey=RegExp.$1;if(aoeKey==="aoe")aoe=this.baseAoE();else if(aoeKey==="cursor")aoe=[cursorCell];else{var param={user:this.getUser(),
dir:this.getUser().getDirectionTo(cursorCell),need_check_los:false,exclude_center:false,line_of_sight:false};aoe=BattleManagerTBS.getScopeFromData(aoeKey,cursorCell,param)}}if(data.match(/^(\d+)_cells_in_\{.+\}$/i))targets=LeUtilities.getXRandomValuesInArray(aoe,Number(RegExp.$1));else if(data.match(/^cursor_cell$/i))targets=[cursorCell];else if(data.match(/^user_cell$/i))targets=[this.getUser().getCell()];else if(data.match(/^\{.+\}_ally_cells$/i))targets=aoe.filter(function(cell){var e=cell.getEntity();
if(e)return this.isAlly(e.battler());return false}.bind(this));else if(data.match(/^\{.+\}_enemy_cells$/i))targets=aoe.filter(function(cell){var e=cell.getEntity();if(e)return this.isEnemy(e.battler());return false}.bind(this));else if(data.match(/^battlers_cells$/i))BattleManagerTBS.allEntities().forEach(function(entity){targets.push(entity.getCell())}.bind(this));else if(data.match(/^ally_cells$/i))BattleManagerTBS.allEntities().forEach(function(entity){if(this.isAlly(entity.battler()))targets.push(entity.getCell())}.bind(this));
else if(data.match(/^enemy_cells$/i))BattleManagerTBS.allEntities().forEach(function(entity){if(this.isEnemy(entity.battler()))targets.push(entity.getCell())}.bind(this));else if(data.match(/^last_targets$/i))targets=this._lastCellTargets;else if(data.match(/^saved\((.+)\)$/i))targets=this._savedCells[RegExp.$1]||[];else if(data.match(/^\{(.+)\}$/i))targets=aoe;return targets};
TBSSequenceManager.prototype.readObject=function(data){if(data.match(/current_obj/i))return this._obj;else if(data.match(/skill\((.+)\)/i))return $dataSkills[Number(RegExp.$1)];else if(data.match(/item\((.+)\)/i))return $dataItems[Number(RegExp.$1)];return null};
TBSSequenceManager.prototype.readAnimation=function(data){if(data.match(/obj_anim/i))if(this._action.isAttack())return BattleManagerTBS.activeEntity().getAttackAnimation();else return this._action.item().animationId;else if(data.match(/collapse_anim/i))return"collapse_anim";return parseInt(data)};
TBSSequenceManager.prototype.endOfSequence=function(){this._sequence.name="";this._sequence.table=[];this._sequence.finished=true;this._command={instruction:"",waitWhile:function(){return false},update:function(){},onEnd:function(){}};this._savedEntities={};this._savedCells={};var data=this._sequenceQueue.shift();if(data){this.start(data[0],data[1],data[2]);this.update()}else{BattleManagerTBS.onPrimarySequenceEnd(this);this._affectedTargets=[]}};
TBSSequenceManager.prototype.isRunning=function(){return this._sequence.started&&!this._sequence.finished};TBSSequenceManager.prototype.isAlly=function(battler){return this.getUser().battler().isActor()&&battler.isActor()||this.getUser().battler().isEnemy()&&battler.isEnemy()};TBSSequenceManager.prototype.isEnemy=function(battler){return!this.isAlly(battler)};function TBSProjectilesManager(){this.initialize.apply(this,arguments)}
TBSProjectilesManager.prototype.initialize=function(layer){this._layer=layer;this._projectiles=[];this._running=false};TBSProjectilesManager.prototype.isRunning=function(){return this._projectiles.length>0};TBSProjectilesManager.prototype.newProjectile=function(id,start,end,effects){var proj=new TBSProjectileSprite(id,start,end,effects);this._projectiles.push(proj);this._layer.addChild(proj)};TBSProjectilesManager.prototype.update=function(){this.destoryProjectiles()};
TBSProjectilesManager.prototype.updateProjectiles=function(){for(let i=0;i<this._projectiles.length;i++)this._projectiles[i].update()};TBSProjectilesManager.prototype.destoryProjectiles=function(){this._projectiles=this._projectiles.filter(function(proj){if(proj.finished()){this.triggerProjectileEffects(proj);this._layer.removeChild(proj);return false}return true}.bind(this))};
TBSProjectilesManager.prototype.triggerProjectileEffects=function(proj){var effects=proj._effects;if(effects.obj){var seqMng=effects.user._sequenceManager;var end=proj._end;var w=$gameMap.tileWidth();var h=$gameMap.tileHeight();var x=end[0]/w-1/2;var y=end[1]/h-1/2;var cell=BattleManagerTBS.getCellAt(x,y);var obj=effects.obj;var hitAnim=effects.anim;var animDelay=0;var wait="false";seqMng.commandMapEffects([[cell],obj,hitAnim,animDelay,wait])}};
function TBSProjectileSprite(){this.initialize.apply(this,arguments)}TBSProjectileSprite.prototype=Object.create(Sprite_Base.prototype);TBSProjectileSprite.prototype.constructor=TBSProjectileSprite;TBSProjectileSprite.prototype.initialize=function(id,start,end,effects,trajType){Sprite_Base.prototype.initialize.call(this);this._start=start;this._end=end;this._trajectory=[];this._speedFrame=0;this._effects=effects;this.readData(id);this.iniPositions();this.makeTrajectory()};
TBSProjectileSprite.prototype.readData=function(id){var data=Lecode.S_TBS.Config.Projectiles[id];if(data.filename)this.bitmap=ImageManager.loadLeTBSProjectile(data.filename);else if(data.anim){this.bitmap=new Bitmap(data.anim[1],data.anim[2]);this.startAnimation(data.anim[0])}this._trajectoryType=data.trajectory||"curved_jump(50)";this._speed=data.speed||3;this._adaptAngle=data.adapt_angle||false;this.anchor.x=.5;this.anchor.y=.5};
TBSProjectileSprite.prototype.iniPositions=function(){this.x=this._start[0];this.y=this._start[1]};
TBSProjectileSprite.prototype.makeTrajectory=function(){var sx=this._start[0];var sy=this._start[1];var dx=this._end[0];var dy=this._end[1];var type=this._trajectoryType;this._trajectory=BattleManagerTBS.makeTrajectory(sx,sy,dx,dy,0,60,type);var opts={easing:TWEEN.Easing.Sinusoidal.In};var distance=LeUtilities.distanceBetween({x:sx,y:sy},{x:dx,y:dy});var time=distance*30/this._speed;LeUtilities.tweenProperty(this,"_speedFrame",this._trajectory.length-1,time,opts).start()};
TBSProjectileSprite.prototype.update=function(){Sprite_Base.prototype.update.call(this);if(!this.finished()){this.updateAngle();this.updateMove()}};TBSProjectileSprite.prototype.updateMove=function(){var frame=Math.round(this._speedFrame);if(frame>=this._trajectory.length-1){frame=this._trajectory.length-1;this._finished=true}var newPos=this._trajectory[frame];if(newPos!=="control"){this.x=newPos[0];this.y=newPos[1]}};
TBSProjectileSprite.prototype.updateAngle=function(){var sx,sy,dx,dy;sx=this.x;sy=this.y;if(this._adaptAngle==="to_control_points"){var frame=Math.round(this._speedFrame);var controlPos;for(let i=frame;i<this._trajectory.length;i++)if(this._trajectory[i]==="control"){controlPos=this._trajectory[i-1];break}if(controlPos){dx=controlPos[0];dy=controlPos[1]}else{dx=this._end[0];dy=this._end[1]}}else if(this._adaptAngle==="to_target"){dx=this._end[0];dy=this._end[1]}else if(this._adaptAngle){var topFrame=
parseInt(this._trajectory.length/2);if(this._speedFrame>topFrame){dx=this._end[0];dy=this._end[1]}else{var topCoord=this._trajectory[topFrame];dx=topCoord[0];dy=topCoord[1]}}if(dx&&dy){var rotation=Math.atan2(dy-sy,dx-sx);this.rotation=rotation}};TBSProjectileSprite.prototype.startAnimation=function(animation){animation=$dataAnimations[animation];var sprite=new Sprite_ProjectileAnimation;sprite.setup(this,animation);this.addChild(sprite);this._animationSprites.push(sprite)};
TBSProjectileSprite.prototype.finished=function(){return this._finished};function Sprite_ProjectileAnimation(){this.initialize.apply(this,arguments)}Sprite_ProjectileAnimation.prototype=Object.create(Sprite_Animation.prototype);Sprite_ProjectileAnimation.prototype.constructor=Sprite_ProjectileAnimation;Sprite_ProjectileAnimation.prototype.initialize=function(){Sprite_Animation.prototype.initialize.call(this)};
Sprite_ProjectileAnimation.prototype.update=function(){Sprite_Animation.prototype.update.call(this);if(!this.isPlaying()&&this._animation)this.setupDuration()};Sprite_ProjectileAnimation.prototype.setup=function(target,animation){this._target=target;this._animation=animation;this._mirror=false;this._delay=false;if(this._animation){this.remove();this.setupRate();this.setupDuration();this.loadBitmaps();this.createSprites()}};
Sprite_ProjectileAnimation.prototype.updatePosition=function(){this.x=0;this.y=0};Sprite_ProjectileAnimation.prototype.updateCellSprite=function(sprite,cell){Sprite_Animation.prototype.updateCellSprite.call(this,sprite,cell);sprite.rotation+=this._target.rotation*Math.PI/180};
class TBSCell{constructor(x,y){this.x=x;this.y=y;this._regionId=-1;this._type=null;this._event=null;this._visible=false;this._opacity=0}select(){BattleManagerTBS._activeCell=this}getEntity(){const entities=BattleManagerTBS.allEntities()||[];for(const entity of entities)if(entity&&entity._cell.isSame(this))return entity;return null}getEvent(){return null}isSame(otherCell){return otherCell&&this.x===otherCell.x&&this.y===otherCell.y}isImpassableTile(){const x=this.x;const y=this.y;if(!$gameMap.isValid(x,
y))return true;if(!$gameMap.isPassable(x,y,2))return true;if(!$gameMap.isPassable(x,y,4))return true;if(!$gameMap.isPassable(x,y,6))return true;return!$gameMap.isPassable(x,y,8)}isObstacle(){if(this.isThereEntity()||this._regionId===Lecode.S_TBS.obstacleRegionId||this._regionId===Lecode.S_TBS.freeObstacleRegionId)return true}isObstacleForLOS(){if(this._regionId===Lecode.S_TBS.obstacleRegionId)return true;let entity=this.getEntity();if(entity)return!entity.isPassable();const tbsEvent=this.getEvent();
return!!(tbsEvent&&tbsEvent.isObstacleForLOS())}isThereEntity(){return this.getEntity()!=null}isFree(){return!this.isObstacle()}regionId(){return this._regionId}toCoords(){return{x:this.x,y:this.y}}toArray(){return[this.x,this.y]}}
class SpriteCursorTBS extends UHPD_Sprite{constructor(){super()}initialize(){super.initialize();this.texture=$gameResources["HUD"].textures["MapCursor.png"];this.cellX=this.cellY=0;this._leU_loopFlash=true;this._leU_loopFlashData={color:[255,255,255,255],duration:30}}hide(){this.visible=false}show(){this.visible=true}}function TBSTurnOrderVisual(){this.initialize.apply(this,arguments)}
function TBSEntity(){this.initialize.apply(this,arguments);Object.defineProperty(this,"x",{get:function(){return this._posX},set:function(value){this.setPosition(value,this.y)},configurable:true});Object.defineProperty(this,"y",{get:function(){return this._posY},set:function(value){this.setPosition(this.x,value)},configurable:true})}
TBSEntity.prototype.initialize=function(battler,layer){this._battler=battler;this._cell=null;this._cellX=0;this._cellY=0;this._moving=false;this._movePoints=0;this._movingDistance=[0,0];this._movePath=[];this._movingNextCell=null;this._moveReducePoints=false;this._movePerformed=false;this._actionPerformed=false;this._dead=false;this._flag=null;this._isMouseOver=false;this._turnHidden=false;this.createSprite(battler,layer);this.createSpriteValues();this.createComponents();this.setMovePoints();this.initializeSpeed()};
TBSEntity.prototype.createSprite=function(battler,layer){this._sprite=new TBSEntity_Sprite(battler,this);this._layer=layer;layer.addChild(this._sprite)};TBSEntity.prototype.createSpriteValues=function(){this._posX=0;this._posY=0;this._dir=2;this._lastDir=2;this._pose=this.defaultPose();this._afterPose=this.defaultPose();this._poseLoop=false;this._fixedPose=null};TBSEntity.prototype.createComponents=function(){this._sequenceManager=new TBSSequenceManager};
TBSEntity.prototype.getTiedEvents=function(){var ids=this.battler().collectLeTBSTags("tiedEvents");return ids.map(function(id){var e=new Game_CommonEvent(id);return new TBSEvent(e)})};TBSEntity.prototype.initializeSpeed=function(){this.setSpeed(Lecode.S_TBS.battlersMoveSpeed)};TBSEntity.prototype.setSpeed=function(speed){this._speed=speed};TBSEntity.prototype.changeSpeed=function(speed){this._speed+=speed};
TBSEntity.prototype.destroy=function(){var sprites=this._sprite._animationSprites;for(let i=0;i<sprites.length;i++){var anim=sprites[i];BattleManagerTBS.getLayer("animations").removeChild(anim)}this._layer.removeChild(this._sprite)};TBSEntity.prototype.startSequence=function(id,action){this._sequenceManager.start(id,this,action)};TBSEntity.prototype.executeSequence=function(sequence){this._sequenceManager.startWithData(sequence,this)};TBSEntity.prototype.runningSequence=function(){return this._sequenceManager._sequenceName};
TBSEntity.prototype.callSequence=function(id){if(this._sequenceManager.isRunning())this._sequenceManager.commandCall([id,1]);else this.startSequence(id)};TBSEntity.prototype.appendSequence=function(id,action){if(this._sequenceManager.isRunning())this._sequenceManager.append(id,this,action);else this.startSequence(id,action)};TBSEntity.prototype.unshiftSequence=function(id,action){if(this._sequenceManager.isRunning())this._sequenceManager.unshift(id,this,action);else this.startSequence(id,action)};
TBSEntity.prototype.requestPlayPose=function(){this._requestPlayPose=true};TBSEntity.prototype.isRequestedPosePlayed=function(){return!this._requestPlayPose};TBSEntity.prototype.defaultPose=function(){return"idle"};
TBSEntity.prototype.setPose=function(pose,afterPose){this._fixedPose=null;this._pose=pose;this._afterPose=afterPose||this.defaultPose();this._poseLoop=afterPose===pose;this._sprite.updatePose();this._sprite.resetFrameCount();this._sprite.setFixedFrame(null);this._sprite.updateBitmap();this._sprite.updatePosition()};
TBSEntity.prototype.setFixedPose=function(pose,frame){this._pose=pose;this._sprite.updatePose();if(frame==="last")frame=this._sprite._maxFrame[this._sprite.getPose()];this._fixedPose=pose;this._afterPose=null;this._poseLoop=false;this._sprite.resetFrameCount();this._sprite.setFixedFrame(Number(frame));this._sprite.updateBitmap();this._sprite.updatePosition()};
TBSEntity.prototype.onPosePlayed=function(oldPose){if(this._fixedPose){this._pose=this._fixedPose;this._sprite.updatePose();return}if(this._poseLoop)this.setPose(oldPose,oldPose);else{this.setPose(this._afterPose);this._afterPose=this.defaultPose()}this._requestPlayPose=false};TBSEntity.prototype.setDir=function(dir){if(![2,4,6,8].contains(dir))return;this._lastDir=this.getDir();this._dir=dir;this._sprite.update()};TBSEntity.prototype.getDir=function(){return this._dir};
TBSEntity.prototype.setCell=function(cell){var x=cell.x*$gameMap.tileWidth();var y=cell.y*$gameMap.tileHeight();this.setPosition(x,y);this._cellX=cell.x;this._cellY=cell.y;this._cell=cell;if(this._event&&Lecode.S_TBS.moveEntityEvents)this._event.setPosition(cell.x,cell.y)};TBSEntity.prototype.setPosition=function(x,y){this._posX=x;this._posY=y};TBSEntity.prototype.shiftPosition=function(x,y){this._posX+=x;this._posY+=y};TBSEntity.prototype.update=function(){this.checkDeath();this.updateMove();this.checkMouseEvents()};
TBSEntity.prototype.updateSprite=function(){this._sprite.update()};TBSEntity.prototype.checkDeath=function(){if(!this._sequenceManager.isRunning()){if(this._battler.isDead()&&!this._dead)this.onDeath();if(!this._battler.isDead()&&this._dead)this.onRevive()}};TBSEntity.prototype.onBattleStart=function(){this._battler.onBattleStart();this.setMovePoints()};
TBSEntity.prototype.onTurnStart=function(){this._battler.clearResult();this.setMovePoints();this.callSequence("turn_start");this._turnPlayed=false;this._sprite._leU_loopFlash=true;this._sprite._leU_loopFlashData={color:[255,255,255,255],duration:20};setTimeout(function(sprite){sprite._leU_loopFlash=false;sprite.leU_clearFlash()}.bind(this,this._sprite),1E3)};
TBSEntity.prototype.onTurnEnd=function(){this._battler.onTurnEnd();this.addPopup();this._battler.clearResult();this.setMovePoints();this._turnPlayed=true;this._movePerformed=false;this._actionPerformed=false};TBSEntity.prototype.onDeath=function(){if(this.runningSequence()==="damaged")this.appendSequence("dead");else this.startSequence("dead")};TBSEntity.prototype.validateDeath=function(){this._dead=true;BattleManagerTBS.onEntityDeath(this)};
TBSEntity.prototype.onRevive=function(){this._dead=false;this.appendSequence("revived");BattleManagerTBS.onEntityRevive(this)};TBSEntity.prototype.onDamage=function(user){this.addPopup();this.checkDeath()};TBSEntity.prototype.onActionStart=function(id,fastSequence,action){};TBSEntity.prototype.onObjectEffects=function(user,obj){this.applyMovePointsAlteration(obj)};TBSEntity.prototype.onNewState=function(state){this.checkFilenameChange(state);this.applyMovePointsAlteration(state)};
TBSEntity.prototype.onStateErased=function(state){this.applyStateErasedAnimation(state);this.checkFilenameChange(state);this.restoreMovePointsAlteration(state)};TBSEntity.prototype.applyStateErasedAnimation=function(state){var id=state.TagsLetbs.erasedAnimation;if(id)this.newAnimation(id)};TBSEntity.prototype.applyMovePointsAlteration=function(obj){var main=obj.TagsLetbs.movePoints_Add||0;var rate=obj.TagsLetbs.movePoints_Rate||0;var nbr=rate*this.getMovePoints()+main;this.changeMovePoints(nbr)};
TBSEntity.prototype.restoreMovePointsAlteration=function(obj){var main=obj.TagsLetbs.movePoints_Add||0;var rate=obj.TagsLetbs.movePoints_Rate||0;var nbr=rate*this.getMovePoints()+main;this.changeMovePoints(-nbr)};TBSEntity.prototype.checkFilenameChange=function(state){var needChange=!!state.TagsLetbsSprite;if(needChange)this.applyFilenameChange()};TBSEntity.prototype.applyFilenameChange=function(){this.sprite().createBitmaps();this.sprite().resetFrameCount();this.sprite().updateBitmap();BattleManagerTBS._turnOrderVisual.refresh()};
TBSEntity.prototype.hideTurn=function(){this._turnHidden=true};TBSEntity.prototype.showTurn=function(){this._turnHidden=false;this._layer.addChild(this._sprite)};TBSEntity.prototype.isTurnHidden=function(){return!!this._turnHidden};TBSEntity.prototype.checkMouseEvents=function(){var triggered=false;if(this.isMouseOverMe()){if(!this._isMouseOver){this._isMouseOver=true;this.onMouseOver()}this.whileMouseOver()}if(!this.isMouseOverMe()){if(this._isMouseOver)this.onMouseOut();this._isMouseOver=false}};
TBSEntity.prototype.isMouseOverMe=function(){var data=TouchInput._leTBSMoveData;return this._sprite.getBounds().contains(data.x,data.y)};TBSEntity.prototype.onMouseOver=function(){};TBSEntity.prototype.onMouseOut=function(){};TBSEntity.prototype.whileMouseOver=function(){};
TBSEntity.prototype.lookAt=function(cell){if(!cell)return;const downD=cell.y-this._cellY;const upD=this._cellY-cell.y;const rightD=cell.x-this._cellX;const leftD=this._cellX-cell.x;const maxD=LeUtilities.getMaxInArray([downD,upD,rightD,leftD]);switch(maxD){case downD:this.setDir(2);break;case upD:this.setDir(8);break;case leftD:this.setDir(4);break;case rightD:this.setDir(6);break}};
TBSEntity.prototype.lookAway=function(cell){this.lookAt(cell);switch(this.getDir()){case 2:this.setDir(8);break;case 4:this.setDir(6);break;case 6:this.setDir(4);break;case 8:this.setDir(2);break}};TBSEntity.prototype.getDirectionTo=function(cell){const oldDir=this.getDir();this.lookAt(cell);const dir=this.getDir();this.setDir(oldDir);return dir};TBSEntity.prototype.getDirectionAwayFrom=function(cell){const oldDir=this.getDir();this.lookAway(cell);const dir=this.getDir();this.setDir(oldDir);return dir};
TBSEntity.prototype.startShake=function(power,duration){this._sprite._shakeEffect={power:power,duration:duration}};TBSEntity.prototype.lookClosestBattler=function(entities){if(entities.length===0)return;const entity=LeUtilities.closestByDistance(this,entities);const cell=entity.getCell();this.lookAt(cell)};
TBSEntity.prototype.processMovement=function(path,freeMove){if(!path||path.length===0)return;this._moving=true;this._movePath=path;this._movePath.reverse();this.setPose("move","move");this._moveReducePoints=!freeMove;this._moveUpdateDir=true};TBSEntity.prototype.processMovementNear=function(cell,maxPM,freeMove){var destCell=BattleManagerTBS.getCellNear(this.getCell(),cell,maxPM);this.processMovementTo(destCell,maxPM,freeMove)};
TBSEntity.prototype.processMovementAway=function(cell,maxPM,freeMove){var destCell=BattleManagerTBS.getCellAway(this.getCell(),cell,maxPM);this.processMovementTo(destCell,maxPM,freeMove)};TBSEntity.prototype.processMovementTo=function(cell,maxPM,freeMove){const sx=this._cellX||0;const sy=this._cellY||0;const dx=cell.x||0;const dy=cell.y||0;const path=BattleManagerTBS.getPathFromAToB(sx,sy,dx,dy,"walkable");if(path.length<=maxPM)this.processMovement(path,freeMove)};
TBSEntity.prototype.processJump=function(destCell,height){const sx=this.getCell().x*$gameMap.tileWidth();const sy=this.getCell().y*$gameMap.tileHeight();const dx=destCell.x*$gameMap.tileWidth();const dy=destCell.y*$gameMap.tileHeight();const trajectory=BattleManagerTBS.makeTrajectory(sx,sy,dx,dy,height,60,"normal_jump");this.followTrajectory(trajectory,destCell)};
TBSEntity.prototype.processJumpNear=function(cell,maxPM,height){const destCell=BattleManagerTBS.getCellNear(this.getCell(),cell,maxPM);this.processJumpTo(destCell,maxPM,height)};TBSEntity.prototype.processJumpAway=function(cell,maxPM,height){const destCell=BattleManagerTBS.getCellAway(this.getCell(),cell,maxPM);this.processJumpTo(destCell,maxPM,height)};
TBSEntity.prototype.processJumpTo=function(cell,maxPM,height){const sx=this._cellX;const sy=this._cellY;const dx=cell.x;const dy=cell.y;const path=BattleManagerTBS.getPathFromAToB(sx,sy,dx,dy,"free");if(path.length<=maxPM)this.processJump(cell,height)};
TBSEntity.prototype.forceMoveStraight=function(nbrCells,checkCollision){if(nbrCells<=0)return;this._movePath=[];let cx=this._cellX;let cy=this._cellY;this._collisionData={distance:nbrCells,covered:0,dir:this.getDir(),endCell:null};for(let i=0;i<nbrCells;i++){var cell=this.getForwardCell(cx,cy);if(!cell||cell.isObstacle()){this._collisionData.endCell=cell;break}this._collisionData.covered++;this._movePath.push(cell);switch(this.getDir()){case 2:cy++;break;case 4:cx--;break;case 6:cx++;break;case 8:cy--;
break}}if(!checkCollision)this._collisionData=null;if(this._movePath.length===0)return;this._moving=true;this._movingStraight=true;this._movePath.reverse();this._moveReducePoints=false;this._moveUpdateDir=true};
TBSEntity.prototype.forcePush=function(user,sourceCell,distance,obj,damage){if(this.isImmuneToKnockback())return;distance+=user.getKnockbackBonus(obj)-this.getKnockbackReduction(obj);var old=this.getDir();this.lookAway(sourceCell);this.forceMoveStraight(distance,damage);this.setDir(old);this._moveUpdateDir=false;if(this._collisionData){this._collisionData.user=user;this._collisionData.obj=obj}if(this._movePath.length===0&&this._collisionData)BattleManagerTBS.processCollisionEffects(this)};
TBSEntity.prototype.forcePull=function(user,sourceCell,distance,obj,damage){if(this.isImmuneToKnockback())return;var old=this.getDir();this.lookAt(sourceCell);this.forceMoveStraight(distance,damage);this.setDir(old);this._moveUpdateDir=false;if(this._collisionData){this._collisionData.user=user;this._collisionData.obj=obj}if(this._movePath.length===0&&this._collisionData)BattleManagerTBS.processCollisionEffects(this)};
TBSEntity.prototype.reachEntity=function(entity,type){var cells=[];switch(type){case "back":cells.push(entity.getBackwardCell());break;case "front":cells.push(entity.getForwardCell());break;case "side":cells=cells.concat(entity.getSideCells());break;case "random":cells.push(entity.getBackwardCell());cells.push(entity.getForwardCell());cells=cells.concat(entity.getSideCells());break}var dest=LeUtilities.getXRandomValuesInArray(cells,1)[0];if(dest&&!dest.isObstacle()){this.setCell(dest);return true}return false};
TBSEntity.prototype.getForwardCell=function(cx,cy){cx=cx||this._cellX;cy=cy||this._cellY;switch(this.getDir()){case 2:return BattleManagerTBS.getCellAt(cx,cy+1);case 4:return BattleManagerTBS.getCellAt(cx-1,cy);case 6:return BattleManagerTBS.getCellAt(cx+1,cy);case 8:return BattleManagerTBS.getCellAt(cx,cy-1)}return null};TBSEntity.prototype.getBackwardCell=function(){var cell=this.getForwardCell();if(cell){this.lookAway(cell);var backCell=this.getForwardCell();this.lookAt(cell);return backCell}return null};
TBSEntity.prototype.getSideCells=function(){var cell=this.getForwardCell();if(!cell)return;var sideCell1;var sideCell2;if(this.getDir()===8||this.getDir()===2){sideCell1=BattleManagerTBS.getCellAt(cell.x-1,cell.y-1);sideCell2=BattleManagerTBS.getCellAt(cell.x+1,cell.y-1)}else{sideCell1=BattleManagerTBS.getCellAt(cell.x-1,cell.y-1);sideCell2=BattleManagerTBS.getCellAt(cell.x-1,cell.y+1)}return[sideCell1,sideCell2]};
TBSEntity.prototype.updateMove=function(){if(!this._moving)return;if(!this._movingNextCell){this._movingNextCell=this._movePath.pop();this._movingDistance=[0,0]}var cell=this._movingNextCell;var oldDir=this.getDir();this.lookAt(cell);this.moveForward(cell);if(!this._moveUpdateDir)this.setDir(oldDir);if(this._cellX==cell.x&&this._cellY==cell.y){var stop=this.onCellCovered();if(this._movePath.length===0||stop)this.onMoveEnd(!stop)}};
TBSEntity.prototype.onCellCovered=function(){BattleManagerTBS.centerCell(this.getCell());var stop=BattleManagerTBS.executeEventsByStep(this);this._movingNextCell=null;if(this._moveReducePoints){this._movePoints--;if(this.getMovePoints()===0)return true}return stop};
TBSEntity.prototype.moveForward=function(cell){var speed=this._speed;var dir=this._sprite._dir;switch(dir){case 2:this.shiftPosition(0,speed);this._movingDistance[1]+=speed;break;case 4:this.shiftPosition(-speed,0);this._movingDistance[0]+=speed;break;case 6:this.shiftPosition(speed,0);this._movingDistance[0]+=speed;break;case 8:this.shiftPosition(0,-speed);this._movingDistance[1]+=speed;break}if(this._movingDistance[0]>=$gameMap.tileWidth()||this._movingDistance[1]>=$gameMap.tileHeight())this.setCell(cell)};
TBSEntity.prototype.onMoveEnd=function(){this._moving=false;if(this._dead)this.setPose("dead","dead");else this.setPose(this.defaultPose());this._moveReducePoints=false;if(this._collisionData)BattleManagerTBS.processCollisionEffects(this);this._collisionData=null;this._movingStraight=false;BattleManagerTBS.executeEventsByTouch(this)};TBSEntity.prototype.teleport=function(cell){this.setCell(cell)};
TBSEntity.prototype.switchCellWith=function(entity){var old=this.getCell();this.teleport(entity.getCell());entity.teleport(old)};TBSEntity.prototype.followTrajectory=function(trajectory,cell){this._sprite.setTrajectory(trajectory,cell)};TBSEntity.prototype.setMovePoints=function(){this._movePoints=this.battler().getLeTBSTagNumberValue("movePoints",Lecode.S_TBS.defaultMovePoints);if(this._movePoints<0)this._movePoints=0};TBSEntity.prototype.changeMovePoints=function(plus){this._movePoints+=plus};
TBSEntity.prototype.getMovePoints=function(){if(this.oneTimeMove()&&this._movePerformed)return 0;return this._movePoints.clamp(0,this._movePoints)};TBSEntity.prototype.canMoveCommand=function(){if(this.getMovePoints()===0)return false;return true};TBSEntity.prototype.canAttackCommand=function(){if(!this._battler.canAttack())return false;if(!this.canObjCommand())return false;return true};TBSEntity.prototype.canSkillCommand=function(){if(!this.canObjCommand())return false;return true};
TBSEntity.prototype.canItemCommand=function(){if(!this.canObjCommand())return false;return true};TBSEntity.prototype.canObjCommand=function(){if(this.oneTimeOffense()&&this._actionPerformed)return false;return true};TBSEntity.prototype.playableByAI=function(){return this.battler().isEnemy()||this.battler().isConfused()||!this.battler().canMove()||this.aiControl()};
TBSEntity.prototype.getCommandsString=function(){const value=this.rpgObject().TagsLetbsCommands.toString()||"";let extra="";const battler=this.battler();for(const state of battler.states())if(state)extra+=state.TagsLetbsCommands.toString();if(battler.isActor())for(const equip of battler.equips())if(equip)extra+=equip.TagsLetbsCommands.toString();return LeUtilities.perfectStringList(value.replace("[extra]",extra))};TBSEntity.prototype.aiControl=function(){return this.battler().hasLeTBSTag("aiControl")};
TBSEntity.prototype.getAttackAnimation=function(){if(this._battler.isActor())return this._battler.attackAnimationId1();else return this._battler.enemy().TagsLetbs.atkAnim||Lecode.S_TBS.defaultAttackAnimation};
TBSEntity.prototype.getAttackScopeData=function(){if(this._battler.isEnemy())return this._battler.enemy().TagsLetbs.atkScope||Lecode.S_TBS.defaultAttackScope;else{for(let i=0;i<this._battler.weapons().length;i++){var weapon=this._battler.weapons()[i];if(weapon&&weapon.TagsLetbs.scope)return weapon.TagsLetbs.scope}return this._battler.actor().TagsLetbs.atkScope||Lecode.S_TBS.defaultAttackScope}};
TBSEntity.prototype.getObjectScopeData=function(obj){var defaultScope=DataManager.isSkill(obj)?Lecode.S_TBS.defaultSkillScope:Lecode.S_TBS.defaultItemScope;return obj.TagsLetbs.scope||defaultScope};
TBSEntity.prototype.getAttackAoEData=function(){if(this._battler.isEnemy())return this._battler.enemy().TagsLetbs.atkAoe||Lecode.S_TBS.defaultAttackAoE;else{for(let i=0;i<this._battler.weapons().length;i++){var weapon=this._battler.weapons()[i];if(weapon&&weapon.TagsLetbs.aoe)return weapon.TagsLetbs.aoe}return this._battler.actor().TagsLetbs.atkAoe||Lecode.S_TBS.defaultAttackAoE}};
TBSEntity.prototype.getObjectAoEData=function(obj){var defaultAoe=DataManager.isSkill(obj)?Lecode.S_TBS.defaultSkillAoE:Lecode.S_TBS.defaultItemAoE;return obj.TagsLetbs.aoe||defaultAoe};TBSEntity.prototype.getMoveScopeData=function(){return this.getMoveScopeRawData().replace("_mp_",String(this.getMovePoints()))};TBSEntity.prototype.getMoveScopeRawData=function(){return this.battler().getLeTBSTagStringValue("moveScope",Lecode.S_TBS.defaultMoveScope)};TBSEntity.prototype.getMoveScopeParamData=function(){return this.battler().getLeTBSTagStringValue("moveScopeOptions")};
TBSEntity.prototype.getWeaponSequenceData=function(){if(this._battler.isEnemy())return this._battler.enemy().TagsLetbs.atkSequenceData||Lecode.S_TBS.defaultAttackSequence;else{for(let i=0;i<this._battler.weapons().length;i++){var weapon=this._battler.weapons()[i];if(weapon&&weapon.TagsLetbs.sequence)return weapon.TagsLetbs.sequence}return this._battler.actor().TagsLetbs.atkSequenceData||Lecode.S_TBS.defaultAttackSequence}};
TBSEntity.prototype.getWeaponFastSequence=function(){if(this._battler.isEnemy())return[];else{for(let i=0;i<this._battler.weapons().length;i++){var weapon=this._battler.weapons()[i];if(weapon&&weapon.TagsLetbsSequence)return weapon.TagsLetbsSequence}return[]}};TBSEntity.prototype.getObjectSequenceData=function(obj){var defaultSeqId=DataManager.isSkill(obj)?Lecode.S_TBS.defaultSkillSequence:Lecode.S_TBS.defaultItemSequence;return obj.TagsLetbs.sequence||defaultSeqId};
TBSEntity.prototype.getObjectFastSequence=function(obj){return obj.TagsLetbsSequence};TBSEntity.prototype.overloadedSequence=function(seqId){var data=this.battler().getLeTBSTagObjectValue("sequence");return data[seqId]||seqId};
TBSEntity.prototype.passAfterObjUse=function(obj){if(DataManager.isSkill(obj)){if(this._battler.isEnemy())return!!this._battler.hasLeTBSTag("passOnAtkUse");if(obj.id==this._battler.attackSkillId())if(this._battler.weapons().length>0)return!!this._battler.weapons()[0].TagsLetbs.passOnUse}return this._battler.hasLeTBSTag("passOnUse",obj)};TBSEntity.prototype.oneTimeMove=function(){return!!this.battler().hasLeTBSTag("oneTimeMove")||Lecode.S_TBS.oneTimeMove};
TBSEntity.prototype.oneTimeOffense=function(){return!!this.battler().hasLeTBSTag("oneTimeOffense")||Lecode.S_TBS.oneTimeOffense};TBSEntity.prototype.getCollapseAnimation=function(){return this.battler().getLeTBSTagNumberValue("collapseAnim",Lecode.S_TBS.collapseAnimation)};TBSEntity.prototype.getAiPattern=function(){return this.battler().getLeTBSTagStringValue("aiPattern",Lecode.S_TBS.defaultAiPattern)};TBSEntity.prototype.isPassableOnDeath=function(){return this.hasNoCorpse()||this.battler().hasLeTBSTag("passableOnDeath")};
TBSEntity.prototype.isPassable=function(){return this._battler.isDead()&&this.isPassableOnDeath()||this.battler().hasLeTBSTag("passable")};TBSEntity.prototype.entitiesCanLayOnMe=function(){if(this._battler.isDead()){if(this.hasNoCorpse())return true;if(this._sprite.opacity===0)return true;return this.battler().hasLeTBSTag("canStayOnMeOnDeath")}return this.battler().hasLeTBSTag("canStayOnMe")};TBSEntity.prototype.hasNoCorpse=function(){return!this.sprite().isValidPose("dead")};
TBSEntity.prototype.hasBlankSprite=function(){return this.battler().hasLeTBSTag("blankSprite")};TBSEntity.prototype.isFocusedByAI=function(type){type=type.trim();var obj=this.battler().getLeTBSTagObjectValue("focusedByAiFor",{});return obj[type]};TBSEntity.prototype.getSpriteScaleX=function(){var values=this.battler().getLeTBSTagArrayValue("spriteScale",[1,1]);return values[0]};TBSEntity.prototype.getSpriteScaleY=function(){var values=this.battler().getLeTBSTagArrayValue("spriteScale",[1,1]);return values[1]};
TBSEntity.prototype.getSpriteTone=function(){return this.battler().getLeTBSTagArrayValue("spriteTone",[0,0,0,0])};TBSEntity.prototype.getSpriteHue=function(){return this.battler().getLeTBSTagNumberValue("spriteHue",0)};TBSEntity.prototype.getSpriteOpacity=function(){return this.battler().getLeTBSTagNumberValue("spriteOpacity",255)};TBSEntity.prototype.getLoopAnimations=function(){return this.battler().collectLeTBSTags("loopAnimation")};
TBSEntity.prototype.startFlash=function(colorArray,duration,loop){if(loop)this._sprite.leU_startLoopFlash(colorArray,duration);else this._sprite.leU_startFlash(colorArray,duration)};TBSEntity.prototype.stopFLash=function(){this._sprite.leU_endLoopFlash();this._sprite.leU_clearFlash()};
TBSEntity.prototype.getCollisionDamageBonus=function(damage,item){var bonus=this.battler().getLeTBSTagNumberValue("collisionDmgBonus",0);bonus+=this.battler().getLeTBSTagNumberValue("collisionDmgBonusRate",0)*damage;return bonus};TBSEntity.prototype.getCollisionDamageReduction=function(damage,item){var reduction=this.battler().getLeTBSTagNumberValue("collisionDmgReduction",0);reduction+=this.battler().getLeTBSTagNumberValue("collisionDmgReductionRate",0)*damage;return reduction};
TBSEntity.prototype.getDirectionalDmgBonus=function(type,item){type=type.trim();var obj=this.battler().getLeTBSTagObjectValue("dirDmgBonus",{},item);return obj[type]||0};TBSEntity.prototype.getDirectionalDmgReduction=function(type,item){type=type.trim();var obj=this.battler().getLeTBSTagObjectValue("dirDmgReduction",{},item);return obj[type]||0};TBSEntity.prototype.isImmuneToKnockback=function(){return this.battler().hasLeTBSTag("immuneKnockback")};
TBSEntity.prototype.getKnockbackBonus=function(item){return this.battler().getLeTBSTagNumberValue("knockbackBonus",0,item)};TBSEntity.prototype.getKnockbackReduction=function(item){return this.battler().getLeTBSTagNumberValue("knockbackReduction",0,item)};TBSEntity.prototype.filenameID=function(){var battler=this.battler();var def=battler.isActor()?battler.name():battler.originalName();return battler.getLeTBSTagStringValue("spriteName",def)};TBSEntity.prototype.addPopup=function(){this._sprite.addPopup()};
TBSEntity.prototype.newAnimation=function(id,mirror,delay,isLoop){if(id==="collapse_anim")id=this.getCollapseAnimation();this._sprite.newAnimation(id,mirror,delay,isLoop)};TBSEntity.prototype.fadeIn=function(duration){duration=duration*1E3||1E3;this._sprite.opacity=0;LeUtilities.tweenProperty(this._sprite,"opacity",this.defaultOpacity(),duration).start()};
TBSEntity.prototype.fadeOut=function(duration){duration=duration*1E3||1E3;this._sprite.opacity=this.defaultOpacity();LeUtilities.tweenProperty(this._sprite,"opacity",0,duration).start()};TBSEntity.prototype.defaultOpacity=function(){return 255};TBSEntity.prototype.startBalloon=function(id){this._sprite.startBalloon(id)};
TBSEntity.prototype.startWeaponAnimation=function(type,wType){var battler=this.battler();var weapon=wType==="main_hand"?battler.weapons()[0]:wType==="off_hand"?battler.weapons()[1]:null;var data=Lecode.S_TBS.Config.Weapon_Anims[type].slice();if(weapon&&data){var weaSprite=weapon.TagsLetbs.weaponSprite;this.sprite().startWeaponAnimation(data,weaSprite)}};
TBSEntity.prototype.attachWindow=function(win){var x=this._posX-win.windowWidth()/2;var y=this._posY-win.windowHeight();win.x=x+this.width()/2;win.y=y;var maxW=$gameMap.width()*$gameMap.tileWidth();if(win.y<0)win.y=0;if(win.x<0)win.x=0;if(win.x+win.width>maxW)win.x=maxW-win.width};TBSEntity.prototype.battler=function(){return this._battler};TBSEntity.prototype.sprite=function(){return this._sprite};TBSEntity.prototype.width=function(){return this._sprite.width};TBSEntity.prototype.height=function(){return this._sprite.height};
TBSEntity.prototype.getCell=function(){return this._cell};TBSEntity.prototype.isMoving=function(){return this._moving};TBSEntity.prototype.rpgObject=function(){return this.battler().isActor()?this.battler().actor():this.battler().enemy()};function TBSScopeLayer(){this.initialize.apply(this,arguments)}TBSScopeLayer.prototype=Object.create(Sprite.prototype);TBSScopeLayer.prototype.constructor=TBSScopeLayer;function TBSEntity_Sprite(){this.initialize.apply(this,arguments)}
TBSEntity_Sprite.prototype=Object.create(Sprite_Base.prototype);TBSEntity_Sprite.prototype.constructor=TBSEntity_Sprite;
(function($){$.prototype.initialize=function(battler,entity){Sprite_Base.prototype.initialize.call(this);this._battler=battler;this._entity=entity;this.anchor.x=.5;this.anchor.y=1;this.initializeProperties();this.initializeFrameDelay();this.createBitmaps();this.createWeaponSprite()};$.prototype.initializeProperties=function(){this._frameCount=0;this._bitmaps={};this._maxFrame={};this._nbrLines={};this._fixedFrame=null;this._updateCount=0;this._poses=[];this._frameLoaded=0;this._filenameID=null;this._popups=
[];this._shakeEffect={power:0,duration:0};this._trajectoryIndex=0;this._trajectory=[];this._trajectoryEndCell=null;this._bodyAnimRandomized={}};$.prototype.initializeFrameDelay=function(){this.setFrameDelay(Lecode.S_TBS.battlersFrameDelay)};$.prototype.setFrameDelay=function(delay){this._frameDelay=delay};$.prototype.changeFrameDelay=function(delay){this._frameDelay+=delay};$.prototype.onPosePlayed=function(){this._frameCount=0;this._entity.onPosePlayed(this.getPose())};$.prototype.resetFrameCount=
function(){this._frameCount=0};$.prototype.setFixedFrame=function(frame){this._fixedFrame=frame};$.prototype.setTrajectory=function(trajectory,cell){this._trajectoryIndex=0;this._trajectory=trajectory;this._trajectoryEndCell=cell;var opts={easing:TWEEN.Easing.Sinusoidal.In};var sx=this._trajectory[0][0];var sy=this._trajectory[0][1];var dx=this._trajectory[this._trajectory.length-2][0];var dy=this._trajectory[this._trajectory.length-2][1];var distance=LeUtilities.distanceBetween({x:sx,y:sy},{x:dx,
y:dy});var speed=10;var time=distance*30/speed;LeUtilities.tweenProperty(this,"_trajectoryIndex",this._trajectory.length-1,time,opts).start()};$.prototype.createBitmaps=function(){var battler=this._battler;var config=this.getConfig();var hue=this._entity.getSpriteHue();this.bitmap=new Bitmap(48,48);if(config.length===0)throw new Error("[LeTBS] - The battler '"+battler.name()+"' has no sprite configuration!");config.forEach(function(poseConfig){this.processBitmapsConfig(poseConfig,hue)}.bind(this))};
$.prototype.processBitmapsConfig=function(poseConfig,hue){var pose=poseConfig.pose;var data=poseConfig.data;if(data.match(/blank_sprite/i)){this._maxFrame[pose]=0;this._nbrLines[pose]=1;this._bitmaps[pose]=new Bitmap(48,48);this._frameLoaded++;return}else if(data.match(/singleton,\s?(.+)/i)){this._maxFrame[pose]=0;this._nbrLines[pose]=1;this._bitmaps[pose]=ImageManager.loadLeTBSBattler(RegExp.$1.trim(),hue);this._frameLoaded++;return}var array=data.split(",");var filename=this.filenameID()+array[0].trim();
var nbrFrames=Number(array[1].trim());var fullBitmap=ImageManager.loadLeTBSBattler(filename,hue);this._poses.push(pose);fullBitmap.addLoadListener(this.createPoseBitmaps.bind(this,fullBitmap,pose,nbrFrames))};$.prototype.createPoseBitmaps=function(fbitmap,pose,nbrFrames){this._maxFrame[pose]=nbrFrames-1;this._nbrLines[pose]=4;this._bitmaps[pose]=fbitmap;this._frameLoaded++};$.prototype.createWeaponSprite=function(){this._weaponSprite=new Sprite;this._weaponSpriteAnim={data:[],index:0,tween:null};
this.addChild(this._weaponSprite)};$.prototype.hasTrajectory=function(){return!!this._trajectory[Math.round(this._trajectoryIndex)]};$.prototype.update=function(){Sprite_Base.prototype.update.call(this);if(!this.isReady())return;this.updateDirection();this.updatePose();this.updateFrameDelay();this.updatePosition();this.updatePopups();this.updateSpriteEffects();this.checkLoopAnimations();this.updateBalloon();this.updateWeaponSprite()};$.prototype.updateBitmap=function(){var pose=this.getPose();this.bitmap=
this._bitmaps[pose];if(this.bitmap){var w=this.bitmap.width/(this._maxFrame[pose]+1);var h=this.bitmap.height/this._nbrLines[pose];var x;var y;var frame=this._fixedFrame!=null?this._fixedFrame:this._frameCount;x=w*frame;y=this._nbrLines[pose]<4?0:h*this._dir/2-h;this.setFrame(x,y,w,h)}};$.prototype.updateFrameCount=function(){var pose=this.getPose();if(this._frameCount>this._maxFrame[pose])this.onPosePlayed();else this._frameCount++};$.prototype.updateSpriteEffects=function(){var entity=this._entity;
this.scale.x=entity.getSpriteScaleX();this.scale.y=entity.getSpriteScaleY();this.setColorTone(entity.getSpriteTone())};$.prototype.updateFrameDelay=function(){this._updateCount++;if(this._updateCount===this._frameDelay){this._updateCount=0;this.onNextFrame()}};$.prototype.onNextFrame=function(){this.updateBitmap();this.updateFrameCount()};$.prototype.updateDirection=function(){this._dir=this._entity._dir};$.prototype.updatePose=function(){this._pose=this._entity._pose};$.prototype.updatePosition=
function(){this.updateTrajectoryMove();this.x=this._entity._posX;this.y=this._entity._posY;var bounds=this.getBounds();if(this.bitmap){var w=bounds.width;var h=bounds.height;this.x+=$gameMap.tileWidth()/2;this.y+=$gameMap.tileHeight()}this.updateShakeEffect()};$.prototype.updateTrajectoryMove=function(){if(this.hasTrajectory()){var index=Math.round(this._trajectoryIndex);var pos=this._trajectory[index];if(pos!=="control")this._entity.setPosition(Math.round(pos[0]),Math.round(pos[1]));if(index===this._trajectory.length-
1){this._trajectory=[];this._entity.teleport(this._trajectoryEndCell)}}};$.prototype.updateShakeEffect=function(){var min=this._shakeEffect.power*.6;var max=this._shakeEffect.power*1.6;var d=this._shakeEffect.duration--;if(d>0){this.x+=LeUtilities.randValueBetween(min,max)*LeUtilities.randValueBetween(-1,1);this.y+=LeUtilities.randValueBetween(min,max)*LeUtilities.randValueBetween(-1,1)}};$.prototype.updatePopups=function(){if(this._popups.length===0)return;this._popups.forEach(function(popup){popup.update()}.bind(this));
if(!this._popups[0].isPlaying())this.removePopup(this._popups[0])};$.prototype.removePopup=function(popup){BattleManagerTBS.getLayer("movableInfo").removeChild(popup);this._popups.shift()};$.prototype.addPopup=function(){var sprite=new Sprite_Damage;sprite.x=this.x;sprite.y=this.y-this.height;sprite.setup(this._battler);this._popups.push(sprite);BattleManagerTBS.getLayer("movableInfo").addChild(sprite)};$.prototype.newAnimation=function(id,mirror,delay,isLoop){if(id<=0)return;var sprite=new Sprite_TBSEntityAnimation;
sprite._isLoopAnim=isLoop;sprite.setup(this,$dataAnimations[id],mirror,delay);BattleManagerTBS.getLayer("animations").addChild(sprite);this._animationSprites.push(sprite)};$.prototype.checkLoopAnimations=function(){var anims=this._entity.getLoopAnimations();var bodyAnim=this._entity.battler().getLeTBSTagObjectValue("bodyAnim",{})[this.getPose()];var bodyAnims=LeUtilities.stringToArray(bodyAnim);anims=anims.concat(this.randomizeBodyAnim(bodyAnims));var exists={};anims.forEach(function(id){exists[id]=
false});this._animationSprites.forEach(function(sprite){for(let i=0;i<anims.length;i++)if(sprite._animation.id===anims[i]&&sprite.isPlaying())exists[anims[i]]=true});anims.forEach(function(id){if(!exists[id])this.newAnimation(id,false,0,true)}.bind(this))};$.prototype.randomizeBodyAnim=function(array){var anim=LeUtilities.getRandomValueInArray(array);if(!anim)return[];var randomized=this._bodyAnimRandomized[this.getPose()];if(!randomized){this._bodyAnimRandomized[this.getPose()]=anim;return[anim]}return[randomized]};
$.prototype.isReady=function(){return this._frameLoaded===this._poses.length};$.prototype.getPose=function(){return this.isValidPose(this._pose)?this._pose:this._entity.defaultPose()};$.prototype.getConfig=function(){var battler=this._battler;var object=battler.rpgObject().TagsLetbsSprite.pose;var config=[];for(var key in object)if(object.hasOwnProperty(key)){var element=object[key];config.push({pose:key,data:element})}return config};$.prototype.isValidPose=function(pose){return this._poses.indexOf(pose)>=
0};$.prototype.filenameID=function(){return this._entity.filenameID()};$.prototype.isAnimationPlaying=function(){return this._animationSprites.filter(function(sprite){return!sprite._isLoopAnim}).length>0};$.prototype.startBalloon=function(id){if(!this._balloonSprite)this._balloonSprite=new Sprite_Balloon;this._balloonSprite.setup(id);BattleManagerTBS.getLayer("movableInfo").addChild(this._balloonSprite)};$.prototype.updateBalloon=function(){if(this._balloonSprite){this._balloonSprite.x=this.x;this._balloonSprite.y=
this.y-this.height;if(!this._balloonSprite.isPlaying())this.endBalloon()}};$.prototype.endBalloon=function(){if(this._balloonSprite){BattleManagerTBS.getLayer("movableInfo").removeChild(this._balloonSprite);this._balloonSprite=null}};$.prototype.startWeaponAnimation=function(data,spriteName){spriteName="Dagger";var bitmap=ImageManager.loadLeTBSWeaponSprite(spriteName);this._weaponSprite=new Sprite(bitmap);this._weaponSprite.anchor.x=0;this._weaponSprite.anchor.y=1;this._weaponSpriteAnim.data=data;
this._weaponSpriteAnim.index=-1;this._weaponSpriteAnim.tween={x:0,y:0,angle:0};this.addChild(this._weaponSprite);this.onWeaponSpriteTweenComplete()};$.prototype.onWeaponSpriteTweenComplete=function(){var index=++this._weaponSpriteAnim.index;var dataTween=this._weaponSpriteAnim.data[index];if(dataTween)var tween=(new TWEEN.Tween(this._weaponSpriteAnim.tween)).to(dataTween,(dataTween.duration||0)*1E3).onComplete(this.onWeaponSpriteTweenComplete.bind(this)).start();else{this.removeChild(this._weaponSprite);
this._weaponSpriteAnim.data=[]}};$.prototype.updateWeaponSprite=function(){var data=this._weaponSpriteAnim.data;if(data.length>0){var dataTween=this._weaponSpriteAnim.tween;if(dataTween){this._weaponSprite.x=dataTween.x||0;this._weaponSprite.y=dataTween.y||0;this._weaponSprite.rotation=dataTween.angle*Math.PI/180||0}}};$.prototype.isBalloonPlaying=function(){return!!this._balloonSprite}})(TBSEntity_Sprite);
(function($){$.prototype.drawCell=function(x,y,opacity,color){this.bitmap.fillRect(x*48,y*48,46,46,color)};$.prototype.initialize=function(){const w=$gameMap.width()*$gameMap.tileWidth();const h=$gameMap.height()*$gameMap.tileHeight();Sprite.prototype.initialize.call(this);this.bitmap=new Bitmap(w,h);this.bitmap.paintOpacity=175;this._selectionLayer=null;this._selectionCells=[]};$.prototype.createSelectionLayer=function(){this._selectionLayer=new TBSScopeLayer;this._selectionLayer.z=2};$.prototype.update=
function(){Sprite.prototype.update.call(this)};$.prototype.clear=function(){this.bitmap.clear()};$.prototype.clearSelection=function(){this._selectionLayer.clear();this._selectionLayer.leU_endLoopFlash()};$.prototype.drawSelectionCells=function(scope,opacity,color,scolor){const titleW=$gameMap.tileWidth();const titleH=$gameMap.tileHeight();const boundaries=BattleManagerTBS.getScopeBoundaries(scope);let w=(Math.abs(boundaries.right-boundaries.left)+1)*titleW;let h=(Math.abs(boundaries.top-boundaries.bottom)+
1)*titleH;let x=boundaries.left*titleW;const y=boundaries.top*titleH;this._selectionLayer.bitmap=new Bitmap(w,h);this._selectionLayer.paintOpacity=opacity;this._selectionLayer.x=x;this._selectionLayer.y=y;w=Lecode.S_TBS.scopeCellWidth;h=Lecode.S_TBS.scopeCellHeight;let sx=titleW-w;let sy=titleH-h;if(scope&&scope.length>0)for(const cell of scope)if(cell){let cx=cell.x-boundaries.left;let cy=cell.y-boundaries.top;cx=cx*titleW;cy=cy*titleH;this._selectionLayer.bitmap.fillRect(cx+sx,cy+sy,w-sx,h-sy,scolor)}this._selectionLayer.leU_startLoopFlash([0,
0,0,255],25);this._selectionLayer.leU_setFlashMode("opacity")};$.prototype.drawSelectionCell=function(x,y,opacity,color){this._selectionLayer.drawCell(x,y,opacity,color)}})(TBSScopeLayer);function TBSNeutralEntity(){this.initialize.apply(this,arguments)}TBSNeutralEntity.prototype=Object.create(TBSEntity.prototype);TBSNeutralEntity.prototype.constructor=TBSNeutralEntity;
TBSNeutralEntity.prototype.initialize=function(layer,tbsEvent,enemyId){this._tbsEvent=tbsEvent;this._isNeutral=true;var battler=new Game_Enemy(enemyId,0,0);TBSEntity.prototype.initialize.call(this,battler,layer)};function TBSEvent(){this.initialize.apply(this,arguments)}
TBSEvent.prototype.initialize=function(event){this._event=event;this._triggerType=null;this._cooldown=0;this._warmup=0;this._obstacleForLOS=true;this._stopWhenStepped=false;this._tileEffect=null;this._oldPos={};this._tiedMovingEntity=null;this.onEventPageSetup()};TBSEvent.prototype.onEventPageSetup=function(){this.setupFlags()};TBSEvent.prototype.onEventForceMoveRoute=function(){this.checkEntityOnEvent()};
TBSEvent.prototype.setupFlags=function(){var condition=false;this._triggerConditions=[];for(let i=0;i<this._event.list().length;i++){var command=this._event.list()[i];if(command&&command.code===108||command.code===408){var comment=command.parameters[0];if(comment.match(/<LeTBS>\s?Trigger_Type\s?:\s?(.+)/i))this._triggerType=String(RegExp.$1).toLowerCase();else if(comment.match(/<LeTBS>\s?Cooldown\s?:\s?(.+)/i))this._cooldown=Number(RegExp.$1);else if(comment.match(/<LeTBS>\s?Warmup\s?:\s?(.+)/i))this._warmup=
Number(RegExp.$1);else if(comment.match(/<LeTBS>\s?Free_LOS/i))this._obstacleForLOS=false;else if(comment.match(/<LeTBS>\s?Stop_On_Step/i))this._stopWhenStepped=true;else if(comment.match(/<LeTBS>\s?Tile_Effect\s?:\s?(.+)/i))this._tileEffect=Number(RegExp.$1);else if(comment.match(/<LeTBS>\s?Tied_Mark\s?:\s?(.+)/i))this._tiedMark=String(RegExp.$1).toLowerCase();else if(comment.match(/<LeTBS Trigger Conditions>/i))condition=true;else if(comment.match(/<\/LeTBS Trigger Conditions>/i))condition=false;
else if(condition)this._triggerConditions.push(comment)}}};TBSEvent.prototype.update=function(){this.updateEntityMove()};
TBSEvent.prototype.updateEntityMove=function(){if(this._tiedMovingEntity&&(this.screenX()!=this._oldPos.screenX||this.screenY()!=this._oldPos.screenY)){if(this._oldPos.screenX&&this._oldPos.screenY){var entity=this._tiedMovingEntity;var diffX=this._oldPos.screenX-this.screenX();var diffY=this._oldPos.screenY-this.screenY();entity.x-=diffX;entity.y-=diffY;var cell=BattleManagerTBS.getCellAt(this._event._realX,this._event._realY);if(cell)entity.setCell(cell)}this._oldPos.x=this._event._realX;this._oldPos.y=
this._event._realY;this._oldPos.screenX=this.screenX();this._oldPos.screenY=this.screenY()}};TBSEvent.prototype.start=function(){this.checkEntityOnEvent();this._event.start()};TBSEvent.prototype.checkEntityOnEvent=function(){this._tiedMovingEntity=BattleManagerTBS.getEntityAt(this.x(),this.y())};TBSEvent.prototype.event=function(){return this._event};TBSEvent.prototype.x=function(){return this._event.x};TBSEvent.prototype.y=function(){return this._event.y};
TBSEvent.prototype.getCell=function(){return BattleManagerTBS.getCellAt(this.x(),this.y())};TBSEvent.prototype.screenX=function(){return this._event._realX*$gameMap.tileWidth()};TBSEvent.prototype.screenY=function(){return this._event._realY*$gameMap.tileHeight()};TBSEvent.prototype.isObstacle=function(){return!this._event.isThrough()&&this._event.isNormalPriority()};TBSEvent.prototype.isObstacleForLOS=function(){return!!this._obstacleForLOS};
TBSEvent.prototype.canTriggerWhen=function(condition){return this._triggerType===condition};TBSEvent.prototype.triggerConditions=function(){return this._triggerConditions.join(" && ")};function TBSDirectionSelector(){this.initialize.apply(this,arguments)}TBSDirectionSelector.prototype.initialize=function(layer){this._cell=null;this._battlerEntity=null;this.createSprite(layer)};
TBSDirectionSelector.prototype.createSprite=function(layer){this._sprite=new UHPD_Sprite($gameResources["HUD"].textures["DirectionSelector.png"]);this._sprite.anchor.x=.5;this._sprite.anchor.y=.5;this._sprite.opacity=0;layer.addChild(this._sprite)};
TBSDirectionSelector.prototype.set=function(cell,battler){this._cell=cell;this._battlerEntity=battler;this._sprite.x=cell.x*$gameMap.tileWidth()+$gameMap.tileWidth()/2;this._sprite.y=cell.y*$gameMap.tileHeight()+$gameMap.tileHeight()/2;this._sprite.opacity=255;this.setDir(battler.getDir())};
TBSDirectionSelector.prototype.setDir=function(dir){this._battlerEntity.setDir(dir);var r=0;switch(dir){case 2:r=0;break;case 4:r=90;break;case 6:r=90*3;break;case 8:r=90*2;break}this._sprite.rotation=r*Math.PI/180;SoundManager.playCursor()};TBSDirectionSelector.prototype.hide=function(){this._sprite.opacity=0};function TBS_FloatingAction(){this.initialize.apply(this,arguments)}TBS_FloatingAction.prototype=Object.create(Game_Action.prototype);TBS_FloatingAction.prototype.constructor=TBS_FloatingAction;
TBS_FloatingAction.prototype.initialize=function(subject,forcing){Game_Action.prototype.initialize.call(this,subject,forcing)};TBS_FloatingAction.prototype.setSubject=function(subject){this._subject=subject};TBS_FloatingAction.prototype.subject=function(){return this._subject};var Lecode=Lecode||{};Lecode.S_TBS.Windows={};Lecode.S_TBS.Windows.hpTextColor=4;Lecode.S_TBS.Windows.mpTextColor=5;Lecode.S_TBS.Windows.confirmOkText="Confirm";Lecode.S_TBS.Windows.confirmCancelText="Cancel";
Lecode.S_TBS.Windows.confirmBattleText="Begin Battle ?";Lecode.S_TBS.Windows.startBattleText="Start Battle";Lecode.S_TBS.Windows.statusWindowShowTP=false;Lecode.S_TBS.Windows.statusWindowShowMovePoints=true;
class Window_TBSConfirm extends Window_HorzCommand{constructor(...args){super(...args)}initialize(){let w=this.windowWidth();let h=this.windowHeight();super.initialize(w,0,w,h)}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}drawItem(index){const w=this.windowWidth();const rect=this.itemRectForText(index);const align=this.itemTextAlign();this.resetTextColor();this.changePaintOpacity(this.isCommandEnabled(index));this.drawText(this.commandName(index),rect.x,rect.y,w/2,align)}itemTextAlign(){return"center"}makeCommandList(){this.addCommand(Lecode.S_TBS.Windows.confirmOkText,
"ok",true);this.addCommand(Lecode.S_TBS.Windows.confirmCancelText,"cancel",true)}windowWidth(){return 340}lineHeight(){return 80}maxCols(){return 2}numVisibleRows(){return 1}}
class Window_TBSPositioning extends Window_Selectable{constructor(...args){super(...args)}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}initialize(){const w=this.windowWidth();const h=this.windowHeight();super.initialize(0,96,w,h);this._lastIndex=0;this._disabled={};this._fixedIndexes=[];this.loadFaces()}loadFaces(){$gameParty.members().forEach((actor)=>{ImageManager.loadFace(actor.faceName())})}actor(){return $gameParty.members()[this._index]}selectLast(){this.select(this._lastIndex)}windowWidth(){return this.itemFrameWidth()+
this.standardPadding()*2}windowHeight(){return this.fittingHeight(4*this.visibleItems())}itemFrameWidth(){return Window_Base._faceWidth+Window_Base._iconWidth*5}visibleItems(){return 3}maxCols(){return 1}maxItems(){return $gameParty.members().length}spacing(){return 12}itemWidth(){return this.itemFrameWidth()}itemHeight(){return this.lineHeight()*4}disableSelection(){this._disabled[this._index]=true}enableSelection(){this._disabled[this._index]=false}setFixedActor(actor){var i=0;$gameParty.members().forEach((member)=>
{if(member.actorId()===actor.actorId()){this._disabled[i]=true;this._fixedIndexes.push(i)}i++})}isEnabled(index){if(!this._disabled[index]&&BattleManagerTBS.allyEntities().length===BattleManagerTBS.allyStartCells().length)return false;return!this._fixedIndexes.contains(index)}isCurrentItemEnabled(){return this.isEnabled(this.index())}drawItem(index){var actor=$gameParty.members()[index];var rect=this.itemRect(index);var x=rect.x;var y=rect.y;var w;this.changePaintOpacity(!this._disabled[index]);this.drawActorFace(actor,
x,y,Window_Base._faceWidth,Window_Base._faceHeight);x+=Window_Base._faceWidth;this.drawText(actor.name(),x,y,288,"left");w=this.itemFrameWidth()-Window_Base._faceWidth-2;y+=this.lineHeight();this.drawActorHp(actor,x,y,w);y+=this.lineHeight();this.drawActorMp(actor,x,y,w);y+=this.lineHeight();this.drawActorIcons(actor,x,y,Window_Base._iconWidth*5)}drawFace(faceName,faceIndex,x,y,width=Window_Base._faceWidth,height=Window_Base._faceHeight){var bitmap=ImageManager.loadFace(faceName);var pw=Window_Base._faceWidth;
var ph=Window_Base._faceHeight;var sw=Math.min(width,pw);var sh=Math.min(height,ph);var dx=Math.floor(x+Math.max(width-pw,0)/2);var dy=Math.floor(y+Math.max(height-ph,0)/2);var sx=faceIndex%4*pw+(pw-sw)/2;var sy=Math.floor(faceIndex/4)*ph+(ph-sh)/2;bitmap.smooth=true;this.contents.blt(bitmap,sx,sy,sw,sh,dx,dy)}_updateCursor(){var blinkCount=this._animationCount%40;var cursorOpacity=255;if(this.active)if(blinkCount<20)cursorOpacity-=blinkCount*8;else cursorOpacity-=(40-blinkCount)*8;this._windowCursorSprite.alpha=
cursorOpacity/255;this._windowCursorSprite.visible=this.isOpen()}cursorUp(wrap){super.cursorUp(wrap);if(this.index()===this.maxItems()-1)this.callHandler("exit_up")}processOk(){this._lastIndex=this.index();super.processOk()}}
class Window_TBSPositioningConfirm extends Window_Command{constructor(...args){super(...args)}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}initialize(){super.initialize(0,0,this.windowWidth(),this.lineHeight());this._enabled=false;this.deselect()}setEnabled(bool){this._enabled=!!bool}makeCommandList(){this.addCommand(Lecode.S_TBS.Windows.startBattleText,"ok",this._enabled)}windowWidth(){return 340}lineHeight(){return 80}maxCols(){return 1}numVisibleRows(){return 1}drawItem(index){const w=
this.windowWidth();const rect=this.itemRectForText(index);const align=this.itemTextAlign();this.resetTextColor();this.changePaintOpacity(this.isCommandEnabled(index));this.drawText(this.commandName(index),rect.x,rect.y,w/2,align)}itemTextAlign(){return"center"}cursorDown(wrap){super.cursorDown(wrap);this.callHandler("cursor_down")}isCursorMovable(){return this.active}}
class Window_TBSStatus extends Window_Base{constructor(){super()}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}initialize(){super.initialize(0,75,288,144);this._entity=null;this._sliding=false;this.refresh();this.opacity=200}slide(){this._sliding=true;this.x=-this.width}update(){super.update();if(this._sliding){this.x+=8;if(this.x>=0){this._sliding=false;this.x=0}}}refresh(){if(this.contents)this.contents.clear();this._gaugeHeight=null;this.resetFontSettings();if(!this._entity)return;
let x=100;let y=-4;this.drawSprite();this.contents.fontSize+=2;this.contents.textColor="#ff7366";this.leU_drawText(this._entity.battler().name(),"center",y);this.contents.fontSize-=4;y+=this.lineHeight()-8;this.drawActorHp(this._entity.battler(),x,y,130);y+=this.lineHeight()-8;this.drawActorMp(this._entity.battler(),x,y,130);if(Lecode.S_TBS.Windows.statusWindowShowTP){y+=this.lineHeight()/4+4;this._gaugeHeight=6;this.drawActorTp(this._entity.battler(),x,y,130)}if(Lecode.S_TBS.Windows.statusWindowShowMovePoints){y+=
this.lineHeight()+4;const mp=this._entity.getMovePoints();const gw=(130-mp*4)/mp;x++;for(let i=0;i<mp;i++){this.contents.fillRect(x,y,gw,2,"#e6ff66");x+=gw+4}}x=2;y-=this.lineHeight()-4;this.drawActorIcons(this._entity.battler(),x,y,Window_Base._iconWidth*3)}drawSprite(){let sprite=this._entity._sprite;let bitmap=sprite._bitmaps["idle"];if(bitmap){let pw=bitmap.width/(sprite._maxFrame["idle"]+1);let ph=bitmap.height/4;let dx=100/2-pw/2;let dy=20+this.lineHeight(2)/2-ph/2;this.contents.blt(bitmap,
0,0,pw,ph,dx,dy)}}drawActorTp(actor,x,y,width=96){this.drawGauge(x,y,width,actor.tpRate(),this.tpGaugeColor1(),this.tpGaugeColor2())}gaugeHeight(){return this._gaugeHeight||192}}
class Window_TBSEndCommand extends Window_Command{constructor(){super()}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}initialize(){const x=Graphics.width/2;const y=Graphics.height/2;super.initialize(x,y);this.openness=0;this.deactivate()}lineHeight(){return 80}itemTextAlign(){return"center"}maxCols(){return 2}windowWidth(){return 220}numVisibleRows(){return 1}makeCommandList(){this.addCommand("Escape","escape",BattleManager.canEscape())}}
class Window_TBSSkillList extends Window_BattleSkill{constructor(...args){super(...args)}initialize(){const w=this.windowWidth();const h=this.windowHeight();super.initialize(0,0,w,h);this._entity=null}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}windowWidth(){return 428}windowHeight(){return 100}maxCols(){return 8}maxTopRow(){return 1}selectLast(){const skill=BattleManagerTBS.activeAction().item();const index=this._data.indexOf(skill);this.select(index>=0?index:0)}lineHeight(){return 60}update(){super.update();
if(!!this._entity)this._entity.attachWindow(this)}drawItem(index){const item=this._data[index];if(item){const rect=this.itemRect(index);this.changePaintOpacity(this.isEnabled(item));this.drawItemIconScale(item.iconIndex,rect.x+8,rect.y+8,44,false)}}spacing(){return 12}itemRect(index){const rect=new Rectangle;const maxCols=this.maxCols();rect.width=rect.height=60;rect.x=index%maxCols*(rect.width+this.spacing()-12)-this._scrollX;rect.y=Math.floor(index/maxCols)*rect.height-this._scrollY;return rect}}
class Window_TBSItemList extends Window_BattleItem{constructor(){super()}initialize(){super.initialize(0,0,this.windowWidth(),this.windowHeight());this._entity=null}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}windowWidth(){return 278}windowHeight(){return 160}maxCols(){return 4}update(){super.update();if(this._entity)this._entity.attachWindow(this)}updateHelp(){}selectLast(){const skill=BattleManagerTBS.activeAction().item();const index=this._data.indexOf(skill);this.select(index>=
0?index:0)}spacing(){return 12}drawItem(index){const item=this._data[index];if(item){const rect=this.itemRect(index);this.drawItemIconScale(item.iconIndex,rect.x+8,rect.y+8,44,true);this.changePaintOpacity(true);const number=Number($gameParty.numItems(item))||0;if(number>1){this.makeFontSmaller();this.drawText(number,rect.x+20,rect.y+30,32,"right")}}}itemRect(index){const rect=new Rectangle;const maxCols=this.maxCols();rect.width=rect.height=60;rect.x=index%maxCols*(rect.width+this.spacing()-12)-
this._scrollX;rect.y=Math.floor(index/maxCols)*rect.height-this._scrollY;return rect}itemHeight(){return 60}}Imported.LeTBS_Commands=true;Lecode.S_TBS.Commands={};var parameters=PluginManager.parameters("LeTBSWindows");Lecode.S_TBS.Commands.default=String(parameters["Commands"]||"move 82, attack 76, [extra], skills, items 182, scan 75, pass 74");Lecode.S_TBS.Commands.moveCommandText=String(parameters["Move Command Text"]||"Move");
Lecode.S_TBS.Commands.scanCommandText=String(parameters["Scan Command Text"]||"Scan");Lecode.S_TBS.Commands.passCommandText=String(parameters["Pass Command Text"]||"End Turn");Lecode.S_TBS.Commands.skillTypeIcons=JSON.parse(parameters["Skill Type Icons"]||"[64, 79, 80]");Lecode.S_TBS.Commands.previewMoveScope=String(parameters["Preview Move Scope"]||"true")==="true";Lecode.S_TBS.Commands.previewActionScopes=String(parameters["Preview Action Scopes"]||"true")==="true";
class Window_TBSCommand extends Window_Command{constructor(){super()}loadWindowskin(){this.windowskin=ImageManager.loadSystem("Window2")}initialize(){this.lenCom=3;super.initialize(0,-48,this.windowWidth(),100);this.openness=0;this.deactivate();this._battler=null;this._entity=null;this._icons=[]}windowHeight(){return 100}windowWidth(){return 348}numVisibleRows(){return 1}maxCols(){return this.lenCom}callOkHandler(){const symbol=this.currentSymbol();BattleManagerTBS.getLayer("scopes").clear();BattleManagerTBS.clearMoveSelection();
BattleManagerTBS.clearActionSelection();BattleManagerTBS._moveScope={};BattleManagerTBS._actionScope={};if(symbol==="ok"||symbol==="cancel"){super.callOkHandler();return}LeUtilities.getScene().onCommandInput(symbol)}makeCommandList(){if(this._battler){const str=this.getCommandsString();let array=str.split(",").map((str)=>str.trim()).filter((str)=>str);this.makeIcons(array);array=array.map((str)=>str.replace(/\s+\d+/ig,""));this.lenCom=array.length-1;for(let com of array)if(com)if(com.match(/skill\[(\d+)\]/i))this.addCommand_skill(Number(RegExp.$1));
else if(com.match(/item\[(\d+)\]/i))this.addCommand_item(Number(RegExp.$1));else if(com.match(/event\[(\d+)\]/i))this.addCommand_event(Number(RegExp.$1));else eval(`this.addCommand_${com}();`)}}getCommandsString(){const str=this._entity.getCommandsString();return str||Lecode.S_TBS.Commands.default.replace(/\[extra\]\s*,/ig,"")}makeIcons(array){const skillTypes=this._battler.addedSkillTypes();skillTypes.sort((a,b)=>a-b);for(let str of array)if(str)if(str.match("skills"))for(let j=0;j<skillTypes.length;j++){const icon=
Lecode.S_TBS.Commands.skillTypeIcons[skillTypes[j]-1];this._icons.push(icon)}else if(str.match(/\s+(\d+)/i))this._icons.push(Number(RegExp.$1));else if(str.match(/skill\[(\d+)\]/i))this._icons.push($dataSkills[Number(RegExp.$1)].iconIndex);else if(str.match(/item\[(\d+)\]/i))this._icons.push($dataItems[Number(RegExp.$1)].iconIndex);else this._icons.push(0)}addCommand_attack(){this.addCommand(TextManager.attack,"attack",this._entity.canAttackCommand())}addCommand_skills(){this.addSkillCommands()}addCommand_guard(){this.addCommand(TextManager.guard,
"guard",this._entity.canGuard())}addCommand_items(){this.addCommand(TextManager.item,"item",this._entity.canItemCommand())}addCommand_move(){this.addCommand(Lecode.S_TBS.Commands.moveCommandText,"move",this._entity.canMoveCommand())}addCommand_pass(){this.addCommand(Lecode.S_TBS.Commands.passCommandText,"pass",true)}addCommand_scan(){}addCommand_skill(id){const skill=$dataSkills[id];this.addCommand(skill.name,`skill[${id}]`,this._entity.canSkillCommand(),skill.stypeId)}addCommand_item(id){const item=
$dataItems[id];const canUse=this._entity.battler().canUse(item);this.addCommand(skill.name,`item[${id}]`,canUse)}addCommand_event(id){this.addCommand(skill.name,`event[${id}]`,true)}addSkillCommands(){const skillTypes=this._battler.addedSkillTypes();skillTypes.sort((a,b)=>a-b);skillTypes.forEach(function(stypeId){var name=$dataSystem.skillTypes[stypeId];this.addCommand(name,"skill",this._entity.canSkillCommand(),stypeId)},this)}setup(actor,entity){this._battler=actor;this._entity=entity;this.clearCommandList();
this.makeCommandList();this.refresh();this.selectLast();this.activate();this.show();this.open()}update(){super.update();if(this._entity)this._entity.attachWindow(this);if(this.width!==348)this.width=16*8+this.lenCom*44}processOk(){if(this._battler)this._battler.setLastCommandSymbol(this.currentSymbol());super.processOk()}selectLast(){this.select(0);if(this._battler){const last=this._battler.lastCommandSymbol();if(last!=="pass")this.selectSymbol(last)}}itemRect(index){const rect=new Rectangle;const maxCols=
this.maxCols();rect.width=rect.height=60;rect.x=index%maxCols*(rect.width+this.spacing()-12)-this._scrollX;rect.y=Math.floor(index/maxCols)*rect.height-this._scrollY;return rect}drawItem(index){const rect=this.itemRect(index);this.changePaintOpacity(this.isCommandEnabled(index));this.drawItemIconScale(this.commandIcon(index),rect.x+8,rect.y+8,44)}commandIcon(index){return this._icons[index]}callUpdateHelp(){}updateHelp(){}}
(()=>{(($)=>{Lecode.S_TBS.oldBM_setup=$.setup;$.setup=function(troopId,canEscape,canLose){Lecode.S_TBS.oldBM_setup.call(this,troopId,canEscape,canLose);BattleManagerTBS.setup()};Lecode.S_TBS.oldBM_isTurnEnd=$.isTurnEnd;$.isTurnEnd=function(){return Lecode.S_TBS.oldBM_isTurnEnd.call(this)||BattleManagerTBS._subPhase=="turn_end"};Lecode.S_TBS.oldBM_canEscape=$.canEscape;$.canEscape=function(){const entity=BattleManagerTBS.activeEntity();if(entity)return Lecode.S_TBS.oldBM_canEscape.call(this)&&!(entity._movePerformed||
entity._actionPerformed);else return Lecode.S_TBS.oldBM_canEscape.call(this)};Lecode.S_TBS.oldBattleManager_displayStartMessages=$.displayStartMessages;$.displayStartMessages=function(){if(Lecode.S_TBS.displayStartMessages)Lecode.S_TBS.oldBattleManager_displayStartMessages.call(this)}})(BattleManager);(($)=>{Lecode.S_TBS.oldTouchInput_clear=$.clear;$.clear=function(){Lecode.S_TBS.oldTouchInput_clear.call(this);this._leTBSMoveData={x:0,y:0}};Lecode.S_TBS.oldTouchInput_onMouseMove=$._onMouseMove;$._onMouseMove=
function(event){Lecode.S_TBS.oldTouchInput_onMouseMove.call(this,event);var x=Graphics.pageToCanvasX(event.pageX);var y=Graphics.pageToCanvasY(event.pageY);this._leTBSMoveData.x=x;this._leTBSMoveData.y=y}})(TouchInput);(($)=>{Lecode.S_TBS.oldSceneBoot_start=$.prototype.start;$.prototype.start=function(){this.processLeTBSTags();Lecode.S_TBS.oldSceneBoot_start.call(this)};$.prototype.processLeTBSTags=function(){this.initializeTagEffects();this.makeLeTBSTags();this.parseLeTBSTags()};$.prototype.getLeTBSMainTags=
function(){return[{name:"letbs",type:"object"},{name:"letbs_ai",type:"object",default:{type:"",useCondition:"true",escapeCondition:"true",rushCondition:"true",maximiseTargets:false,summonNear:"enemies",avoidFriendlyFire:0}},{name:"letbs_sprite",type:"object"},{name:"letbs_sequence",type:"array"},{name:"letbs_commands",type:"array"}]};$.prototype.initializeTagEffects=function(){[$dataActors,$dataEnemies].forEach(function(group){for(var j=1;j<group.length;j++){var obj=group[j];this.getLeTBSMainTags().forEach(function(data){var code=
LeUtilities.shrinkTextWithUnderscores("tags_"+data.name);code+="_Effects";obj[code]={}},this)}},this)};$.prototype.makeLeTBSTags=function(){var tags=this.getLeTBSMainTags().map(function(data){return data.name});var types=this.getLeTBSMainTags().map(function(data){return data.type});var groups=[$dataActors,$dataEnemies,$dataClasses,$dataWeapons,$dataArmors,$dataStates,$dataSkills,$dataItems,$dataWeapons];for(let i=0;i<groups.length;i++){var group=groups[i];for(var j=1;j<group.length;j++){var obj=group[j];
var notedata=obj.note.split(/[\r\n]+/);var currentTag=null;var currentType=null;this.getLeTBSMainTags().forEach(function(data){var code=LeUtilities.shrinkTextWithUnderscores("tags_"+data.name);obj[code]=data.type==="array"?[]:{};if(data.default)obj[code]=data.default});for(var k=0;k<notedata.length;k++){var line=notedata[k];if(line.match(/<(.+)>/i)&&tags.contains(RegExp.$1.toLocaleLowerCase())){currentTag=RegExp.$1.toLocaleLowerCase();continue}else if(line.match(/<\/(.+)>/i)&&tags.contains(RegExp.$1.toLocaleLowerCase()))currentTag=
null;var result,arg;if(currentTag){currentType=types[tags.indexOf(currentTag)];var code=LeUtilities.shrinkTextWithUnderscores("tags_"+currentTag);if(currentType==="array")obj[code].push(line);else if(currentType==="object"){if(line.match(/(.+)\s?:\s?(.+)/i)){arg=RegExp.$1;var result=RegExp.$2.replace(/(\d+)%/ig,function(match,p1){return String(p1*.01)});result=isNaN(Number(result))?String(result).trim():Number(result)}else{arg=line;result=true}arg=LeUtilities.shrinkTextWithUnderscores(arg,true);obj[code][arg]=
result}}}}}};$.prototype.parseLeTBSTags=function(){var groups=[$dataActors,$dataEnemies,$dataClasses,$dataWeapons,$dataArmors,$dataStates,$dataSkills,$dataItems,$dataWeapons];for(let i=0;i<groups.length;i++){var group=groups[i];for(var j=1;j<group.length;j++){var obj=group[j];this.getLeTBSMainTags().forEach(function(data){if(data.type==="object"){var code=LeUtilities.shrinkTextWithUnderscores("tags_"+data.name);for(var property in obj[code])if(obj[code].hasOwnProperty(property)){this.processLeTBSTagsAutoParse(property,
obj,obj[code]);this.parseLeTBSTag(property,obj,obj[code])}}},this)}}};$.prototype.processLeTBSTagsAutoParse=function(prop,obj,tags){var element=tags[prop];var newProp;if(element instanceof Array)return;if(prop.match(/(.+)\((.+)\)/i)){if(prop.includes("+"))newProp=RegExp.$1+"_Add";else if(prop.includes("%"))newProp=RegExp.$1+"_Rate";else newProp=RegExp.$1;tags[newProp]=tags[newProp]||{};tags[newProp][RegExp.$2]=element;delete tags[prop]}else if(prop.match(/\+/)){tags[prop.replace("+","_Add")]=element;
delete tags[prop]}else if(prop.match(/%/)){tags[prop.replace("%","_Rate")]=element;delete tags[prop]}if(String(element).match(",")){var array=LeUtilities.stringToArray(element);if(prop.contains("+")||prop.contains("%"))newProp=prop.replace("+","Array_Add").replace("%","Array_Rate");else newProp=prop+"Array";if(array.length===2){tags[newProp.replace("Array","X")]=array[0];tags[newProp.replace("Array","Y")]=array[1]}tags[newProp]=array}};$.prototype.parseLeTBSTag=function(prop,obj,tags){}})(Scene_Boot);
(($)=>{$.loadLeTBS=function(filename,hue){return this.loadBitmap("img/leTBS/",filename,hue,true)};$.loadLeTBSBattler=function(filename,hue){return this.loadBitmap("img/leTBS/Battlers/",filename,hue,true)};$.loadLeTBSStatus=function(filename,hue){return this.loadBitmap("img/leTBS/Status/",filename,hue,true)};$.loadLeTBSProjectile=function(filename,hue){return this.loadBitmap("img/leTBS/Projectiles/",filename,hue,true)};$.loadLeTBSWeaponSprite=function(filename,hue){return this.loadBitmap("img/leTBS/Weapons/",
filename,hue,true)}})(ImageManager);(($)=>{$.processLeTBSTagsForBattlers=function(){const groups=[...$dataActors,...$dataEnemies,...$dataClasses];for(let obj of groups)if(obj){let letbs=false;obj._leTbsCustomTags={};obj.leTBS_Tags={};obj.TagsLetbs.movePoints=Lecode.S_TBS.defaultMovePoints;obj.TagsLetbs.moveScope=Lecode.S_TBS.defaultMoveScope;obj.TagsLetbs.moveScopeOptions="";obj.TagsLetbs.atkAnim=Lecode.S_TBS.defaultAttackAnimation;obj.TagsLetbs.atkScope=Lecode.S_TBS.defaultAttackScope;obj.TagsLetbs.atkAoe=
Lecode.S_TBS.defaultAttackAoE;obj.TagsLetbs.atkSequenceData=Lecode.S_TBS.defaultAttackSequence;obj.TagsLetbs.oneTimeMove=Lecode.S_TBS.oneTimeMove;obj.TagsLetbs.oneTimeOffense=Lecode.S_TBS.oneTimeOffense;obj.TagsLetbs.collapseAnim=Lecode.S_TBS.collapseAnimation;obj.TagsLetbs.passOnAtkUse=false;obj.TagsLetbs.aiPattern=Lecode.S_TBS.defaultAiPattern;obj.TagsLetbs.passable=false;obj.TagsLetbs.passableOnDeath=false;obj.TagsLetbs.hasNoCorpse=false;obj.TagsLetbs.canStayOnMe=false;obj.TagsLetbs.canStayOnMeOnDeath=
false;obj.TagsLetbs.collisionDmgBonus=0;obj.TagsLetbs.collisionDmgBonusRate=0;obj.TagsLetbs.collisionDmgReduction=0;obj.TagsLetbs.collisionDmgReductionRate=0;obj.TagsLetbs.immuneKnockback=false;obj.TagsLetbs.knockbackBonus=0;obj.TagsLetbs.knockbackReduction=0;obj.TagsLetbs.directionalDmgBonus={front:0,back:0,side:0};obj.TagsLetbs.directionalDmgReduction={front:0,back:0,side:0};obj.TagsLetbs.spriteName=null;obj.TagsLetbs.spriteConfig=null;obj.TagsLetbs.hideStatusWindow=false;obj.TagsLetbs.spriteScaleX=
1;obj.TagsLetbs.spriteScaleY=1;obj.TagsLetbs.spriteTone=[0,0,0,0];obj.TagsLetbs.spriteHue=0;obj.TagsLetbs.loopAnimation=null;obj.TagsLetbs.aiNoAttack=false;obj.TagsLetbs.aiControl=false;obj.TagsLetbs.sequencesOverload={};const notedata=obj.note.split(/[\r\n]+/);for(const line of notedata){if(line.match(/<letbs>/i)){letbs=true;continue}else if(line.match(/<\/letbs>/i))letbs=false;if(letbs){let str="";if(line.match(/move_points\s?:\s?(.+)/i))obj.TagsLetbs.movePoints=Number(RegExp.$1);else if(line.match(/move_scope\s?:\s?(.+)/i))obj.TagsLetbs.moveScope=
String(RegExp.$1);else if(line.match(/move_scope_options\s?:\s?((.|\n)*)/i))obj.TagsLetbs.moveScopeOptions=String(RegExp.$1);else if(line.match(/atk_anim\s?:\s?(.+)/i))obj.TagsLetbs.atkAnim=Number(RegExp.$1);else if(line.match(/atk_scope\s?:\s?(.+)/i))obj.TagsLetbs.atkScope=String(RegExp.$1);else if(line.match(/atk_aoe\s?:\s?(.+)/i))obj.TagsLetbs.atkAoe=String(RegExp.$1);else if(line.match(/atk_sequence\s?:\s?(.+)/i))obj.TagsLetbs.atkSequence=String(RegExp.$1);else if(line.match(/one_time_move/i))obj.TagsLetbs.oneTimeMove=
true;else if(line.match(/one_time_offense/i))obj.TagsLetbs.oneTimeOffense=true;else if(line.match(/collapse_anim\s?:\s?(.+)/i))obj.TagsLetbs.collapseAnim=Number(RegExp.$1);else if(line.match(/pass_on_atk_use/i))obj.TagsLetbs.passOnAtkUse=true;else if(line.match(/ai_pattern\s?:\s?(.+)/i))obj.TagsLetbs.aiPattern=String(RegExp.$1);else if(line.match(/passable_on_death/i))obj.TagsLetbs.passableOnDeath=true;else if(line.match(/passable/i))obj.TagsLetbs.passable=true;else if(line.match(/has_no_corpse/i))obj.TagsLetbs.hasNoCorpse=
true;else if(line.match(/entities_can_stay_on_me/i))obj.TagsLetbs.canStayOnMe=true;else if(line.match(/entities_can_stay_on_me_on_death/i))obj.TagsLetbs.canStayOnMeOnDeath=true;else if(line.match(/collision_damage_bonus\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgBonus=Number(RegExp.$1);else if(line.match(/collision_damage_bonus%\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgBonusRate=Number(RegExp.$1);else if(line.match(/collision_damage_reduction\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgReduction=Number(RegExp.$1);
else if(line.match(/collision_damage_reduction%\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgReductionRate=Number(RegExp.$1);else if(line.match(/immune_knockback/i))obj.TagsLetbs.immuneKnockback=true;else if(line.match(/knockback_bonus\s?:\s?(.+)/i))obj.TagsLetbs.knockbackBonus=Number(RegExp.$1);else if(line.match(/knockback_reduction\s?:\s?(.+)/i))obj.TagsLetbs.knockbackReduction=Number(RegExp.$1);else if(line.match(/back_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.back=Number(RegExp.$1);
else if(line.match(/back_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.back=Number(RegExp.$1);else if(line.match(/front_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.front=Number(RegExp.$1);else if(line.match(/front_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.front=Number(RegExp.$1);else if(line.match(/side_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.side=Number(RegExp.$1);else if(line.match(/side_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.side=
Number(RegExp.$1);else if(line.match(/sprite_name\s?:\s?(.+)/i))obj.TagsLetbs.spriteName=String(RegExp.$1);else if(line.match(/sprite_config\s?:\s?(.+)/i))obj.TagsLetbs.spriteConfig=String(RegExp.$1);else if(line.match(/hide_status_window/i))obj.TagsLetbs.hideStatusWindow=true;else if(line.match(/sprite_scale\s?:\s?(.+)/i)){str=RegExp.$1.split(",");obj.TagsLetbs.spriteScaleX=Number(str[0].trim());obj.TagsLetbs.spriteScaleY=Number(str[1].trim())}else if(line.match(/sprite_tone\s?:\s?(.+)/i)){str=RegExp.$1.split(",");
const r=Number(str[0].trim());const g=Number(str[1].trim());const b=Number(str[1].trim());const gray=Number(str[1].trim());obj.TagsLetbs.spriteTone=[r,g,b,gray]}else if(line.match(/sprite_hue\s?:\s?(.+)/i))obj.TagsLetbs.spriteHue=Number(RegExp.$1);else if(line.match(/loop_animation\s?:\s?(.+)/i))obj.TagsLetbs.loopAnimation=Number(RegExp.$1);else if(line.match(/ai_no_attack/i))obj.TagsLetbs.aiNoAttack=true;else if(line.match(/ai_control/i))obj.TagsLetbs.aiControl=true;else if(line.match(/sequence\((.+)\)\s?:\s?(.+)/i))obj.TagsLetbs.sequencesOverload[RegExp.$1]=
RegExp.$2;else if(line.match(/(.+)\s?:\s?(.+)/i))obj._leTbsCustomTags[RegExp.$1]=RegExp.$2}}}};$.processLeTBSTagsForEquipmentsAndStates=function(){const groups=[...$dataWeapons,...$dataArmors,...$dataStates];for(let obj of groups)if(obj){let letbs=false;obj._leTbsCustomTags={};obj.TagsLetbs.movePointsPlus=0;obj.TagsLetbs.scope=null;obj.TagsLetbs.aoe=null;obj.TagsLetbs.sequence=null;obj.TagsLetbs.moveScope=null;obj.TagsLetbs.moveScopeOptions=null;obj.TagsLetbs.passable=false;obj.TagsLetbs.passableOnDeath=
false;obj.TagsLetbs.hasNoCorpse=false;obj.TagsLetbs.canStayOnMe=false;obj.TagsLetbs.canStayOnMeOnDeath=false;obj.TagsLetbs.collisionDmgBonus=0;obj.TagsLetbs.collisionDmgBonusRate=0;obj.TagsLetbs.collisionDmgReduction=0;obj.TagsLetbs.collisionDmgReductionRate=0;obj.TagsLetbs.immuneKnockback=false;obj.TagsLetbs.knockbackBonus=0;obj.TagsLetbs.knockbackReduction=0;obj.TagsLetbs.directionalDmgBonus={front:0,back:0,side:0};obj.TagsLetbs.directionalDmgReduction={front:0,back:0,side:0};obj.TagsLetbs.onlyDeadTargets=
false;obj.TagsLetbs.allowDeadTargets=false;obj.TagsLetbs.loopAnimation=null;obj.TagsLetbs.focusedByAiFor={};obj.TagsLetbs.aiControl=false;obj.TagsLetbs.sequencesOverload={};obj.TagsLetbs.spriteName=null;obj.TagsLetbs.spriteConfig=null;const notedata=obj.note.split(/[\r\n]+/);for(const line of notedata){if(line.match(/<letbs>/i))letbs=true;else if(line.match(/<\/letbs>/i))letbs=false;if(letbs)if(line.match(/move_points\s?:\s?(.+)/i))obj.TagsLetbs.movePointsPlus=Number(RegExp.$1);else if(line.match(/scope\s?:\s?(.+)/i))obj.TagsLetbs.scope=
String(RegExp.$1);else if(line.match(/aoe\s?:\s?(.+)/i))obj.TagsLetbs.aoe=String(RegExp.$1);else if(line.match(/sequence\s?:\s?(.+)/i))obj.TagsLetbs.sequence=String(RegExp.$1);else if(line.match(/move_scope\s?:\s?(.+)/i))obj.TagsLetbs.moveScope=String(RegExp.$1);else if(line.match(/move_scope_options\s?:\s?((.|\n)*)/i))obj.TagsLetbs.moveScopeOptions=String(RegExp.$1);else if(line.match(/passable_on_death/i))obj.TagsLetbs.passableOnDeath=true;else if(line.match(/passable/i))obj.TagsLetbs.passable=
true;else if(line.match(/has_no_corpse/i))obj.TagsLetbs.hasNoCorpse=true;else if(line.match(/entities_can_stay_on_me/i))obj.TagsLetbs.canStayOnMe=true;else if(line.match(/entities_can_stay_on_me_on_death/i))obj.TagsLetbs.canStayOnMeOnDeath=true;else if(line.match(/collision_damage_bonus\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgBonus=Number(RegExp.$1);else if(line.match(/collision_damage_bonus%\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgBonusRate=Number(RegExp.$1);else if(line.match(/collision_damage_reduction\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgReduction=
Number(RegExp.$1);else if(line.match(/collision_damage_reduction%\s?:\s?(.+)/i))obj.TagsLetbs.collisionDmgReductionRate=Number(RegExp.$1);else if(line.match(/immune_knockback/i))obj.TagsLetbs.immuneKnockback=true;else if(line.match(/knockback_bonus\s?:\s?(.+)/i))obj.TagsLetbs.knockbackBonus=Number(RegExp.$1);else if(line.match(/knockback_reduction\s?:\s?(.+)/i))obj.TagsLetbs.knockbackReduction=Number(RegExp.$1);else if(line.match(/knockback_bonus\s?:\s?(.+)/i))obj.TagsLetbs.knockbackBonus=Number(RegExp.$1);
else if(line.match(/knockback_reduction\s?:\s?(.+)/i))obj.TagsLetbs.knockbackReduction=Number(RegExp.$1);else if(line.match(/back_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.back=Number(RegExp.$1);else if(line.match(/back_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.back=Number(RegExp.$1);else if(line.match(/front_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.front=Number(RegExp.$1);else if(line.match(/front_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.front=
Number(RegExp.$1);else if(line.match(/side_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.side=Number(RegExp.$1);else if(line.match(/side_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.side=Number(RegExp.$1);else if(line.match(/only_dead_targets/i))obj.TagsLetbs.onlyDeadTargets=true;else if(line.match(/allow_dead_targets/i))obj.TagsLetbs.allowDeadTargets=true;else if(line.match(/loop_animation\s?:\s?(.+)/i))obj.TagsLetbs.loopAnimation=Number(RegExp.$1);else if(line.match(/focused_by_ai_for_(.+)\s?:\s?(.+)/i))obj.TagsLetbs.focusedByAiFor[RegExp.$1]=
Number(RegExp.$2);else if(line.match(/ai_control/i))obj.TagsLetbs.aiControl=true;else if(line.match(/sequence\((.+)\)\s?:\s?(.+)/i))obj.TagsLetbs.sequencesOverload[RegExp.$1]=RegExp.$2;else if(line.match(/sprite_name\s?:\s?(.+)/i))obj.TagsLetbs.spriteName=String(RegExp.$1);else if(line.match(/sprite_config\s?:\s?(.+)/i))obj.TagsLetbs.spriteConfig=String(RegExp.$1);else if(line.match(/(.+)\s?:\s?(.+)/i))obj._leTbsCustomTags[RegExp.$1]=RegExp.$2}}};$.processLeTBSTagsForObjects=function(){const groups=
[...$dataSkills,...$dataItems,...$dataWeapons];for(let obj of groups)if(obj){let letbs=false;let letbs_ai=false;let letbs_sequence=false;obj._leTbsCustomTags={};obj.TagsLetbs.scope=null;obj.TagsLetbs.scopeSelect=null;obj.TagsLetbs.aoe=null;obj.TagsLetbs.sequence=null;obj.TagsLetbs.passOnUse=false;obj.TagsLetbs.maxUse=1;obj.TagsLetbs.scopeOptions=[];obj.TagsLetbs.aoeOptions=[];obj.TagsLetbs.collisionFormula=null;obj.TagsLetbs.directionalDmgBonus={front:0,back:0,side:0};obj.TagsLetbs.directionalDmgReduction=
{front:0,back:0,side:0};obj.TagsLetbs.aiConfig={type:"",use_condition:"true",escape_condition:"true",rush_condition:"true",use_on_dead:false,maximise_targets:false,summon_near:"enemies",avoid_friendly_fire:0};obj.TagsLetbs.sequence=[];obj.TagsLetbs.loopAnimation=null;obj.TagsLetbs.changeMovePoints="0";const notedata=obj.note.split(/[\r\n]+/);for(const line of notedata){if(line.match(/<letbs>/i))letbs=true;else if(line.match(/<\/letbs>/i))letbs=false;else if(line.match(/<letbs_ai>/i))letbs_ai=true;
else if(line.match(/<\/letbs_ai>/i))letbs_ai=false;else if(line.match(/<letbs_sequence>/i))letbs_sequence=true;else if(line.match(/<\/letbs_sequence>/i))letbs_sequence=false;if(letbs)if(line.match(/scope\s?:\s?(.+)/i))obj.TagsLetbs.scope=String(RegExp.$1);else if(line.match(/aoe\s?:\s?(.+)/i))obj.TagsLetbs.aoe=String(RegExp.$1);else if(line.match(/scope_select\s?:\s?(.+)/i))obj.TagsLetbs.scopeSelect=String(RegExp.$1);else if(line.match(/sequence\s?:\s?(.+)/i))obj.TagsLetbs.sequence=String(RegExp.$1);
else if(line.match(/pass_on_use/i))obj.TagsLetbs.passOnUse=true;else if(line.match(/max_use:\s?:\s?(.+)/i))obj.TagsLetbs.maxUse=Number(RegExp.$1);else if(line.match(/scope_options\s?:\s?((.|\n)*)/i))obj.TagsLetbs.scopeOptions=String(RegExp.$1);else if(line.match(/aoe_options\s?:\s?((.|\n)*)/i))obj.TagsLetbs.aoeOptions=String(RegExp.$1);else if(line.match(/collision_formula\s?:\s?(.+)/i))obj.TagsLetbs.collisionFormula=String(RegExp.$1);else if(line.match(/knockback_bonus\s?:\s?(.+)/i))obj.TagsLetbs.knockbackBonus=
Number(RegExp.$1);else if(line.match(/knockback_reduction\s?:\s?(.+)/i))obj.TagsLetbs.knockbackReduction=Number(RegExp.$1);else if(line.match(/back_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.back=Number(RegExp.$1);else if(line.match(/back_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.back=Number(RegExp.$1);else if(line.match(/front_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.front=Number(RegExp.$1);else if(line.match(/front_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.front=
Number(RegExp.$1);else if(line.match(/side_dmg_bonus\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgBonus.side=Number(RegExp.$1);else if(line.match(/side_dmg_reduction\s?:\s?(.+)/i))obj.TagsLetbs.directionalDmgReduction.side=Number(RegExp.$1);else if(line.match(/loop_animation\s?:\s?(.+)/i))obj.TagsLetbs.loopAnimation=Number(RegExp.$1);else if(line.match(/change_move_points\s?:\s?(.+)/i))obj.TagsLetbs.changeMovePoints=String(RegExp.$1);else{if(line.match(/(.+)\s?:\s?(.+)/i))obj._leTbsCustomTags[RegExp.$1]=
RegExp.$2}else if(letbs_ai)if(line.match(/type\s?:\s?(.+)/i))obj.TagsLetbs.aiConfig.type=String(RegExp.$1);else if(line.match(/use_condition\s?:\s?(.+)/i))obj.TagsLetbs.aiConfig.use_condition=String(RegExp.$1);else if(line.match(/escape_condition\s?:\s?(.+)/i))obj.TagsLetbs.aiConfig.escape_condition=String(RegExp.$1);else if(line.match(/rush_condition\s?:\s?(.+)/i))obj.TagsLetbs.aiConfig.rush_condition=String(RegExp.$1);else if(line.match(/use_on_dead/i))obj.TagsLetbs.aiConfig.use_on_dead=true;else if(line.match(/maximise_targets/i))obj.TagsLetbs.aiConfig.maximise_targets=
true;else if(line.match(/avoid_friendly_fire\s?:\s?(.+)%/i))obj.TagsLetbs.aiConfig.avoid_friendly_fire=Number(RegExp.$1)*.01;else{if(line.match(/summon_near\s?:\s?(.+)/i))obj.TagsLetbs.aiConfig.summon_near=String(RegExp.$1)}else if(letbs_sequence)obj.TagsLetbs.sequence.push(line)}}}})(DataManager);(($)=>{Lecode.S_TBS.oldGameTroop_updateInterpreter=$.prototype.updateInterpreter;$.prototype.updateInterpreter=function(){if(!Lecode.S_TBS.commandOn){Lecode.S_TBS.oldGameTroop_updateInterpreter.call(this);
return}this._interpreter.update();if(this._interpreter._list===null){if(this.setupStartingMapEvent())return true;if(this.setupAutorunCommonEvent())return true}};$.prototype.setupStartingMapEvent=function(){var events=$gameMap.events();for(let i=0;i<events.length;i++){var event=events[i];if(event.isStarting()){event.clearStartingFlag();this._interpreter.setup(event.list(),event.eventId());return true}}return false};$.prototype.setupAutorunCommonEvent=function(){for(let i=0;i<$dataCommonEvents.length;i++){var event=
$dataCommonEvents[i];if(event&&event.trigger===1&&$gameSwitches.value(event.switchId)){this._interpreter.setup(event.list);return true}}return false}})(Game_Troop);(($)=>{Lecode.S_TBS.oldIsPassable_method=$.prototype.isPassable;$.prototype.isPassable=function(x,y,d){var result=Lecode.S_TBS.oldIsPassable_method.call(this,x,y,d);if(LeUtilities.isScene("Scene_Battle")&&BattleManagerTBS.activeEntity()){var entityCell=BattleManagerTBS.activeEntity().getCell();var cell=BattleManagerTBS.getCellAt(x,y);if(cell&&
!(entityCell.x==x&&entityCell.y==y)&&cell.isThereEntity())return false}return result};Lecode.S_TBS.oldGameMap_updateInterpreter=$.prototype.updateInterpreter;$.prototype.updateInterpreter=function(){if(LeUtilities.isScene("Scene_Battle")&&Lecode.S_TBS.commandOn)return;Lecode.S_TBS.oldGameMap_updateInterpreter.call(this)}})(Game_Map);(($)=>{Lecode.S_TBS.oldGameEvent_setupPage=$.prototype.setupPage;$.prototype.setupPage=function(){Lecode.S_TBS.oldGameEvent_setupPage.call(this);if(LeUtilities.isScene("Scene_Battle")&&
Lecode.S_TBS.commandOn)BattleManagerTBS.onEventPageSetup(this)};Lecode.S_TBS.oldGameEvent_forceMoveRoute=$.prototype.forceMoveRoute;$.prototype.forceMoveRoute=function(route){Lecode.S_TBS.oldGameEvent_forceMoveRoute.call(this,route);if(LeUtilities.isScene("Scene_Battle")&&Lecode.S_TBS.commandOn)BattleManagerTBS.onEventForceMoveRoute(this)}})(Game_Event);(($)=>{Lecode.S_TBS.oldGameAction_executeDamage=$.prototype.executeDamage;$.prototype.executeDamage=function(target,value){value+=value*target._leTbsDirectionalDmg;
Lecode.S_TBS.oldGameAction_executeDamage.call(this,target,Math.floor(value))}})(Game_Action);(($)=>{Lecode.S_TBS.oldGameBattler_initMembers=$.prototype.initMembers;$.prototype.initMembers=function(){Lecode.S_TBS.oldGameBattler_initMembers.call(this);this._leTbsDirectionalDmg=0};$.prototype.leTBS_setDirectionalDmgEffects=function(amount){this._leTbsDirectionalDmg=amount};Lecode.S_TBS.oldGameBattler_addNewState=$.prototype.addNewState;$.prototype.addNewState=function(stateId){Lecode.S_TBS.oldGameBattler_addNewState.call(this,
stateId);if(LeUtilities.isScene("Scene_Battle")&&Lecode.S_TBS.commandOn){var state=$dataStates[stateId];var entity=BattleManagerTBS.getEntityByBattler(this);if(entity)entity.onNewState(state)}};Lecode.S_TBS.oldGameBattler_eraseState=$.prototype.eraseState;$.prototype.eraseState=function(stateId){Lecode.S_TBS.oldGameBattler_eraseState.call(this,stateId);if(LeUtilities.isScene("Scene_Battle")&&Lecode.S_TBS.commandOn){var state=$dataStates[stateId];var entity=BattleManagerTBS.getEntityByBattler(this);
if(entity)entity.onStateErased(state)}};$.prototype.rpgObject=function(){return this.isActor()?this.actor():this.enemy()};$.prototype.getEntity=function(){return BattleManagerTBS.getEntityByBattler(this)};$.prototype.getLeTBSTagValue=function(str,isNumber,defaultValue){defaultValue=defaultValue||(isNumber?0:"");var main=this.getLeTBSTag(str);if(isNumber&&isNaN(main))main=defaultValue;if(!isNumber)main=main||defaultValue;var add=this.getLeTBSTagSum(str+"_Add",isNumber);var rate=this.getLeTBSTagSum(str+
"_Rate",isNumber);return isNumber?Math.round((main+add)*(1+rate)):main+add};$.prototype.getLeTBSTagNumberValue=function(prop,defaultValue){var result=this.getLeTBSTagValue(prop,true,defaultValue);return result};$.prototype.getLeTBSTagStringValue=function(prop,defaultValue){var result=this.getLeTBSTagValue(prop,false,defaultValue);return LeUtilities.perfectStringList(result)};$.prototype.collectLeTBSTags=function(str){var result=LeUtilities.stringToArray(this.getLeTBSTagStringValue(str,null));return result};
$.prototype.hasLeTBSTag=function(str){var hasNegate=!!this.getLeTBSTag("!"+str);if(hasNegate)return false;var result=!!this.getLeTBSTag(str);return result};$.prototype.getLeTBSTagArrayValue=function(str,defaultValue){str+="Array";defaultValue=defaultValue||[];var main=this.getLeTBSTag(str)||defaultValue;var add=this.collectLeTBSTag(str+"_Add");var rate=this.collectLeTBSTag(str+"_Rate");var i,j;for(i=0;i<add.length;i++){var array=add[i];for(j=0;j<array.length;j++){var value=main[j];if(isNaN(value))main[j]+=
", "+add[i][j];else main[j]+=add[i][j]}}for(i=0;i<rate.length;i++){var array=rate[i];for(j=0;j<array.length;j++){var value=main[j];if(!isNaN(value))main[j]*=1+rate[i][j]}}return main};$.prototype.getLeTBSTagObjectValue=function(str,defaultValue){defaultValue=defaultValue||{};var main=JsonEx.makeDeepCopy(this.getLeTBSTag(str)||defaultValue);var add=this.collectLeTBSTag(str+"_Add");var rate=this.collectLeTBSTag(str+"_Rate");var i,j;for(i=0;i<add.length;i++){var obj=add[i];for(var property in obj)if(main.hasOwnProperty(property)&&
!isNaN(main[property]))main[property]+=obj[property]}for(j=0;j<rate.length;j++){var obj=rate[j];for(var property in obj)if(main.hasOwnProperty(property)&&!isNaN(main[property]))main[property]*=1+obj[property]}return main};$.prototype.getLeTBSTag=function(str){var i;var tagEffect=this.rpgObject().TagsLetbs_Effects[str];if(tagEffect!=null)return tagEffect;var obj=this._itemOnUse;if(obj&&obj.TagsLetbs[str]!=null)return obj.TagsLetbs[str];for(i=0;i<this.states().length;i++){var state=this.states()[i];
if(state&&state.TagsLetbs[str]!=null)return state.TagsLetbs[str]}if(this.isActor()){for(i=0;i<this.equips().length;i++){var equip=this.equips()[i];if(equip&&equip.TagsLetbs[str]!=null)return equip.TagsLetbs[str]}var rpgClass=this.currentClass();if(rpgClass.TagsLetbs[str]!=null)return rpgClass.TagsLetbs[str]}return this.rpgObject().TagsLetbs[str]};$.prototype.getLeTBSTagSum=function(str,isNumber){var value=isNumber?this.rpgObject().TagsLetbs[str]||0:", "+(this.rpgObject().TagsLetbs[str]||"");var tagEffect=
this.rpgObject().TagsLetbs_Effects[str];value+=isNumber?tagEffect||0:", "+(tagEffect||"");var obj=this._itemOnUse;if(obj)value+=isNumber?obj.TagsLetbs[str]||0:", "+(obj.TagsLetbs[str]||"");this.states().forEach(function(state){if(state)value+=isNumber?state.TagsLetbs[str]||0:", "+(state.TagsLetbs[str]||"")});if(this.isActor()){this.equips().forEach(function(equip){if(equip)value+=isNumber?equip.TagsLetbs[str]||0:", "+(equip.TagsLetbs[str]||"")});var rpgClass=this.currentClass();value+=isNumber?rpgClass.TagsLetbs[str]||
0:", "+(rpgClass.TagsLetbs[str]||"")}return value};$.prototype.collectLeTBSTag=function(str){var i,array=[];if(this.rpgObject().TagsLetbs[str]!=null)array.push(this.rpgObject().TagsLetbs[str]);var tagEffect=this.rpgObject().TagsLetbs_Effects[str];if(tagEffect!=null)array.push(tagEffect);var obj=this._itemOnUse;if(obj&&obj.TagsLetbs[str]!=null)array.push(obj.TagsLetbs[str]);for(i=0;i<this.states().length;i++){var state=this.states()[i];if(state&&state.TagsLetbs[str]!=null)array.push(state.TagsLetbs[str])}if(this.isActor()){for(i=
0;i<this.equips().length;i++){var equip=this.equips()[i];if(equip&&equip.TagsLetbs[str]!=null)array.push(equip.TagsLetbs[str])}var rpgClass=this.currentClass();if(rpgClass.TagsLetbs[str]!=null)array.push(rpgClass.TagsLetbs[str])}return array}})(Game_Battler);(($)=>{$.prototype.hasConfusionStateAttackAlly=function(){return this.confusionLevel()===1};$.prototype.hasConfusionStateAttackAnyone=function(){return this.confusionLevel()===2};$.prototype.hasConfusionStateAttackEnemy=function(){return this.confusionLevel()===
3}})(Game_BattlerBase);(($)=>{Lecode.S_TBS.oldGameInterpreter_initialize=$.prototype.initialize;$.prototype.initialize=function(depth){Lecode.S_TBS.oldGameInterpreter_initialize.call(this,depth);this._setupQueue=[]};Lecode.S_TBS.oldGameInterpreter_command123=$.prototype.command123;$.prototype.command123=function(){var result=Lecode.S_TBS.oldGameInterpreter_command123.call(this);if(this._eventId>0&&this._params[1]===0)if(Lecode.S_TBS.commandOn&&$gameParty.inBattle()){var event=$gameMap.event(this._eventId);
event.refresh();event.update()}return result};$.prototype.setupInQueue=function(list,eventId){this._setupQueue.push([list,eventId||0])};Lecode.S_TBS.oldGameInterpreter_update=$.prototype.update;$.prototype.update=function(){Lecode.S_TBS.oldGameInterpreter_update.call(this);if(!this.isRunning()){var data=this._setupQueue.shift();if(data)this.setup(data[0],data[1])}};Lecode.S_TBS.oldGameInterpreter_command108=$.prototype.command108;$.prototype.command108=function(){if(this._leTBSSequencePreparing){this._leTBSSequence.push(this._params[0]);
while(this.nextEventCode()===408){this._index++;this._leTBSSequence.push(this.currentCommand().parameters[0])}return true}else return Lecode.S_TBS.oldGameInterpreter_command108.call(this)};Lecode.S_TBS.oldGameInterpreter_pluginCommand=$.prototype.pluginCommand;$.prototype.pluginCommand=function(command,args){this._leTBSCommandFlow=null;Lecode.S_TBS.oldGameInterpreter_pluginCommand.call(this,command,args);if(command==="LeTBS"){this._leTBSCommandFlow={isWaiting:function(){return false},update:function(){},
onEnd:function(){}};var key=args[0];args=args.map(function(str){return str});args.shift();Lecode.S_TBS.CommandSuccess=true;var func;try{func=eval("this.interpretLeTBS_"+key+".bind(this,args)")}catch(e){}var result=func(args);if(result){if(result.waitWhile&&args.join().match(/wait/i))this._leTBSCommandFlow.isWaiting=result.waitWhile;if(result.update)this._leTBSCommandFlow.update=result.update;if(result.onEnd)this._leTBSCommandFlow.onEnd=result.onEnd}else Lecode.S_TBS.CommandSuccess=false}};Lecode.S_TBS.oldGameInterpreter_updateWaitMode=
$.prototype.updateWaitMode;$.prototype.updateWaitMode=function(){if(this._leTBSCommandFlow){this._leTBSCommandFlow.update();var waiting=this._leTBSCommandFlow.isWaiting();if(!waiting){this._waitMode="";this._leTBSCommandFlow.onEnd();this._leTBSCommandFlow=null;return Lecode.S_TBS.oldGameInterpreter_updateWaitMode.call(this)}return waiting}else return Lecode.S_TBS.oldGameInterpreter_updateWaitMode.call(this)};$.prototype.readEntityForLeTBS=function(data){if(data.toLowerCase()==="entity")return BattleManagerTBS._triggeredEventEntity;
else if(data.toLowerCase()==="activeentity")return BattleManagerTBS.activeEntity();else if(data.match(/^flaggedentity\((.+)\)$/i))return BattleManagerTBS.getFlaggedEntity(RegExp.$1);else if(data.match(/^actor\((.+)\)$/i))return BattleManagerTBS.getEntityByActorId(Number(RegExp.$1));else if(data.match(/^enemy\((.+)\)$/i))return BattleManagerTBS.getEntityByEnemyId(Number(RegExp.$1));else if(data.match(/^randomEnemy$/i))return LeUtilities.getRandomValueInArray(BattleManagerTBS.enemyEntities());else if(data.match(/^randomActor$/i))return LeUtilities.getRandomValueInArray(BattleManagerTBS.allyEntities());
else if(data.match(/^closestEnemyOf\((.+)\)$/i)){var entity=this.readEntityForLeTBS(RegExp.$1);if(!entity)return null;var group=entity.battler().isActor()?BattleManagerTBS.enemyEntities():BattleManagerTBS.allyEntities();return LeUtilities.sortByClosestDistance(entity.getCell(),group,function(obj){return obj.getCell()})[0]}else if(data.match(/^closestAllyOf\((.+)\)$/i)){var entity=this.readEntityForLeTBS(RegExp.$1);if(!entity)return null;var group=entity.battler().isEnemy()?BattleManagerTBS.enemyEntities():
BattleManagerTBS.allyEntities();return LeUtilities.sortByClosestDistance(entity.getCell(),group,function(obj){return obj.getCell()})[0]}return null};$.prototype.readCellForLeTBS=function(data){var entity=this.readEntityForLeTBS(data);if(entity)return entity.getCell();if(data.match(/^\((\d+),(\d+)\)$/i)){var x=Number(RegExp.$1);var y=Number(RegExp.$2);return BattleManagerTBS.getCellAt(x,y)}return null};$.prototype.readObjForLeTBS=function(data){if(data.match(/^skill\((.+)\)$/i))return $dataSkills[Number(RegExp.$1)];
else if(data.match(/item\((.+)\)/i))return $dataItems[Number(RegExp.$1)];else if(data.toLowerCase()==="activeitem"){var action=BattleManagerTBS.activeAction();if(action)return action.item();return null}return null};$.prototype.interpretLeTBS_ON=function(args){Lecode.S_TBS.commandOn=true;return{}};$.prototype.interpretLeTBS_OFF=function(args){Lecode.S_TBS.commandOn=false;return{}};$.prototype.interpretLeTBS_Wait=function(args){var value=Number(args[0]);BattleManagerTBS.wait(value);return{waitWhile:function(){return BattleManagerTBS.isWaiting()}}};
$.prototype.interpretLeTBS_ResetEvents=function(args){LeUtilities.resetMapEvents();return{}};$.prototype.interpretLeTBS_ForceEventTrigger=function(args){var type=args[0].toLowerCase();if(type==="byid"){var eventId=Number(args[1]);BattleManagerTBS.executeEventsByForce(eventId)}else if(type==="bytrigger"){var triggerType=args[1].toLowerCase();BattleManagerTBS.executeEventsWhen(triggerType)}else return false;return{}};$.prototype.interpretLeTBS_ShowCursor=function(args){BattleManagerTBS.cursor().show();
return{}};$.prototype.interpretLeTBS_HideCursor=function(args){BattleManagerTBS.cursor().hide();return{}};$.prototype.interpretLeTBS_SelectCell=function(args){var cell=this.readCellForLeTBS(args[0]);if(cell)BattleManagerTBS.setCursorCell(cell);else return false;return{}};$.prototype.interpretLeTBS_ResetCell=function(args){var cell=BattleManagerTBS.activeEntity().getCell();if(cell)BattleManagerTBS.setCursorCell(cell);else return false;return{}};$.prototype.interpretLeTBS_ForceMove=function(args){var entity=
this.readEntityForLeTBS(args[0]);var cell=this.readCellForLeTBS(args[2]);var type=args[1].toLowerCase();var maxPM=args[3].toLowerCase()==="infinity"?Infinity:Number(args[3]);if(entity&&entity.battler().isAlive()&&cell){if(type==="to")entity.processMovementTo(cell,Infinity,true);else if(type==="near")entity.processMovementNear(cell,maxPM,true);else if(type==="away")entity.processMovementAway(cell,maxPM,true);if(!entity.isMoving())return false}else return false;return{waitWhile:function(entity){return entity.isMoving()}.bind(this,
entity),onEnd:function(entity){BattleManagerTBS.setCursorCell(entity.getCell())}.bind(this,entity)}};$.prototype.interpretLeTBS_ForceJump=function(args){var entity=this.readEntityForLeTBS(args[0]);var cell=this.readCellForLeTBS(args[2]);var type=args[1].toLowerCase();var maxPM=args[3].toLowerCase()==="infinity"?Infinity:Number(args[3]);var height=args[4]?Number(args[4]):120;if(entity&&entity.battler().isAlive()&&cell){if(type==="to")entity.processJumpTo(cell,Infinity,height);else if(type==="near")entity.processJumpNear(cell,
maxPM,height);else if(type==="away")entity.processJumpAway(cell,maxPM,height);if(!entity.sprite().hasTrajectory())return false}else return false;return{waitWhile:function(entity){return entity.sprite().hasTrajectory()}.bind(this,entity),onEnd:function(entity){BattleManagerTBS.setCursorCell(entity.getCell())}.bind(this,entity)}};$.prototype.interpretLeTBS_SetEntityPosition=function(args){var entity=this.readEntityForLeTBS(args[0]);var type=args[1].toLowerCase();var cell=this.readCellForLeTBS(args[2]);
var anim=Number(args[3]);if(entity&&cell){if(type==="to");else if(type==="near")cell=BattleManagerTBS.getCellNear(entity.getCell(),cell,Infinity);else if(type==="away")cell=BattleManagerTBS.getCellAway(entity.getCell(),cell,30);if(cell){entity.teleport(cell);if(anim)entity.newAnimation(anim,false,0);BattleManagerTBS.setCursorCell(cell)}else return false}else return false;return{}};$.prototype.interpretLeTBS_ForceAction=function(args){var entity=this.readEntityForLeTBS(args[0]);var item=this.readObjForLeTBS(args[1]);
var oldActiveAction=JsonEx.makeDeepCopy(BattleManagerTBS.activeAction());if(entity&&entity.battler().isAlive()&&item){BattleManagerTBS.onForcedActionStart(entity);BattleManagerTBS.forceAction(item,entity)}else return false;return{waitWhile:function(entity){return entity._sequenceManager.isRunning()}.bind(this,entity),onEnd:function(entity,oldActiveAction){BattleManagerTBS.onForcedActionEnd(entity);BattleManagerTBS._activeAction=oldActiveAction}.bind(this,entity,oldActiveAction)}};$.prototype.interpretLeTBS_RequestAction=
function(args){var entity=this.readEntityForLeTBS(args[0]);var item=this.readObjForLeTBS(args[1]);var options={endCallback:function(){BattleManagerTBS.cursor().show()}};if(entity&&entity.battler().isAlive()){if(item){options.item=item;options.behaviorType=item.TagsLetbsAi.type;options.behavior="action_requested";if(!options.behaviorType)throw new Error("[LeTBS] - Requesting an action with no AI tag.");}else{var type=args[1].toLowerCase();options.behaviorType=type;options.behavior="action_requested"}var oldData=
{phase:BattleManagerTBS._subPhase,activeAction:JsonEx.makeDeepCopy(BattleManagerTBS.activeAction()),actionPerformed:entity._actionPerformed,movePerformed:entity._movePerformed};Lecode.S_TBS.requestedAction=true;var target=this.readEntityForLeTBS(args[2]);options.entityTarget=target;BattleManagerTBS.onRequestedActionStart(entity);BattleManagerTBS.startAiTurn(entity,options)}else return false;return{waitWhile:function(){return!!Lecode.S_TBS.requestedAction},update:function(){BattleManagerTBS._aiManager.update()},
onEnd:function(entity,oldData){BattleManagerTBS._subPhase=oldData.phase;BattleManagerTBS._activeAction=oldData.activeAction;entity._actionPerformed=oldData.actionPerformed;entity._movePerformed=oldData.movePerformed}.bind(this,entity,oldData)}};$.prototype.interpretLeTBS_StartSequence=function(args){var entity=this.readEntityForLeTBS(args[0]);var sequenceId=args[1].toLowerCase();if(entity&&entity.battler().isAlive()&&sequenceId)entity.appendSequence(sequenceId);else return false;return{waitWhile:function(entity){return entity._sequenceManager.isRunning()}.bind(this,
entity)}};$.prototype.interpretLeTBS_PrepareSequence=function(args){this._leTBSSequencePreparing=true;this._leTBSSequence=[];return{}};$.prototype.interpretLeTBS_ExecuteSequence=function(args){var entity=this.readEntityForLeTBS(args[0]);var sequence=this._leTBSSequence;if(entity&&entity.battler().isAlive()&&sequence){entity.executeSequence(sequence);this._leTBSSequencePreparing=false;this._leTBSSequence=[]}else return false;return{waitWhile:function(entity){return entity._sequenceManager.isRunning()}.bind(this,
entity)}};$.prototype.interpretLeTBS_Animation=function(args){var entity=this.readEntityForLeTBS(args[0]);var animId=Number(args[1]);if(entity&&animId)entity.newAnimation(animId,false,0);else return false;return{waitWhile:function(entity){return BattleManagerTBS.isAnimationPlaying()}.bind(this,entity)}};$.prototype.interpretLeTBS_AddState=function(args){var entity=this.readEntityForLeTBS(args[0]);var id=Number(args[1]);if(entity&&id){entity.battler().addState(id);if(args.join().toLowerCase().includes("showpopup"))entity.addPopup()}else return false;
return{}};$.prototype.interpretLeTBS_ChangeHP=function(args){var entity=this.readEntityForLeTBS(args[0]);var value=Number(args[1]);if(entity&&!isNaN(value)){entity.battler().gainHp(value);var str=args.join().toLowerCase();if(str.includes("showpopup"))entity.addPopup();if(str.includes("playdamaged"))entity.callSequence("damaged");if(str.includes("checkdeath"))entity.checkDeath()}else return false;return{}};$.prototype.interpretLeTBS_ChangeMP=function(args){var entity=this.readEntityForLeTBS(args[0]);
var value=Number(args[1]);if(entity&&!isNaN(value)){entity.battler().gainMp(value);var str=args.join().toLowerCase();if(str.includes("showpopup"))entity.addPopup();if(str.includes("playdamaged"))entity.callSequence("damaged");if(str.includes("checkdeath"))entity.checkDeath()}else return false;return{}};$.prototype.interpretLeTBS_ChangeTP=function(args){var entity=this.readEntityForLeTBS(args[0]);var value=Number(args[1]);if(entity&&!isNaN(value)){entity.battler().gainTp(value);var str=args.join().toLowerCase();
if(str.includes("showpopup"))entity.addPopup();if(str.includes("playdamaged"))entity.callSequence("damaged");if(str.includes("checkdeath"))entity.checkDeath()}else return false;return{}};$.prototype.interpretLeTBS_ShowPopup=function(args){var entity=this.readEntityForLeTBS(args[0]);var str=args.join(" ");var text=str.regExValue(/text\((.+?)\)/i);var fontSize=str.regExValue(/fontsize\((.+?)\)/i)||28;var color=str.regExValue(/color\((.+?)\)/i)||"#FFF";var icL=str.regExValue(/iconl\((.+?)\)/i)||0;var icR=
str.regExValue(/iconr\((.+?)\)/i)||0;if(entity&&text)entity.addTextIconPopup(text,icL,icR,fontSize,color);else return false;return{}};$.prototype.interpretLeTBS_AddEntity=function(args){var type=args[0].match(/actor\((.+)\)/i)?"actor":args[0].match(/enemy\((.+)\)/i)?"enemy":null;if(type){var id=Number(RegExp.$1);var battler=type==="actor"?new Game_Actor(id):new Game_Enemy(id,0,0);var cell=this.readCellForLeTBS(args[1]);if(cell){var orderType=args[2].toLowerCase();var anim=args[3].toLowerCase()===
"defaultanim"?Lecode.S_TBS.placedBattlerAnim:Number(args[3])||0;var flag=args[4].toLowerCase()||null;var isNeutral=orderType==="neutral";var entity=BattleManagerTBS.addEntity(battler,cell,anim,isNeutral);entity._flag=flag;if(!isNeutral)if(orderType.match(/order\((.+)\)/i)){var result=RegExp.$1;if(result==="first"){BattleManagerTBS._turnOrder.unshift(entity);BattleManagerTBS._activeIndex++}else if(result==="last")BattleManagerTBS._turnOrder.push(entity);else if(result==="remake")BattleManagerTBS.determineTurnOrder();
setTimeout(function(){var order=BattleManagerTBS._turnOrder;var index=BattleManagerTBS._activeIndex;BattleManagerTBS._turnOrderVisual.set(order,index)},500)}}else return false}else return false;return{waitWhile:function(){return BattleManagerTBS.isAnimationPlaying()}}};$.prototype.interpretLeTBS_RemoveEntity=function(args){var entity=this.readEntityForLeTBS(args[0]);var anim=Number(args[1]);if(entity)if(!anim)BattleManagerTBS.destroyEntity(entity,true);else entity.newAnimation(anim,false,0);else return false;
return{waitWhile:function(anim){if(anim)return BattleManagerTBS.isAnimationPlaying();return false}.bind(this,anim),onEnd:function(anim,entity){if(anim)BattleManagerTBS.destroyEntity(entity,true)}.bind(this,anim,entity)}};$.prototype.interpretLeTBS_HideEntity=function(args){var entity=this.readEntityForLeTBS(args[0]);if(entity)BattleManagerTBS.hideEntity(entity);else return false;return{}};$.prototype.interpretLeTBS_ShowEntity=function(args){var entity=this.readEntityForLeTBS(args[0]);if(entity)BattleManagerTBS.showEntity(entity);
else return false;return{}};$.prototype.interpretLeTBS_EntityFadeIn=function(args){var entity=this.readEntityForLeTBS(args[0]);var duration=Number(args[1]);if(entity)entity.fadeIn(duration);else return false;return{waitWhile:function(entity){return entity.sprite().opacity!=entity.defaultOpacity()}.bind(this,entity)}};$.prototype.interpretLeTBS_EntityFadeOut=function(args){var entity=this.readEntityForLeTBS(args[0]);var duration=Number(args[1]);if(entity)entity.fadeOut(duration);else return false;
return{waitWhile:function(entity){return entity.sprite().opacity!=0}.bind(this,entity)}};$.prototype.interpretLeTBS_SetDirection=function(args){var entity=this.readEntityForLeTBS(args[0]);var dir=LeUtilities.directionTextToCode(args[1]);if(entity&&!isNaN(dir))entity.setDir(dir);else return false;return{}};$.prototype.interpretLeTBS_LookAt=function(args){var entity=this.readEntityForLeTBS(args[0]);var cell=this.readCellForLeTBS(args[1]);if(entity&&cell)entity.lookAt(cell);else return false;return{}};
$.prototype.interpretLeTBS_LookEnemies=function(args){var entity=this.readEntityForLeTBS(args[0]);if(entity){var entities=entity.battler().isActor()?BattleManagerTBS.enemyEntities():BattleManagerTBS.allyEntities();entity.lookClosestBattler(entities)}else return false;return{}};$.prototype.interpretLeTBS_LookAllies=function(args){var entity=this.readEntityForLeTBS(args[0]);if(entity){var entities=entity.battler().isEnemy()?BattleManagerTBS.enemyEntities():BattleManagerTBS.allyEntities();entity.lookClosestBattler(entities)}else return false;
return{}};$.prototype.interpretLeTBS_ShowBalloon=function(args){var entity=this.readEntityForLeTBS(args[0]);var id=Number(args[1]);if(args[0].toLowerCase()==="party"&&!isNaN(id))BattleManagerTBS.allyEntities().forEach(function(e){if(e.battler().isAlive())e.startBalloon(id)});else if(args[1].toLowerCase()==="troop"&&!isNaN(id))BattleManagerTBS.enemyEntities().forEach(function(e){if(e.battler().isAlive())e.startBalloon(id)});else if(args[1].toLowerCase()==="all"&&!isNaN(id))BattleManagerTBS.allEntities().forEach(function(e){if(e.battler().isAlive())e.startBalloon(id)});
else if(entity&&!isNaN(id)){if(entity.battler().isAlive())entity.startBalloon(id)}else return false;return{waitWhile:function(){return BattleManagerTBS.allEntities().some(function(entity){return entity.sprite().isBalloonPlaying()})}}};$.prototype.interpretLeTBS_SetTagValue=function(args){var entity=this.readEntityForLeTBS(args[0]);var tagName=args[1];var tagValue=args[2];if(entity&&tagName&&tagValue){tagName=LeUtilities.shrinkTextWithUnderscores(tagName,true);var value=isNaN(Number(tagValue))?tagValue:
Number(tagValue);entity.battler().rpgObject().TagsLetbs_Effects[tagName]=value}else return false;return{}};$.prototype.interpretLeTBS_ResetTagValue=function(args){var entity=this.readEntityForLeTBS(args[0]);var tagName=args[1];if(entity&&tagName){tagName=LeUtilities.shrinkTextWithUnderscores(tagName,true);entity.battler().rpgObject().TagsLetbs_Effects[tagName]=null}else return false;return{}};$.prototype.interpretLeTBS_SetTurn=function(args){var entity=this.readEntityForLeTBS(args[0]);if(entity&&
entity.battler().isAlive()){var index=BattleManagerTBS._turnOrder.indexOf(entity);if(index){BattleManagerTBS._activeIndex=index;var order=BattleManagerTBS._turnOrder;this._turnOrderVisual.updateOnNextTurn(this._turnOrder,index);BattleManagerTBS.startTurn()}else return false}else return false;return{}};$.prototype.interpretLeTBS_EndTurn=function(args){BattleManagerTBS.turnEnd();return{}};$.prototype.interpretLeTBS_StopBattle=function(args){var type=args[0];if(type)switch(type){case "abort":BattleManagerTBS.prepareAbort();
break;case "defeat":BattleManagerTBS.prepareDefeat();break;case "victory":BattleManagerTBS.prepareVictory();break}else return false;return{}};Lecode.S_TBS.oldGameInterpreter_character=$.prototype.character;$.prototype.character=function(param){if(Lecode.S_TBS.commandOn&&$gameParty.inBattle())return $gameMap.event(param>0?param:this._eventId);return Lecode.S_TBS.oldGameInterpreter_character.call(this,param)}})(Game_Interpreter)})();
(()=>{Lecode.S_TBS.commandOn=true;Scene_Base.prototype.onPositioningCancel=function(){const actor=this._windowPositioning.actor();const currentEntity=BattleManagerTBS.getEntityByActorId(actor.actorId());if(currentEntity){BattleManagerTBS.processActorPositioning(actor);BattleManagerTBS.positioningPhaseCancel()}this._windowPositioning.activate()};(($)=>{$.prototype.create=function(){Scene_Base.prototype.create.call(this);Graphics.width=Graphics.boxWidth=816;Graphics.height=Graphics.boxHeight=624;this.createDisplayObjects()};
$.prototype.createDisplayObjects=function(){this.createSpriteset();this.createWindowLayer();this.createAllWindows()};$.prototype.start=function(){Scene_Base.prototype.start.call(this);this.startFadeIn(this.fadeSpeed(),false);$gameScreen.clear();BattleManager.playBattleBgm();BattleManagerTBS._spriteset=this._spriteset;BattleManagerTBS._logWindow=this._logWindow;this._logWindow.setSpriteset(this._spriteset);InputHandlerTBS.setup();this.setMovableWindows();InputHandlerTBS.addWindowBlockingTouch(this._windowConfirm).addWindowBlockingTouch(this._windowCommand).addWindowBlockingTouch(this._windowSkill).addWindowBlockingTouch(this._windowItem).addWindowBlockingTouch(this._windowStatus).addWindowBlockingTouch(this._helpWindow).addWindowBlockingTouch(this._windowEndCommand).addWindowBlockingTouch(this._windowPositioning).addWindowBlockingTouch(this._windowPositioningConfirm);
BattleManagerTBS.startBattle()};$.prototype.update=function(){$gameMap.update(true);$gameScreen.update();InputHandlerTBS.update();BattleManagerTBS.update();Scene_Base.prototype.update.call(this)};$.prototype.createSpriteset=function(){this._spriteset=new Spriteset_BattleTBS;this.addChild(this._spriteset)};$.prototype.createAllWindows=function(){this.createLogWindow();this.createPositioningWindow();this.createPositioningConfirmWindow();this.createConfirmationWindow();this.createStatusWindow();this.createCommandWindow();
this.createHelpWindow();this.createSkillWindow();this.createItemWindow();this.createEndCommandWindow();this.createMessageWindow()};$.prototype.setMovableWindows=function(){BattleManagerTBS.getLayer("movableWindows").addChild(this._windowCommand);BattleManagerTBS.getLayer("movableWindows").addChild(this._windowSkill);BattleManagerTBS.getLayer("movableWindows").addChild(this._windowItem)};$.prototype.createPositioningWindow=function(){this._windowPositioning=new Window_TBSPositioning;this._windowPositioning.setHandler("ok",
this.onPositioningOk.bind(this));this._windowPositioning.setHandler("cancel",this.onPositioningCancel.bind(this));this._windowPositioning.setHandler("exit_up",this.onPositioningExitUp.bind(this));this._windowPositioning.close();this._windowPositioning.deactivate();this.addWindow(this._windowPositioning)};$.prototype.createPositioningConfirmWindow=function(){this._windowPositioningConfirm=new Window_TBSPositioningConfirm;this._windowPositioningConfirm.setHandler("ok",this.onPositioningConfirmOk.bind(this));
this._windowPositioningConfirm.setHandler("cancel",this.onPositioningConfirmCancel.bind(this));this._windowPositioningConfirm.setHandler("cursor_down",this.onPositioningConfirmCursorDown.bind(this));this._windowPositioningConfirm.close();this._windowPositioningConfirm.deactivate();this.addWindow(this._windowPositioningConfirm)};$.prototype.createConfirmationWindow=function(){this._windowConfirm=new Window_TBSConfirm;this._windowConfirm.setHandler("ok",this.onConfirmationOK.bind(this));this._windowConfirm.setHandler("cancel",
this.onConfirmationCancel.bind(this));this._windowConfirm.hide();this._windowConfirm.deactivate();this.addWindow(this._windowConfirm)};$.prototype.createStatusWindow=function(){this._windowStatus=new Window_TBSStatus;this._windowStatus.hide();this.addWindow(this._windowStatus)};$.prototype.createCommandWindow=function(){this._windowCommand=new Window_TBSCommand;this._windowCommand.setHandler("cancel",this.onCommandInput.bind(this,"cancel"));this._windowCommand.hide();this._windowCommand.deactivate()};
$.prototype.createSkillWindow=function(){this._windowSkill=new Window_TBSSkillList;this._windowSkill.setHandler("ok",this.onSkillInput.bind(this,"ok"));this._windowSkill.setHandler("cancel",this.onSkillInput.bind(this,"cancel"));this._windowSkill._helpWindow=this._helpWindow;this._windowSkill.hide();this._windowSkill.close();this._windowSkill.deactivate()};$.prototype.createItemWindow=function(){this._windowItem=new Window_TBSItemList;this._windowItem.setHandler("ok",this.onItemInput.bind(this,"ok"));
this._windowItem.setHandler("cancel",this.onItemInput.bind(this,"cancel"));this._windowItem._helpWindow=this._helpWindow;this._windowItem.hide();this._windowItem.close();this._windowItem.deactivate()};$.prototype.createEndCommandWindow=function(){this._windowEndCommand=new Window_TBSEndCommand;this._windowEndCommand.setHandler("options",this.onEndCommandInput.bind(this,"options"));this._windowEndCommand.setHandler("escape",this.onEndCommandInput.bind(this,"escape"));this._windowEndCommand.setHandler("cancel",
this.onEndCommandInput.bind(this,"cancel"));this._windowEndCommand.hide();this._windowEndCommand.deactivate();this.addWindow(this._windowEndCommand)};$.prototype.activatePositioningWindow=function(){this._windowPositioning.open();this._windowPositioningConfirm.open();this._windowPositioning.selectLast();this._windowPositioning.activate();for(let i=0;i<$gameParty.allMembers().length;i++){this._windowPositioning.select(i);if(!this._windowPositioning._disabled[i])break}};$.prototype.onPositioningOk=
function(){const actor=this._windowPositioning.actor();this._windowPositioning.disableSelection();this._windowPositioning.refresh();this._windowPositioning.close();this._windowPositioningConfirm.close();BattleManagerTBS.processActorPositioning(actor)};$.prototype.onActorPrePositioning=function(actor){this._windowPositioning.setFixedActor(actor);this._windowPositioning.refresh()};$.prototype.onPositioningExitUp=function(){this._windowPositioning.deactivate();this._windowPositioning.deselect();this._windowPositioningConfirm.activate()};
$.prototype.onPositioningConfirmOk=function(){BattleManagerTBS.positioningPhaseEnd()};$.prototype.onPositioningConfirmCancel=function(){this.onPositioningConfirmCursorDown()};$.prototype.onPositioningConfirmCursorDown=function(){this._windowPositioning.activate();this._windowPositioning.selectLast();this._windowPositioningConfirm.deactivate();this._windowPositioningConfirm.deselect()};$.prototype.onTBSBattleBeginning=function(){this.hideConfirmationWindow();this._windowPositioning.deactivate();this._windowPositioning.close();
this._windowPositioningConfirm.deactivate();this._windowPositioningConfirm.close()};$.prototype.showPositioningWindow=function(cell,battler){this._windowPositioning.open();this._windowPositioning.show();this._windowPositioningConfirm.open();this._windowPositioningConfirm.show();this._windowPositioning.refresh();this._windowPositioningConfirm.refresh();this._windowPositioning.activate()};$.prototype.showStatusWindow=function(entity,slide){if(entity.battler().rpgObject().TagsLetbs.hideStatusWindow)return;
if(entity.battler().isDead()&&entity.hasNoCorpse())return;const window=this._windowStatus;this._windowStatus._entity=entity;this._windowStatus.show();this._windowStatus.open();this._windowStatus.refresh();if(slide)this._windowStatus.slide()};$.prototype.showCommandWindow=function(){if(this._windowCommand._opening)return;if(this._windowCommand.isOpen())return;if(this._windowSkill._opening)return;if(this._windowSkill.isOpen())return;if(this._windowItem._opening)return;if(this._windowItem.isOpen())return;
const entity=BattleManagerTBS.activeEntity();const battler=BattleManagerTBS.activeBattler();this._windowCommand.setup(battler,entity)};$.prototype.showSkillWindow=function(){const entity=BattleManagerTBS.activeEntity();const cell=entity.getCell();const battler=BattleManagerTBS.activeBattler();this._windowSkill._entity=entity;this._windowSkill._stypeId=this._windowCommand.currentExt();this._windowSkill.setActor(battler);this._windowSkill.show();this._windowSkill.open();this._windowSkill.refresh();
this._windowSkill.activate();this.showHelpWindow()};$.prototype.showItemWindow=function(){const entity=BattleManagerTBS.activeEntity();const cell=entity.getCell();const battler=BattleManagerTBS.activeBattler();this._windowItem._entity=entity;this._windowItem.show();this._windowItem.open();this._windowItem.refresh();this._windowItem.activate();this.showHelpWindow()};$.prototype.showHelpWindow=function(){};$.prototype.showEndCommandWindow=function(){this._windowEndCommand.show();this._windowEndCommand.open();
this._windowEndCommand.activate()};$.prototype.hideHelpWindow=function(){this._helpWindow.close();this._helpWindow.hide();this._helpWindow.deactivate()};$.prototype.showConfirmationWindow=function(){this._windowConfirm.show();this._windowConfirm.open();this._windowConfirm.activate()};$.prototype.hideConfirmationWindow=function(){this._windowConfirm.close();this._windowConfirm.deactivate()};$.prototype.onConfirmationOK=function(){BattleManagerTBS.onConfirmationWindowOK()};$.prototype.onConfirmationCancel=
function(){BattleManagerTBS.onConfirmationWindowCancel()};$.prototype.onCommandInput=function(command){this._windowCommand.close();this._windowCommand.deactivate();BattleManagerTBS.onCommandInput(command)};$.prototype.onSkillInput=function(command){this._windowSkill.close();this._windowSkill.deactivate();this.hideHelpWindow();BattleManagerTBS.onSkillInput(command)};$.prototype.onItemInput=function(command){this._windowItem.close();this._windowItem.deactivate();this.hideHelpWindow();BattleManagerTBS.onItemInput(command)};
$.prototype.onEndCommandInput=function(command){this._windowEndCommand.close();this._windowEndCommand.deactivate();BattleManagerTBS.onEndCommandInput(command)};$.prototype.getDismissibleWindows=function(){return[this._windowConfirm,this._windowCommand,this._windowStatus,this._windowSkill,this._helpWindow]};$.prototype.stop=function(){Scene_Base.prototype.stop.call(this);if(this.needsSlowFadeOut())this.startFadeOut(this.slowFadeSpeed(),false);else this.startFadeOut(this.fadeSpeed(),false);if($gameActors.actor(1)._hp<
10)$gameActors.actor(1).setHp(10);let windows=this.getDismissibleWindows();for(let w of windows)if(w&&w.close)w.close()};$.prototype.terminate=function(){Scene_Base.prototype.terminate.call(this);$gameParty.onBattleEnd();$gameTroop.onBattleEnd();AudioManager.stopAll();Graphics.width=Graphics.boxWidth=window.TempResolution.width||816;Graphics.height=Graphics.boxHeight=window.TempResolution.height||624}})(Scene_Battle)})();var Lecode=Lecode||{};Lecode.S_TBS.TurnOrderVisual={};
(function(){const parameters=PluginManager.parameters("LeTBSTurnOrderA");Lecode.S_TBS.TurnOrderVisual.visible=Boolean(parameters["Visible"]==="true")||false;Lecode.S_TBS.TurnOrderVisual.pos=String(parameters["Pos"]||"top");Lecode.S_TBS.TurnOrderVisual.rightMargin=Number(parameters["Right Margin"])||20;Lecode.S_TBS.TurnOrderVisual.leftMargin=Number(parameters["Left Margin"])||20;Lecode.S_TBS.TurnOrderVisual.topMargin=Number(parameters["Top Margin"])||10;Lecode.S_TBS.TurnOrderVisual.bottomMargin=Number(parameters["Bottom Margin"])||
20;Lecode.S_TBS.TurnOrderVisual.size=Number(parameters["Size"])||40;Lecode.S_TBS.TurnOrderVisual.space=Number(parameters["Space"])||6;Lecode.S_TBS.TurnOrderVisual.numbersVisible=Boolean(parameters["Show Numbers ?"]==="true")||false;Lecode.S_TBS.TurnOrderVisual.numbersFontSize=Number(parameters["Numbers Font Size"])||18;Lecode.S_TBS.TurnOrderVisual.numbersColor=String(parameters["Numbers Color"]||"#FFFFFF");Lecode.S_TBS.TurnOrderVisual.nextTurnColor=String(parameters["Next Turn Color"]||"#31B404");
Lecode.S_TBS.TurnOrderVisual.numbersFlash=JSON.parse(parameters["Numbers Flash"]||"[255, 0, 0, 255]");TBSTurnOrderVisual.prototype.initialize=function(layer){this._mainLayer=layer;this._order=[];this._turnOrder=[];this._activeIndex=0;this.createVisualLayer();this.loadBorderBitmaps()};TBSTurnOrderVisual.prototype.Turn=function(entity){this.entity=entity;this.mainSprite=null;this.borderSprite=null;this.miniatureSprite=null};TBSTurnOrderVisual.prototype.createVisualLayer=function(){this._layer=new Sprite;
this._layer.visible=Lecode.S_TBS.TurnOrderVisual.visible;this._mainLayer.addChild(this._layer)};TBSTurnOrderVisual.prototype.loadBorderBitmaps=function(){const bitmap=ImageManager._imageCache.get("img/system/IconSet.png:0");const size=32;const turnSize=Lecode.S_TBS.TurnOrderVisual.size||40;let iconIndex=45;let sx=iconIndex%16*size;let sy=Math.floor(iconIndex/16)*size;this._borderOn=new Bitmap(turnSize,turnSize);this._borderAlly=new Bitmap(turnSize,turnSize);this._borderEnemy=new Bitmap(turnSize,turnSize);
this._borderAlly.blt(bitmap,sx,sy,size,size,0,0,turnSize,turnSize);iconIndex++;sx=iconIndex%16*size;sy=Math.floor(iconIndex/16)*size;this._borderEnemy.blt(bitmap,sx,sy,size,size,0,0,turnSize,turnSize);iconIndex++;sx=iconIndex%16*size;sy=Math.floor(iconIndex/16)*size;this._borderOn.blt(bitmap,sx,sy,size,size,0,0,turnSize,turnSize)};TBSTurnOrderVisual.prototype.set=function(order,index){this._turnOrder=order.map((v)=>new this.Turn(v));this._order=order;this._activeIndex=index||0;this.refresh()};TBSTurnOrderVisual.prototype.update=
function(){};TBSTurnOrderVisual.prototype.updateOnNextTurn=function(newOrder,index){if(this._order!==newOrder)this.set(newOrder);this._activeIndex=index;this.setPositions();this.updateOrderState();this.updateTurnNumbers()};TBSTurnOrderVisual.prototype.updateOnEntityDeath=function(newOrder,index){this.updateOrderState();this.updateTurnNumbers()};TBSTurnOrderVisual.prototype.updateOnEntityRevive=function(newOrder,index){this.updateOrderState();this.updateTurnNumbers()};TBSTurnOrderVisual.prototype.updateOnEntityHide=
function(newOrder,index){this.refresh()};TBSTurnOrderVisual.prototype.updateOnEntityShow=function(newOrder,index){this.refresh()};TBSTurnOrderVisual.prototype.refresh=function(){this.makeSprites();this.setPositions();this.updateOrderState();this.updateTurnNumbers()};TBSTurnOrderVisual.prototype.updateTurnNumbers=function(){if(!Lecode.S_TBS.TurnOrderVisual.numbersVisible)return;for(let i=0;i<this._order.length;i++){const entity=this._order[i];if(entity.battler().isDead()||entity.isTurnHidden())continue;
let index=i-this._activeIndex;if(index<0)index=this._order.length+index;entity._turnIndex.refresh(index);entity._turnIndex.show()}};TBSTurnOrderVisual.prototype.makeSprites=function(){const size=Lecode.S_TBS.TurnOrderVisual.size;while(this._layer.children.length>0)this._layer.removeChildAt(0);for(let turn of this._turnOrder)if(turn){const entity=turn.entity;if(entity.isTurnHidden())continue;if(turn.mainSprite){while(turn.mainSprite.children.length>0)turn.mainSprite.removeChildAt(0);turn.mainSprite=
null}const main=new Sprite(new Bitmap(size,size));const border=new Sprite;const miniature=new PIXI.Sprite(this.getSpriteBitmap(entity));main.addChild(miniature);main.addChild(border);turn.mainSprite=main;turn.borderSprite=border;turn.miniatureSprite=miniature;this._layer.addChild(turn.mainSprite)}};TBSTurnOrderVisual.prototype.getSpriteBitmap=function(entity){const name=String(entity._battler._name||"noname").toLowerCase();return $gameResources["HUD"].textures[`turn_${name}.png`]};TBSTurnOrderVisual.prototype.setPositions=
function(){let sx,sy,shiftX,shiftY;switch(Lecode.S_TBS.TurnOrderVisual.pos){case "right":sx=Graphics.boxWidth-Lecode.S_TBS.TurnOrderVisual.rightMargin-size;sy=Lecode.S_TBS.TurnOrderVisual.topMargin;shiftX=0;shiftY=Lecode.S_TBS.TurnOrderVisual.size+Lecode.S_TBS.TurnOrderVisual.space;break;case "left":sx=Lecode.S_TBS.TurnOrderVisual.rightMargin;sy=Lecode.S_TBS.TurnOrderVisual.topMargin;shiftX=0;shiftY=Lecode.S_TBS.TurnOrderVisual.size+Lecode.S_TBS.TurnOrderVisual.space;break;case "top":sx=Lecode.S_TBS.TurnOrderVisual.rightMargin;
sy=Lecode.S_TBS.TurnOrderVisual.topMargin;shiftX=Lecode.S_TBS.TurnOrderVisual.size+Lecode.S_TBS.TurnOrderVisual.space;shiftY=0;break;case "bottom":sx=Lecode.S_TBS.TurnOrderVisual.rightMargin;sy=Graphics.height-Lecode.S_TBS.TurnOrderVisual.bottomMargin;shiftX=Lecode.S_TBS.TurnOrderVisual.size+Lecode.S_TBS.TurnOrderVisual.space;shiftY=0;break}let counterI=0;for(let i=0;i<this._turnOrder.length;i++){let turn=this._turnOrder[i];if(turn.entity.isTurnHidden()){counterI++;continue}turn.mainSprite.x=sx+shiftX*
(i-counterI);turn.mainSprite.y=sy+shiftY*(i-counterI)}};TBSTurnOrderVisual.prototype.updateActivePosition=function(sprite){const pos=Lecode.S_TBS.TurnOrderVisual.pos;const size=Lecode.S_TBS.TurnOrderVisual.size;switch(pos){case "right":sprite.x-=size/2;break;case "left":sprite.x+=size/2;break;case "top":sprite.y+=size/2;break;case "bottom":sprite.y-=size/2;break}};TBSTurnOrderVisual.prototype.updateOrderState=function(){if(this._turnOrder.length===0)return;for(let turn of this._turnOrder)if(turn){const entity=
turn.entity;if(entity.isTurnHidden())continue;turn.borderSprite._leU_loopFlash=false;turn.borderSprite.leU_clearFlash();if(turn.entity._battler.isActor())turn.borderSprite.bitmap=this._borderAlly;else turn.borderSprite.bitmap=this._borderEnemy;if(turn.entity._dead){turn.borderSprite.setBlendColor([0,0,0,255]);turn.mainSprite.setBlendColor([0,0,0,255]);turn.mainSprite.opacity=100}else{turn.borderSprite.setBlendColor([255,255,255,255]);turn.mainSprite.setBlendColor([255,255,255,255]);turn.mainSprite.opacity=
255}setTimeout(function(turn){turn.borderSprite.leU_startFlash([255,255,255,255],20)}.bind(this,turn),400)}const index=this._activeIndex;const sprite=this._turnOrder[index].mainSprite;const border=this._turnOrder[index].borderSprite;border.bitmap=this._borderOn;this.updateActivePosition(sprite);border._leU_loopFlash=true;border._leU_loopFlashData={color:[255,255,255,255],duration:20}};TBSTurnOrderVisual.prototype.getEntityIndex=function(entity){for(let i=0;i<this._turnOrder.length;i++){const data=
this._turnOrder[i];if(entity===data.entity)return i}return-1};TBSTurnOrderVisual.prototype.hide=function(){for(let turn of this._turnOrder)if(turn){turn.mainSprite.visible=false;turn.borderSprite.visible=false;turn.miniatureSprite.visible=false}};TBSTurnOrderVisual.prototype.show=function(){for(let turn of this._turnOrder)if(turn){turn.mainSprite.visible=true;turn.borderSprite.visible=true;turn.miniatureSprite.visible=true}};Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_createComponents=TBSEntity.prototype.createComponents;
TBSEntity.prototype.createComponents=function(){Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_createComponents.call(this);this._turnIndex=new Window_TBSEntityTurn(this);BattleManagerTBS.getLayer("movableInfo").addChild(this._turnIndex)};Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_update=TBSEntity.prototype.update;TBSEntity.prototype.update=function(){Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_update.call(this);this._turnIndex.updatePosition()};Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_destroy=TBSEntity.prototype.destroy;
TBSEntity.prototype.destroy=function(){Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_destroy.call(this);this._turnIndex.hide()};Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_onDeath=TBSEntity.prototype.onDeath;TBSEntity.prototype.onDeath=function(){Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_onDeath.call(this);this._turnIndex.hide()};Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_onRevive=TBSEntity.prototype.onRevive;TBSEntity.prototype.onRevive=function(){Lecode.S_TBS.TurnOrderVisual.oldTBSEntity_onRevive.call(this);
this._turnIndex.show()};function Window_TBSEntityTurn(){this.initialize.apply(this,arguments)}Window_TBSEntityTurn.prototype=Object.create(Window_Base.prototype);Window_TBSEntityTurn.prototype.constructor=Window_TBSEntityTurn;Window_TBSEntityTurn.prototype.initialize=function(entity){this._entity=entity;const width=this.windowWidth();const height=this.windowHeight();Window_Base.prototype.initialize.call(this,0,0,width,height);this.opacity=0;this.updatePosition()};Window_TBSEntityTurn.prototype.windowWidth=
function(){return 100};Window_TBSEntityTurn.prototype.windowHeight=function(){return 100};Window_TBSEntityTurn.prototype.updatePosition=function(){this.x=this._entity._posX-this.windowWidth()/2+this._entity.width()/2;this.y=this._entity._posY};Window_TBSEntityTurn.prototype.refresh=function(index){this.refreshText(index);this._windowContentsSprite.leU_startFlash(Lecode.S_TBS.TurnOrderVisual.numbersFlash,20)};Window_TBSEntityTurn.prototype.refreshText=function(index){if(this.contents)this.contents.clear();
this.resetFontSettings();this.contents.fontSize=Lecode.S_TBS.TurnOrderVisual.numbersFontSize;this.contents.textColor=Lecode.S_TBS.TurnOrderVisual.numbersColor;if(index===1)this.contents.textColor=Lecode.S_TBS.TurnOrderVisual.nextTurnColor;this.leU_drawText(index+1,4,0)};ImageManager.loadLeTBSTurnOrder=function(filename,hue){return this.loadBitmap("img/leTBS/TurnOrder/",filename,hue,true)};window.Window_TBSEntityTurn=Window_TBSEntityTurn})();Lecode.S_TBS.Config={};Lecode.S_TBS.Config.Colors={ability_proc:"#ff19aa"};
Lecode.S_TBS.Config.Tile_Effects={};Lecode.S_TBS.Config.Marks={};Lecode.S_TBS.Config.Aura={"intimidating_aura":{size:"circle(1)",affect_caster:false,target_type:"enemy",states:[21],trigger_anim:73},"burning":{size:"circle(2)",affect_caster:false,target_type:"all",states:[19],action:{skill:1}}};
Lecode.S_TBS.Config.Projectiles={"gun_bullet":{filename:"Bullet",anim:[6,192,192],adapt_angle:true,speed:10,trajectory:"normal_jump(150)"},"bow_arrow":{filename:"Arrow",adapt_angle:true,speed:8,trajectory:"curved_jump(150)"},"ghost_arrow":{anim:[172,36,16],adapt_angle:"to_control_points",speed:12,trajectory:"zigzag(40)"},"fire_ball":{anim:[147,45,38],adapt_angle:true,speed:9,trajectory:"line(0)"},"fire_arrow":{anim:[179,36,16],adapt_angle:true,speed:9,trajectory:"line(0)"},"phantom_slash":{anim:[131,
56,50],adapt_angle:true,speed:9,trajectory:"line(0)"},"great_wind":{anim:[228,56,50],adapt_angle:true,speed:14,trajectory:"line(0)"},"dagger":{filename:"Dagger",adapt_angle:true,speed:12,trajectory:"line(0)"}};
Lecode.S_TBS.Config.Trajectories={"line":{points:[[0,0],[1,0]]},"curved_jump":{points:["parabola(0,0,1,0)"]},"normal_jump":{points:[[0,0],[.5,1],[1,0]]},"sneaky":{points:[[0,0],[1,1],[1.1,0],[1,0]]},"zigzag":{points:["linear(0,0,0.25,1)","linear(0.25,1,0.75,-1)","linear(0.75,-1,1,0)"]},"twirling":{points:[[0,0],[.25,.5],[.5,0],[.75,-.5],[1,0]]},"bounce":{points:["parabola(0,0,0.5,0)","parabola(0.5,0,1,0)"]}};
Lecode.S_TBS.Config.Summons={"cat":{turn_order:"after_caster",type:"user_playable",kind:"actor",id:4,tied_to_caster:false,stats:{default:"50%",mhp:"35%",mat:"35%"}},"pixie":{turn_order:"after_caster",kind:"actor",id:5,tied_to_caster:true,stats:{default:"90%",mhp:"60%",mmp:"+10%"}}};
Lecode.S_TBS.Config.Custom_Scopes={"fire_storm":{data:"[cx,cy-2],[cx-1,cy-1],[cx+1,cy-1],[cx-2,cy],[cx+2,cy],[cx-1,cy+1],[cx+1,cy+1],[cx,cy+2]"},"rush":{data:"[cx+3,cy],[cx-3,cy],[cx,cy+3],[cx,cy-3]"},"volcano_ground":{data:"[cx-2,cy-2],[cx,cy-2],[cx+2,cy-2],[cx-1,cy-1],[cx+1,cy-1],[cx-2,cy],[cx+2,cy],[cx-1,cy+1],[cx+1,cy+1],[cx-2,cy+2],[cx,cy+2],[cx+2,cy+2]"},"fire_ball":{data:"[cx,cy+1],[cx-1,cy+2],[cx,cy+2],[cx+1,cy+2],[cx-2,cy+3],[cx-1,cy+3],[cx,cy+3],[cx+1,cy+3],[cx+2,cy+3],[cx-3,cy+4],[cx-2,cy+4],[cx-1,cy+4],[cx,cy+4],[cx+1,cy+4],[cx+2,cy+4],[cx+3,cy+4],[cx-4,cy+5],[cx-3,cy+5],[cx-2,cy+5],[cx-1,cy+5],[cx,cy+5],[cx+1,cy+5],[cx+2,cy+5],[cx+3,cy+5],[cx+4,cy+5],[cx-5,cy+6],[cx-4,cy+6],[cx-3,cy+6],[cx-2,cy+6],[cx-1,cy+6],[cx,cy+6],[cx+1,cy+6],[cx+2,cy+6],[cx+3,cy+6],[cx+4,cy+6],[cx+5,cy+6]"},
"fire_arrows":{data_right:"[cx+2,cy-2],[cx+1,cy-1],[cx+2,cy-1],[cx,cy],[cx+1,cy],[cx+2,cy],[cx+1,cy+1],[cx+2,cy+1],[cx+2,cy+2]",data_left:"[cx-2,cy-2],[cx-2,cy-1],[cx-1,cy-1],[cx-2,cy],[cx-1,cy],[cx,cy],[cx-2,cy+1],[cx-1,cy+1],[cx-2,cy+2]",data_up:"[cx-2,cy-2],[cx-1,cy-2],[cx,cy-2],[cx+1,cy-2],[cx+2,cy-2],[cx-1,cy-1],[cx,cy-1],[cx+1,cy-1],[cx,cy]",data_down:"[cx,cy],[cx-1,cy+1],[cx,cy+1],[cx+1,cy+1],[cx-2,cy+2],[cx-1,cy+2],[cx,cy+2],[cx+1,cy+2],[cx+2,cy+2]"},"ice_prison":{data:"[cx-1,cy-1],[cx,cy-1],[cx+1,cy-1],[cx-1,cy],[cx+1,cy],[cx-1,cy+1],[cx,cy+1],[cx+1,cy+1]"}};
Lecode.S_TBS.Config.Weapon_Anims={"swing":[{y:-12,angle:0},{y:-12,angle:45,duration:.15},{y:-14,angle:90,duration:.15}]};
Lecode.S_TBS.Config.Sequences={"skNameAoHoa":["play_pose: user, atk, cast","anim: user, 70, obj_anim, true"],"atk":["play_pose: user, atk_na, atk","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim","wait: 60"],"battle_start":[],"turn_start":["play_pose: user, turn_start"],"victory":["play_pose: user, victory, victory"],"dead":["anim: user, collapse_anim","play_pose: user, dead, dead","wait: 20","validate_death: user"],"dead_no_loop":["anim: user, collapse_anim","play_pose: user, dead","set_frame: user, dead, last",
"wait: 40","validate_death: user"],"dead_vanish":["play_pose: user, dead, true","anim: user, collapse_anim, true","set_frame: user, dead, last","wait: 20","sprite_prop: user, opacity, 0","validate_death: user"],"revived":["sprite_prop: user, opacity, 255","play_pose: user, idle, idle"],"damaged":["sprite_shake: user, 6, 30","play_pose: user, hit, wait","set_frame: user, hit, last","wait: 5","play_pose: user, idle"],"evaded":[],"healed":[],"buffed":[],"weakened":[],"cast(loop)":["play_pose: user, cast, cast",
"wait: 4","map_anim: user_cell, 248, 0, true"],"pre-skill":["call: cast(loop)","wait: 4","play_pose: user, atk, wait","set_frame: user, atk, last","wait: 2"],"post-skill":["wait: 10","play_pose: user, idle","wait: 10"],"skill":["call: pre-skill","effects: {aoe}_battlers, current_obj, obj_anim, 0, true","call: post-skill"],"map_skill":["call: pre-skill","map_effects: {aoe}, current_obj, obj_anim, 0, true","call: post-skill"],"item":["play_pose: user, item","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim",
"wait: 60"],"skill_neutral":["play_pose: user, cast","wait: 15","effects: {aoe}_battlers, current_obj, obj_anim, 0, true","play_pose: user, idle","wait: 20"],"map_skill_neutral":["play_pose: user, cast","wait: 15","map_effects: {aoe}, current_obj, obj_anim, 0, true","play_pose: user, idle","wait: 20"],"projectile":["play_pose: user, atk","wait: 10","projectile: $1, user_cell, {aoe}_battlers, current_obj, obj_anim","wait: 60"],"counter":["anim: user, 177, 0, true","wait: 15"],"summon":["call: pre-skill",
"map_anim: {aoe}, obj_anim","wait: 15","summon: $1, {aoe}","call: post-skill"],"atk_push":["play_pose: user, atk","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim","if: isHit('{aoe}_battlers')","set_speed: {aoe}_battlers, +6","push: {aoe}_battlers, user_cell, $1","set_speed: {aoe}_battlers, reset","end_if","wait: 60"],"atk_pull":["play_pose: user, atk","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim","set_speed: {aoe}_battlers, +6","pull: {aoe}_battlers, user_cell, $1","set_speed: {aoe}_battlers, reset",
"wait: 60"],"skill_push":["call: pre-skill","effects: {aoe}_battlers, current_obj, obj_anim, 0, true","set_speed: {aoe}_battlers, +6","push: {aoe}_battlers, user_cell, $1","set_speed: {aoe}_battlers, reset","call: post-skill"],"skill_pull":["call: pre-skill","effects: {aoe}_battlers, current_obj, obj_anim, 0, true","set_speed: {aoe}_battlers, +6","pull: {aoe}_battlers, user_cell, $1","set_speed: {aoe}_battlers, reset","call: post-skill"],"flash_jump":["set_frame: user, atk, 0","wait: 15","jump_to_cell: user, cursor_cell",
"play_pose: user, atk","map_effects: {aoe}, current_obj, obj_anim"],"rush":["wait: 10","set_frame: user, atk, 0","wait: 30","play_pose: user, atk","directional_anim: user, user, 126, 127, 128, 129","look_at: user, cursor_cell","set_speed: user, +6","move_straight: user, 2","set_speed: user, reset","set_frame: user, atk, last","wait: 12","effects: {aoe}_battlers, current_obj, obj_anim","wait: 20","play_pose: user, idle","wait: 10"],"phantom_slash":["play_pose: user, atk","wait: 10","projectile: phantom_slash, user_cell, cursor_cell",
"effects: {aoe}_battlers, current_obj, 132","anim: user, 133","wait: 20","reach_target: user, {aoe}_battlers, back, true","anim: user, 134","look_at: user, cursor_cell","play_pose: user, atk","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim","wait: 60"],"spark":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 20","effects: {aoe}_battlers, current_obj, obj_anim","call: post-skill"],"lightning_storm":["call: pre-skill","call: lightning_storm_effects, 3","call: post-skill"],"lightning_storm_effects":["effects: 1_battlers_in_{aoe}, current_obj, obj_anim",
"wait: 60"],"fire_storm":["call: pre-skill","call: fire_storm_effects, 6","call: post-skill"],"fire_storm_effects":["map_effects: 1_cells_in_{aoe}, current_obj, obj_anim","wait: 60"],"fire_support":["filter_cells: {circle(1)}_allies, cursor_battler, new_cells","ask_call: fire_support_attack, saved(new_cells)","call: skill"],"fire_support_attack":["look_at: user, cursor_cell","call: cast(loop)","wait: 4","call: atk"],"volcano_ground":["call: pre-skill","map_anim: 1, 24, 60","wait: 20","mark: volcano_cell, {aoe}",
"wait: 60","call: post-skill"],"walking_fire":["call: pre-skill","call_for_every_cell: walking_fire_dmg, {aoe}, close->far","call: post-skill"],"walking_fire_dmg":["map_anim: saved(every_cell), obj_anim","map_effects: saved(every_cell), current_obj, obj_anim","wait: 30"],"ice_wall":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 30","summon: ice_block, {aoe}","call: post-skill"],"ice_prison":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 30","summon: ice_block, {aoe}","call: post-skill"],
"witch_escape":["call: pre-skill","anim: user, 22","wait: 40","save_cells: witch_escape_old, user_cell","move_to_cell: user, cursor_cell, true","anim: user, 19","wait: 60","set_cursor: saved(witch_escape_old)","look_at: user, cursor_cell","use_skill: user, 19"],"mega_spark":["call: pre-skill","call_for_every_mscope: mega_spark_hit","call: post-skill"],"mega_spark_hit":["map_anim: saved(mscope_center), obj_anim","wait: 20","effects: saved(mscope_aoe), current_obj, obj_anim"],"fire_queen":["screen_tone: -88, -88, -88, 0, 30",
"wait: 30","call: pre-skill","effects: 1_enemies_in_{circle(6)}, current_obj, obj_anim","wait: 25","call: post-skill","screen_tone: 0, 0, 0, 0, 30"],"heal":["call: pre-skill","anim: {aoe}_battlers, obj_anim","wait: 20","effects: {aoe}_battlers, current_obj, obj_anim","call: post-skill"],"teleportation":["call: pre-skill","anim: user, 54","wait: 40","move_to_cell: user, cursor_cell, true","anim: user, 55","wait: 60","call: post-skill"],"salvation":["call: pre-skill","anim: user, obj_anim","filter_entities: {aoe}_allies, user, new_targets",
"pull: saved(new_targets), user_cell, 2, false","wait: 20","effects: saved(new_targets), current_obj, obj_anim","wait: 60","call: post-skill"],"teleportation_sup":["script: user.setDir(user._lastDir);","call: pre-skill","save_cells: battler_toward_user, battler_pos","anim: last_targets, 169","wait: 40","move_to_cell: saved(battler_pos), cursor_cell, true","anim: last_targets, 170","wait: 60","call: post-skill"],"explosive_mark":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 20","mark: explosive_mark, cursor_cell",
"wait: 60","call: post-skill"],"ghost_arrow":["call: pre-skill","projectile: ghost_arrow, user_cell, cursor_cell","effects: {aoe}_battlers, current_obj, obj_anim","wait: 60","call: post-skill"],"magic_trap":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 20","mark: magic_trap, cursor_cell","wait: 60","call: post-skill"],"fire_arrows":["call: pre-skill","call_for_every_entity: fire_arrow_dmg, {aoe}_battlers","call: post-skill"],"fire_arrow_dmg":["projectile: fire_arrow, user_cell, saved(every_entity)",
"effects: saved(every_entity), current_obj, obj_anim"],"wind_spirit":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 15","summon: wind_spirit, cursor_cell","call: post-skill"],"great_wind":["call: pre-skill","projectile: great_wind, user_cell, cursor_cell","effects: {aoe}_battlers, current_obj, obj_anim","set_speed: {aoe}_battlers, +12","push: {aoe}_battlers, user_cell, 3","set_speed: {aoe}_battlers, reset","call: post-skill"],"transposition":["call: pre-skill","anim: user, obj_anim",
"anim: {aoe}_battlers, obj_anim","wait: 40","switch_cells: user, {aoe}_battlers","call: post-skill"],"summon_pixie":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 15","summon: pixie, cursor_cell","call: post-skill"],"shamanism":["call: pre-skill","anim: {aoe}_dead_battlers, obj_anim","wait: 20","call_for_every_entity: shamanism_effects, {aoe}_dead_battlers","call: post-skill"],"shamanism_effects":["anim: allies, 169","effects: allies, current_obj, obj_anim","wait: 60"],"ally_teleport":["wait: 60",
"save_entities: ally_teleport, cursor_battler","request_selection: skill(91)","call: pre-skill","anim: saved(ally_teleport), 169","wait: 40","move_to_cell: saved(ally_teleport), cursor_cell, true","anim: saved(ally_teleport), 170","wait: 60","call: post-skill"],"mana_ball":["call: pre-skill","bounce: mana_ball_effects, cursor_battler, 2, circle(3), enemy","call: post-skill"],"mana_ball_effects":["projectile: mana_ball, saved(bounce_entity1), saved(bounce_entity2)","effects: saved(bounce_entity2), current_obj, obj_anim"],
"fire_ball":["call: pre-skill","projectile: fire_ball, user_cell, cursor_cell","effects: {aoe}_battlers, current_obj, obj_anim","wait: 60","call: post-skill"],"crystal_mark":["map_anim: cursor_cell, obj_anim","wait: 20","mark: crystal_mark, cursor_cell"],"anti_crystal_mark":["map_anim: cursor_cell, obj_anim","wait: 20","mark: anti_crystal_mark, cursor_cell"],"mago_mark":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 20","mark: mago_mark, cursor_cell","wait: 60","call: post-skill"],"rabbit_jump":["set_frame: user, atk, 0",
"wait: 8","map_anim: user_cell, obj_anim","jump_to_cell: user, cursor_cell","play_pose: user, atk","map_effects: user_cell, current_obj, obj_anim"],"summon_pyra":["call: pre-skill","map_anim: cursor_cell, obj_anim","wait: 15","summon: pyra, cursor_cell","call: post-skill"],"rush_sup":["wait: 20","directional_anim: user, user, 131, 132, 133, 134","look_at: user, cursor_cell","move_straight: user, 2","wait: 10","effects: {aoe}_battlers, current_obj, obj_anim","look_away: {aoe}_battlers, user_cell",
"wait: 5","delegate_call: rush_sup_action, {aoe}_battlers"],"rush_sup_action":["directional_anim: user, user, 131, 132, 133, 134","move_straight: user, 2","wait: 10","set_battler_targets: battler_toward_user","effects: last_targets, current_obj, obj_anim","look_away: last_targets, user_cell","wait: 5","end_delegated_call:","delegate_call: rush_sup_action, last_targets"]};
Lecode.S_TBS.Config.AI={BehaviorsOrder:["healing","escape","summon","support","offense"],"default":["process_behaviors","call_behavior: end_of_turn"],"end_of_turn":["wait: 5","pass: look_closest_enemy"],"action_requested":["process_requested_action","force_end"],"use_healing":["search_target: self, 100%, healing","if: !isTargetValid()","search_target: lowest_ally, 100%, healing","if: !isTargetValid()","search_target: closest_ally, 100%, healing","endif","endif","if: isTargetValid()","set_action: healing, average",
"move_for_action: null","use: defined_action","endif","call_behavior: after_healing"],"after_healing":["if: user.hpRate() <= 0.3","call_behavior: smart_move_away_enemies","else","call_behavior: after_offense","endif"],"use_support":["search_target: lowest_ally, 100%, support","if: !isTargetValid()","search_target: self, 100%, support","if: !isTargetValid()","search_target: closest_ally, 100%, support","endif","endif","if: isTargetValid()","set_action: support, average","move_for_action: null","use: defined_action",
"call_behavior: after_support","else","move: toward_enemies, 20%","endif"],"after_support":["if: canUseEscape()","call_behavior: escape","else","if: pattern('ranged_fighter')","call_behavior: smart_move_away_enemies","else","move: toward_enemies, 100%","endif","endif"],"use_summon":["if: distanceToEnemies() > entity.getMovePoints() + 1","move: toward_enemies, 75%","endif","set_action: summon","move_for_action: null","use: defined_action","call_behavior: after_summon"],"after_summon":["call_behavior: after_support"],
"use_offense":["search_target: closest_enemy, 100%, offense","if: isTargetValid()","set_action: damage, average","move_for_action: null","use: defined_action","call_behavior: after_offense","else","move: toward_enemies, 100%","endif"],"cant_use_offense":["if: failureCode() === 'out_of_range'","call_behavior: out_of_range","else","move: away_enemies, 100%","endif"],"after_offense":["if: canUseEscape()","call_behavior: escape","else","if: pattern('ranged_fighter')","call_behavior: smart_move_away_enemies",
"else","if: !isInMeleeWith('defined_target')","move: toward_enemies, 100%","endif","endif","endif"],"out_of_range":["if: canUseRush()","set_action: move, toward","move_for_action: null","use: defined_action","endif","if: chance(40)","move: toward_enemies, 80%","else","move: toward_enemies, 100%","endif"],"escape":["set_action: move, away","move_for_action: null","use: defined_action","wait: 10","call_behavior: smart_move_away_enemies"],"smart_move_away_enemies":["if: distanceToEnemies() >= 3","move: toward_enemies, 75%",
"else","move: away_enemies, 100%","endif"]};
