/*
 * @author Quxios  | Version 1.7.1
 * @site https://quxios.github.io/
* ============================================================================
 * ## Links
 * ============================================================================
 * Formated Help:
 *  https://quxios.github.io/#/plugins/QPlus
 * RPGMakerWebs:
 *  http://forums.rpgmakerweb.com/index.php?threads/qplugins.73023/
 * Terms of use:
 *  https://github.com/quxios/QMV-Master-Demo/blob/master/readme.md
 * Like my plugins? Support me on Patreon!
 *  https://www.patreon.com/quxios
*/
function QPlus(){throw new Error("This is a static class");}QPlus._regex={isBoolean:/^(true|false)$/i,isString:/^"(.*?)"$/,isNumber:/^-?\d+$/,isFloat:/^-?\d+\.?\d*$/,isPoint:/^\((-?\d+\.?\d*),\s*(-?\d+\.?\d*)\)$/,isArray:/^\[(.*?)\]$/,isObj:/^\{(.*?)\}$/};QPlus.makeArgs=function(string){if(string.constructor===Array)string=string.join(" ");let args=[];let regex=/("?|'?)(.+?)\1(?:\s|$)/g;while(true){let match=regex.exec(string);if(match)args.push(match[2]);else break}return this.formatArgs(args)};
QPlus.formatArgs=(args)=>{let id;for(let i=0;i<args.length;i++){let arg=String(args[i]).trim();let match=/\{(.*?)\}/.exec(arg);if(match){let val=match[1];let cmd=match[1][0].toLowerCase();switch(cmd){case "v":{id=Number(match[1].slice(1));val=$gameVariables.value(id);break}case "s":{id=Number(match[1].slice(1));val=$gameSwitches.value(id);break}}args[i]=args[i].replace(/\{(.*?)\}/,val)}}return args};
QPlus.getArg=(args,regex)=>{let arg=null;for(let ar of args)if(ar){let match=regex.exec(ar);if(match){if(match.length===1)arg=true;else arg=match[match.length-1];break}}return arg};
QPlus.getMeta=(string)=>{let match;let meta={};let inlineRegex=/<([^<>:\/]+)(?::?)([^>]*)>/g;let blockRegex=/<([^<>:\/]+)>([\s\S]*?)<\/\1>/g;for(;;){match=inlineRegex.exec(string);if(match)if(match[2]==="")meta[match[1]]=true;else meta[match[1]]=match[2];else break}for(;;){match=blockRegex.exec(string);if(match)meta[match[1]]=match[2];else break}return meta};
QPlus.getCharacter=(string)=>{string=String(string).toLowerCase();if(/^[0-9]+$/.test(string)){const id=Number(string);return id===0?$gamePlayer:$gameMap.event(id)}else if(/^(player|p)$/.test(string))return $gamePlayer;else{const isEvent=/^(event|e)([0-9]+)$/.exec(string);if(isEvent){const eventId=Number(isEvent[2]);return eventId>0?$gameMap.event(eventId):null}return null}};
QPlus.charaIdToId=(string)=>{string=String(string).toLowerCase();if(/^[0-9]+$/.test(string))return Number(string);else if(/^(player|p)$/.test(string))return 0;else{var isEvent=/^(event|e)([0-9]+)$/.exec(string);if(isEvent)return Number(isEvent[2]);return null}};QPlus.compareCharaId=function(a,b){if(a===b)return true;return this.charaIdToId(a)===this.charaIdToId(b)};QPlus._waitListeners=[];
QPlus.wait=function(duration,callback){var waiter={duration:duration||0,callback:callback,then:function(callback){this.callback=callback;return this}};this._waitListeners.push(waiter);return waiter};QPlus.removeWaitListener=function(waiter){const i=this._waitListeners.indexOf(waiter);if(i===-1)return;this._waitListeners.splice(i,1)};QPlus.clearWaitListeners=function(){this._waitListeners=[]};
QPlus.mixin=(to,what)=>{Object.getOwnPropertyNames(what).forEach((prop)=>{if(prop!=="constructor")Object.defineProperty(to,prop,Object.getOwnPropertyDescriptor(what,prop))})};QPlus.mixinWait=function(into){this.mixin(into,{wait:this.wait,removeWaitListener:this.removeWaitListener,clearWaitListeners:this.clearWaitListeners,updateWaiters:this.updateWaiters});if(into.update){into.update_BEFOREWAIT=into.update;into.update=function(){this.update_BEFOREWAIT.apply(this,arguments);this.updateWaiters()}}};
QPlus.stringToObj=(string)=>{var lines=string.split("\n");var obj={};lines.forEach((value)=>{var match=/^(.*):(.*)/.exec(value);if(match){var key;var newKey=match[1].trim();if(obj.hasOwnProperty(key)){var i=1;while(obj.hasOwnProperty(newKey)){newKey=key+String(i);i++}}var arr=QPlus.stringToAry(match[2].trim());if(arr.length===1)arr=arr[0];obj[newKey]=arr||""}});return obj};
QPlus.stringToAry=function(string){var regex=/\s*(\(.*?\))|([^,]+)/g;var arr=[];while(true){var match=regex.exec(string);if(match)arr.push(match[0]);else break}return arr.map(this.stringToType)};
QPlus.stringToType=(string)=>{string=string.trim();var rx=QPlus._regex;if(rx.isString.test(string))string=string.slice(1,-1);if(rx.isBoolean.test(string))return string.toLowerCase()==="true";if(rx.isFloat.test(string))return Number(string);var isPoint=rx.isPoint.exec(string);if(isPoint)return new Point(Number(isPoint[1]),Number(isPoint[2]));if(rx.isArray.test(string))try{return JSON.parse(string).map(QPlus.stringToType)}catch(e){return string}if(rx.isObj.test(string))try{var obj=JSON.parse(string);
for(let key in obj)obj[key]=QPlus.stringToType(obj[key]);return obj}catch(e){return string}return string};QPlus.pointToIndex=(point,maxCols,maxRows)=>{if(point.x>=maxCols)return-1;if(maxRows&&point.y>=maxRows)return-1;return point.x+point.y*maxCols};QPlus.indexToPoint=(index,maxCols,maxRows)=>{if(index<0)return new Point(-1,-1);var x=index%maxCols;var y=Math.floor(index/maxCols);return new Point(x,y)};
QPlus.adjustRadian=(radian)=>{while(radian<0)radian+=Math.PI*2;while(radian>Math.PI*2)radian-=Math.PI*2;return radian};QPlus.update=function(){this.updateWaiters()};QPlus.updateWaiters=function(){var waiters=this._waitListeners;for(let i=waiters.length-1;i>=0;i--){if(!waiters[i]){waiters.splice(i,1);continue}if(waiters[i].duration<=0){if(typeof waiters[i].callback==="function")try{waiters[i].callback()}catch(e){console.error(e)}waiters.splice(i,1)}else waiters[i].duration--}};
(()=>{document.body.ondrop=(e)=>{e.preventDefault();return false};document.body.ondragover=(e)=>{e.preventDefault();return false};Math.randomIntBetween=(min,max)=>{min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min};Math.randomBetween=(min,max)=>Math.random()*(max-min)+min;const Alias_Graphics__makeErrorHtml=Graphics._makeErrorHtml;Graphics._makeErrorHtml=function(name,message){const msg=Alias_Graphics__makeErrorHtml.call(this,name,message);let extraMsg="";if(Utils.isNwjs()){var consoleKey=
"F8";if(Imported.QInput)consoleKey=QInput.remapped.console[0].toUpperCase();extraMsg=`<br /><span style="color: white; ">For more information, push ${consoleKey}</span>`}return msg+extraMsg};Input.stopPropagation=function(){var key=this._latestButton;this._currentState[key]=false;this._latestButton=null;for(let i=0;i<this._gamepadStates.length;i++){if(!this._gamepadStates[i])continue;for(let j=0;j<this._gamepadStates[i].length;j++){var button=Imported.QInput?this.gamepadKeys[j]:this.gamepadMapper[j];
if(button===key){this._gamepadStates[i][j]=false;break}}}if(Imported.QInput){this._ranPress=false;this._lastPressed=null;this._lastTriggered=null;this._lastGamepadTriggered=null}};TouchInput.stopPropagation=function(){this._screenPressed=false;this._triggered=false;this._cancelled=false;this._released=false};const Alias_Game_CharacterBase_initMembers=Game_CharacterBase.prototype.initMembers;Game_CharacterBase.prototype.initMembers=function(){Alias_Game_CharacterBase_initMembers.call(this);this._globalLocked=
0;this._comments="";this._waitListeners=[];QPlus.mixinWait(this)};Game_CharacterBase.prototype.charaId=()=>-1;Game_CharacterBase.prototype.notes=()=>"";Game_CharacterBase.prototype.canMove=function(){return this._globalLocked===0};Game_CharacterBase.prototype.directionToRadian=(dir=this._direction)=>{if(dir===2)return Math.PI/2;if(dir===4)return Math.PI;if(dir===6)return 0;if(dir===8)return Math.PI*3/2;if(dir===1)return Math.PI*3/4;if(dir===3)return Math.PI/4;if(dir===7)return Math.PI*5/4;if(dir===
9)return Math.PI*7/4;return 0};Game_CharacterBase.prototype.radianToDirection=(radian,useDiag)=>{radian=QPlus.adjustRadian(radian);if(useDiag){var deg=radian*180/Math.PI;if(deg>=22.5&&deg<=67.5)return 3;else if(deg>=112.5&&deg<=157.5)return 1;else if(deg>=202.5&&deg<=247.5)return 7;else if(deg>=292.5&&deg<=337.5)return 9}if(radian>=0&&radian<Math.PI/4)return 6;else if(radian>=Math.PI/4&&radian<3*Math.PI/4)return 2;else if(radian>=Math.PI*3/4&&radian<Math.PI*5/4)return 4;else if(radian>=Math.PI*5/
4&&radian<Math.PI*7/4)return 8;else if(radian>=Math.PI*7/4)return 6};Game_Player.prototype.charaId=()=>0;Game_Player.prototype.actor=()=>$gameParty.leader();Game_Player.prototype.notes=function(){return this.actor()?this.actor().actor().note:""};const Alias_Game_Event_initMembers=Game_Event.prototype.initMembers;Game_Event.prototype.initMembers=function(){Alias_Game_Event_initMembers.call(this);this._comments=null;this._prevDir=null};Game_Event.prototype.charaId=function(){return this.eventId()};
Game_Event.prototype.notes=function(withComments){let notes=this.event()?this.event().note:"";return notes+(withComments?this.comments():"")};Game_Event.prototype.comments=function(withNotes){var notes="";if(this.event())notes=this.event().note;return this._comments+(withNotes?notes:"")};Game_Event.prototype.setupComments=function(){this._comments="";if(this.page()&&this.list())this._comments=this.list().filter((list)=>list.code===108||list.code===408).map((list)=>list.parameters).join("\n")};const Alias_Game_Event_setupPage=
Game_Event.prototype.setupPage;Game_Event.prototype.setupPage=function(){var firstTime=this._prevDir===null;this._prevDir=this.direction();Alias_Game_Event_setupPage.call(this);var retainDir=/<retainDir>/i.test(this.comments(true));if(!firstTime&&retainDir)this.setDirection(this._prevDir)};const Alias_Game_Event_clearPageSettings=Game_Event.prototype.clearPageSettings;Game_Event.prototype.clearPageSettings=function(){Alias_Game_Event_clearPageSettings.call(this);this._comments=""};const Alias_Game_Event_setupPageSettings=
Game_Event.prototype.setupPageSettings;Game_Event.prototype.setupPageSettings=function(){Alias_Game_Event_setupPageSettings.call(this);this.setupComments()};const Alias_Game_Event_updateSelfMovement=Game_Event.prototype.updateSelfMovement;Game_Event.prototype.updateSelfMovement=function(){if(!this.canMove())return;Alias_Game_Event_updateSelfMovement.call(this)}})();function QEventSave(){throw new Error("This is a static class");}
(()=>{QEventSave.getInfo=(event)=>{var info={_x:event._x,_y:event._y,_direction:event.direction(),_moveRoute:event._moveRoute,_moveRouteIndex:event._moveRouteIndex};if(Imported.QMovement){info._radian=event._radian;info._forwardRadian=event._forwardRadian;info._currentRad=event._currentRad;info._targetRad=event._targetRad;info._pivotX=event._pivotX;info._pivotY=event._pivotY;info._radiusL=event._radiusL;info._angularSpeed=event._angularSpeed}return info};QEventSave.setInfo=(event,info)=>{Object.assign(event,
info);event.setPosition(info._x,info._y);event.setDirection(event._direction);if(Imported.QMovement)event.setRadian(info._radian)};const Alias_Game_Interpreter_pluginCommand=Game_Interpreter.prototype.pluginCommand;Game_Interpreter.prototype.pluginCommand=function(command,args){if(command.toLowerCase()==="qeventsave")return this.qEventSaveCommand(QPlus.makeArgs(args));Alias_Game_Interpreter_pluginCommand.call(this,command,args)};Game_Interpreter.prototype.qEventSaveCommand=(args)=>{var cmd=args[0].toLowerCase();
var chara=QPlus.getCharacter(args[1]);if(chara.charaId()<=0)return;if(cmd==="save"){chara._saveable=true;$gameSystem.saveEvent(chara)}else if(cmd==="unsave"){chara._saveable=false;$gameSystem.unsaveEvent(chara)}};const Alias_Game_System_initialize=Game_System.prototype.initialize;Game_System.prototype.initialize=function(){Alias_Game_System_initialize.call(this);this._savedEvents={}};Game_System.prototype.saveEvent=function(event){var mapId=event._mapId;var eventId=event._eventId;if(!this._savedEvents[mapId])this._savedEvents[mapId]=
{};this._savedEvents[mapId][eventId]=QEventSave.getInfo(event)};Game_System.prototype.unsaveEvent=function(event){var mapId=event._mapId;var eventId=event._eventId;if(!this._savedEvents[mapId])this._savedEvents[mapId]={};delete this._savedEvents[mapId][eventId]};Game_System.prototype.loadEvent=function(event){var mapId=event._mapId;var eventId=event._eventId;if(!this._savedEvents[mapId])this._savedEvents[mapId]={};if(!this._savedEvents[mapId][eventId])return;QEventSave.setInfo(event,this._savedEvents[mapId][eventId])};
Game_Map.prototype.forEachSaveEvent=function(callback){if(!$dataMap)return;var saveableEvents=$gameSystem._savedEvents[this._mapId];if(!saveableEvents)return;for(var eventId in saveableEvents){var event=this._events[eventId];if(event)callback(event)}};const Alias_Game_Event_initialize=Game_Event.prototype.initialize;Game_Event.prototype.initialize=function(mapId,eventId){Alias_Game_Event_initialize.call(this,mapId,eventId);this.initSaveable()};Game_Event.prototype.initSaveable=function(){$gameSystem.loadEvent(this);
this._saveable=/<save>/i.test(this.notes())||$dataMap.meta.saveEvents;if(this._saveable)$gameSystem.saveEvent(this)};Game_Event.prototype.saveable=function(){return this._saveable};const Alias_Scene_Map_create=Scene_Map.prototype.create;Scene_Map.prototype.create=function(){if($gamePlayer.isTransferring())$gameMap.forEachSaveEvent($gameSystem.saveEvent.bind($gameSystem));Alias_Scene_Map_create.call(this)}})();function QMovement(){throw new Error("This is a static class");}
(()=>{let _PARAMS=PluginManager.parameters("QMovement");_PARAMS["Presets"]=[{"ID":"playerDefault","Type":"box","Width":36,"Height":24,"Offset X":6,"Offset Y":24},{"ID":"playerCollider","Type":"box","Width":28,"Height":20,"Offset X":8,"Offset Y":30},{"ID":"playerInteraction","Type":"box","Width":45,"Height":45,"Offset X":0,"Offset Y":15}];QMovement.grid=1;QMovement.tileSize=48;QMovement.offGrid=true;QMovement.smartMove=2;QMovement.midPass=true;QMovement.moveOnClick=false;QMovement.diagonal=false;QMovement.collision=
"#000";QMovement.water1="#00FF00";QMovement.water2="#0000FF";QMovement.water1Tag=1;QMovement.water2Tag=2;QMovement.playerCollider=["box",36,24,6,24];QMovement.eventCollider=["box",36,24,6,24];QMovement.presets={};const convertColliderStruct=(struct)=>[struct.Type,struct.Width,struct.Height,struct["Offset X"],struct["Offset Y"]];for(const p of _PARAMS["Presets"])QMovement.presets[p.ID]=convertColliderStruct(p);QMovement.showColliders=false;QMovement.tileBoxes={1537:[48,6,0,42],1538:[6,48],1539:[[48,
6,0,42],[6,48]],1540:[6,48,42],1541:[[48,6,0,42],[6,48,42]],1542:[[6,48],[6,48,42]],1543:[[48,6,0,42],[6,48],[6,48,42]],1544:[48,6],1545:[[48,6],[48,6,0,42]],1546:[[48,6],[6,48]],1547:[[48,6],[48,6,0,42],[6,48]],1548:[[48,6],[6,48,42]],1549:[[48,6],[48,6,0,42],[6,48,42]],1550:[[48,6],[6,48],[6,48,42]],1551:[48,48],2063:[48,48],2575:[48,48],3586:[6,48],3588:[6,48,42],3590:[[6,48],[6,48,42]],3592:[48,6],3594:[[48,6],[6,48]],3596:[[48,6],[6,48,42]],3598:[[48,6],[6,48],[6,48,42]],3599:[48,48],3727:[48,
48]};var rs=QMovement.tileSize/48;for(var key in QMovement.tileBoxes)if(QMovement.tileBoxes.hasOwnProperty(key))for(var i=0;i<QMovement.tileBoxes[key].length;i++)if(QMovement.tileBoxes[key][i].constructor===Array)for(var j=0;j<QMovement.tileBoxes[key][i].length;j++)QMovement.tileBoxes[key][i][j]*=rs;else QMovement.tileBoxes[key][i]*=rs;QMovement.regionColliders={};QMovement.colliderMap={}})();function Polygon_Collider(){this.initialize.apply(this,arguments)}
(()=>{Polygon_Collider._counter=0;Polygon_Collider.prototype.initialize=function(points){var args=[];for(var i=1;i<arguments.length;i++)args.push(arguments[i]);this.initMembers.apply(this,args);this.makeVertices(points)};Polygon_Collider.prototype.initMembers=function(x=0,y=0){this._position=new Point(x,y);this._scale=new Point(1,1);this._offset=new Point(0,0);this._pivot=new Point(0,0);this._radian=0;this._note="";this.meta={};this.id=Polygon_Collider._counter++};Object.defineProperty(Polygon_Collider.prototype,
"note",{get(){return this._note},set(note){this._note=note;this.meta=QPlus.getMeta(note)}});Object.defineProperty(Polygon_Collider.prototype,"x",{get(){return this._position.x},set(x){this._position.x=x}});Object.defineProperty(Polygon_Collider.prototype,"y",{get(){return this._position.y},set(y){this._position.y=y}});Object.defineProperty(Polygon_Collider.prototype,"ox",{get(){return this._offset.x+this._pivot.x},set(value){this._offset.x=value;this.refreshVertices()}});Object.defineProperty(Polygon_Collider.prototype,
"oy",{get(){return this._offset.y+this._pivot.y},set(value){this._offset.y=value-this._pivot.y;this.refreshVertices()}});Polygon_Collider.prototype.isPolygon=()=>true;Polygon_Collider.prototype.isBox=()=>true;Polygon_Collider.prototype.isCircle=()=>false;Polygon_Collider.prototype.makeVertices=function(points){this._vertices=[];this._baseVertices=[];this._edges=[];this._vectors=[];this._xMin=null;this._xMax=null;this._yMin=null;this._yMax=null;for(var i=0;i<points.length;i++){var x=points[i].x-this._pivot.x;
var y=points[i].y-this._pivot.y;var x2=x+this.x+this.ox;var y2=y+this.y+this.oy;this._vertices.push(new Point(x2,y2));this._baseVertices.push(new Point(x,y));if(i!==0){var prev=this._vertices[i-1];this._edges.push({x1:prev.x,x2:x2,y1:prev.y,y2:y2})}if(i===points.length-1){var first=this._vertices[0];this._edges.push({x1:x2,x2:first.x,y1:y2,y2:first.y})}var radian=Math.atan2(y,x);radian+=radian<0?Math.PI*2:0;var dist=Math.sqrt(x*x+y*y);this._vectors.push({radian,dist});if(this._xMin===null||this._xMin>
x)this._xMin=x;if(this._xMax===null||this._xMax<x)this._xMax=x;if(this._yMin===null||this._yMin>y)this._yMin=y;if(this._yMax===null||this._yMax<y)this._yMax=y}this.width=Math.abs(this._xMax-this._xMin);this.height=Math.abs(this._yMax-this._yMin);var x1=this._xMin+this.x+this.ox;var y1=this._yMin+this.y+this.oy;this.center=new Point(x1+this.width/2,y1+this.height/2)};Polygon_Collider.prototype.makeVectors=function(){this._vectors=this._baseVertices.map((vertex)=>{var dx=vertex.x-this._pivot.x;var dy=
vertex.y-this._pivot.y;var radian=Math.atan2(dy,dx);radian+=radian<0?Math.PI*2:0;var dist=Math.sqrt(dx*dx+dy*dy);return{radian,dist}})};Polygon_Collider.prototype.setBounds=function(){this._xMin=null;this._xMax=null;this._yMin=null;this._yMax=null;for(var i=0;i<this._baseVertices.length;i++){var x=this._baseVertices[i].x;var y=this._baseVertices[i].y;if(this._xMin===null||this._xMin>x)this._xMin=x;if(this._xMax===null||this._xMax<x)this._xMax=x;if(this._yMin===null||this._yMin>y)this._yMin=y;if(this._yMax===
null||this._yMax<y)this._yMax=y}this.width=Math.abs(this._xMax-this._xMin);this.height=Math.abs(this._yMax-this._yMin);var x1=this._xMin+this.x+this.ox;var y1=this._yMin+this.y+this.oy;this.center=new Point(x1+this.width/2,y1+this.height/2)};Polygon_Collider.prototype.refreshVertices=function(){this._edges=[];var i;var j;for(i=0,j=this._vertices.length;i<j;i++){var vertex=this._vertices[i];vertex.x=this.x+this._baseVertices[i].x+this.ox;vertex.y=this.y+this._baseVertices[i].y+this.oy;if(i!==0){var prev=
this._vertices[i-1];this._edges.push({x1:prev.x,x2:vertex.x,y1:prev.y,y2:vertex.y})}if(i===j-1){var first=this._vertices[0];this._edges.push({x1:vertex.x,x2:first.x,y1:vertex.y,y2:first.y})}}this.setBounds()};Polygon_Collider.prototype.sectorEdge=function(){var x1=this._xMin+this.x+this.ox;var x2=this._xMax+this.x+this.ox-1;var y1=this._yMin+this.y+this.oy;var y2=this._yMax+this.y+this.oy-1;x1=Math.floor(x1/ColliderManager._sectorSize);x2=Math.floor(x2/ColliderManager._sectorSize);y1=Math.floor(y1/
ColliderManager._sectorSize);y2=Math.floor(y2/ColliderManager._sectorSize);return{x1:x1,x2:x2,y1:y1,y2:y2}};Polygon_Collider.prototype.gridEdge=function(){var x1=this._xMin+this.x+this.ox;var x2=this._xMax+this.x+this.ox-1;var y1=this._yMin+this.y+this.oy;var y2=this._yMax+this.y+this.oy-1;x1=Math.floor(x1/QMovement.tileSize);x2=Math.floor(x2/QMovement.tileSize);y1=Math.floor(y1/QMovement.tileSize);y2=Math.floor(y2/QMovement.tileSize);return{x1:x1,x2:x2,y1:y1,y2:y2}};Polygon_Collider.prototype.edge=
function(){var x1=this._xMin+this.x+this.ox;var x2=this._xMax+this.x+this.ox-1;var y1=this._yMin+this.y+this.oy;var y2=this._yMax+this.y+this.oy-1;return{x1:x1,x2:x2,y1:y1,y2:y2}};Polygon_Collider.prototype.setPivot=function(x,y){this._pivot.x=x;this._pivot.y=y;this.makeVectors();this.rotate(0)};Polygon_Collider.prototype.centerPivot=function(){this._pivot.x=this.width/2;this._pivot.y=this.height/2;this.makeVectors();this.rotate(0)};Polygon_Collider.prototype.setRadian=function(radian=0){this.rotate(radian-
this._radian)};Polygon_Collider.prototype.rotate=function(radian){this._radian+=radian;for(var i=0;i<this._vectors.length;i++){var vector=this._vectors[i];vector.radian+=radian;var x=vector.dist*Math.cos(vector.radian);var y=vector.dist*Math.sin(vector.radian);this._baseVertices[i].x=Math.round(x);this._baseVertices[i].y=Math.round(y)}this.refreshVertices()};Polygon_Collider.prototype.setScale=function(zX=1,zY=1){this.scale(zX/this._scale.x,zY/this._scale.y)};Polygon_Collider.prototype.scale=function(zX,
zY){this._scale.x*=zX;this._scale.y*=zY;for(var i=0;i<this._vectors.length;i++){var vector=this._vectors[i];var x=vector.dist*Math.cos(vector.radian);var y=vector.dist*Math.sin(vector.radian);x*=zX;y*=zY;vector.radian=Math.atan2(y,x);vector.radian+=vector.radian<0?Math.PI*2:0;vector.dist=Math.sqrt(x*x+y*y);this._baseVertices[i].x=Math.round(x);this._baseVertices[i].y=Math.round(y)}this.refreshVertices()};Polygon_Collider.prototype.moveTo=function(x,y){if(x!==this.x||y!==this.y){this.x=x;this.y=y;
this.refreshVertices()}};Polygon_Collider.prototype.intersects=function(other){if(this.height===0||this.width===0)return false;if(other.height===0||other.width===0)return false;if(!other.isPolygon())if(this.containsPoint(other.center.x,other.center.y))return true;if(!this.isPolygon())if(other.containsPoint(this.center.x,this.center.y))return true;var i;var j;var x;var y;for(i=0,j=other._vertices.length;i<j;i++){x=other._vertices[i].x;y=other._vertices[i].y;if(this.containsPoint(x,y))return true}for(i=
0,j=this._vertices.length;i<j;i++){x=this._vertices[i].x;y=this._vertices[i].y;if(other.containsPoint(x,y))return true}return false};Polygon_Collider.prototype.inside=function(other){if(this.height===0||this.width===0)return false;if(other.height===0||other.width===0)return false;var i;var j;var x;var y;for(i=0,j=other._vertices.length;i<j;i++){x=other._vertices[i].x;y=other._vertices[i].y;if(!this.containsPoint(x,y))return false}return true};Polygon_Collider.prototype.containsPoint=function(x,y){var i;
var j=this._vertices.length-1;var odd=false;var poly=this._vertices;for(i=0;i<this._vertices.length;i++){if(poly[i].y<y&&poly[j].y>=y||poly[j].y<y&&poly[i].y>=y)if(poly[i].x+(y-poly[i].y)/(poly[j].y-poly[i].y)*(poly[j].x-poly[i].x)<x)odd=!odd;j=i}return odd};Polygon_Collider.prototype.lineIntersection=(lineA,lineB)=>{var a1=lineA.y1-lineA.y2;var b1=lineA.x2-lineA.x1;var a2=lineB.y1-lineB.y2;var b2=lineB.x2-lineB.x1;var det=a1*b2-a2*b1;if(det==0)return false;var c1=a1*lineA.x1+b1*lineA.y1;var c2=a2*
lineB.x1+b2*lineB.y1;var x=(b2*c1-b1*c2)/det;var y=(a1*c2-a2*c1)/det;return new Point(x,y)};Polygon_Collider.prototype.bestPairFrom=function(point){var vertices=this._vertices;var radians=[];var points=[];for(var i=0;i<vertices.length;i++){var radian=Math.atan2(vertices[i].y-point.y,vertices[i].x-point.x);radian+=radian<0?2*Math.PI:0;radians.push(radian);points.push(new Point(vertices[i].x,vertices[i].y))}var bestPair=[];var currI=0;var max=-Math.PI*2;while(points.length>0){var curr=points.shift();
for(var i=0;i<points.length;i++){var dr=radians[currI]-radians[currI+i+1];if(Math.abs(dr)>max){max=Math.abs(dr);bestPair=[currI,currI+i+1]}}currI++}return bestPair};Polygon_Collider.prototype.stretchedPoly=function(radian,dist){var dist2=dist+Math.max(this.width,this.height);var xComponent=Math.cos(radian)*dist;var yComponent=Math.sin(radian)*dist;var x1=this.center.x+Math.cos(radian)*dist2;var y1=this.center.y+Math.sin(radian)*dist2;var bestPair=this.bestPairFrom(new Point(x1,y1));var vertices=this._vertices;
var pointsA=[];var pointsB=[];var i;for(i=0;i<vertices.length;i++){var x2=vertices[i].x-this.x;var y2=vertices[i].y-this.y;pointsA.push(new Point(x2,y2));pointsB.push(new Point(x2+xComponent,y2+yComponent))}var points=[];points.push(pointsA[bestPair[0]]);points.push(pointsB[bestPair[0]]);points.push(pointsB[bestPair[1]]);points.push(pointsA[bestPair[1]]);return new Polygon_Collider(points,this.x,this.y)}})();function Box_Collider(){this.initialize.apply(this,arguments)}
(()=>{Box_Collider.prototype=Object.create(Polygon_Collider.prototype);Box_Collider.prototype.constructor=Box_Collider;Box_Collider.prototype.initialize=function(width,height,ox,oy,options){var points=[new Point(0,0),new Point(width,0),new Point(width,height),new Point(0,height)];Polygon_Collider.prototype.initialize.call(this,points,width,height,ox,oy,options)};Box_Collider.prototype.initMembers=function(width,height,ox,oy,options){Polygon_Collider.prototype.initMembers.call(this,0,0);ox=ox===undefined?
0:ox;oy=oy===undefined?0:oy;options=options===undefined?{}:options;this._offset=new Point(ox,oy);this._pivot=options.pivot||new Point(width/2,height/2);this._scale=options.scale||this._scale;this._radian=options.radian||this._radian;this._position=options.position||this._position};Box_Collider.prototype.isPolygon=()=>false;Box_Collider.prototype.isBox=()=>true;Box_Collider.prototype.containsPoint=function(x,y){if(this._radian===0){var xMin=this._xMin+this.x+this.ox;var xMax=this._xMax+this.x+this.ox;
var yMin=this._yMin+this.y+this.oy;var yMax=this._yMax+this.y+this.oy;var insideX=x>=xMin&&x<=xMax;var insideY=y>=yMin&&y<=yMax;return insideX&&insideY}else return Polygon_Collider.prototype.containsPoint.call(this,x,y)}})();function Circle_Collider(){this.initialize.apply(this,arguments)}
(()=>{Circle_Collider.prototype=Object.create(Polygon_Collider.prototype);Circle_Collider.prototype.constructor=Circle_Collider;Circle_Collider.prototype.initialize=function(width,height,ox,oy,options){this._radius=new Point(width/2,height/2);var points=[];for(var i=7;i>=0;i--){var rad=Math.PI/4*i+Math.PI;var x=this._radius.x+this._radius.x*Math.cos(rad);var y=this._radius.y+this._radius.y*-Math.sin(rad);points.push(new Point(x,y))}Polygon_Collider.prototype.initialize.call(this,points,width,height,
ox,oy,options)};Circle_Collider.prototype.initMembers=Box_Collider.prototype.initMembers;Object.defineProperty(Circle_Collider.prototype,"radiusX",{get(){return this._radius.x}});Object.defineProperty(Circle_Collider.prototype,"radiusY",{get(){return this._radius.y}});Circle_Collider.prototype.isPolygon=()=>false;Circle_Collider.prototype.isCircle=()=>true;Circle_Collider.prototype.scale=function(zX,zY){Polygon_Collider.prototype.scale.call(this,zX,zY);this._radius.x*=zX;this._radius.y*=zY};Circle_Collider.prototype.circlePosition=
function(radian){var x=this.radiusX*Math.cos(radian);var y=this.radiusY*-Math.sin(radian);var dist=Math.sqrt(x*x+y*y);radian-=this._radian;x=dist*Math.cos(radian);y=dist*-Math.sin(radian);return new Point(this.center.x+x,this.center.y+y)};Circle_Collider.prototype.intersects=function(other){if(this.height===0||this.width===0)return false;if(other.height===0||other.width===0)return false;if(this.containsPoint(other.center.x,other.center.y))return true;if(other.containsPoint(this.center.x,this.center.y))return true;
var x1=this.center.x;var x2=other.center.x;var y1=this.center.y;var y2=other.center.y;var rad=Math.atan2(y1-y2,x2-x1);rad+=rad<0?2*Math.PI:0;var pos=this.circlePosition(rad);if(other.containsPoint(pos.x,pos.y))return true;if(other.isCircle()){rad=Math.atan2(y2-y1,x1-x2);rad+=rad<0?2*Math.PI:0;pos=other.circlePosition(rad);if(this.containsPoint(pos.x,pos.y))return true}var i;var j;for(i=0,j=other._vertices.length;i<j;i++){x1=other._vertices[i].x;y1=other._vertices[i].y;if(this.containsPoint(x1,y1))return true}for(i=
0,j=this._vertices.length;i<j;i++){x1=this._vertices[i].x;y1=this._vertices[i].y;if(other.containsPoint(x1,y1))return true}return false}})();function ColliderManager(){throw new Error("This is a static class");}
(()=>{ColliderManager._colliders=[];ColliderManager._colliderGrid=[];ColliderManager._characterGrid=[];ColliderManager._sectorSize=QMovement.tileSize;ColliderManager._needsRefresh=true;ColliderManager.container=new Sprite;ColliderManager.container.alpha=.3;ColliderManager.containerDict={};ColliderManager.visible=QMovement.showColliders;ColliderManager.clear=function(){this._colliders=[];this._colliderGrid=[];this._characterGrid=[];this.container.removeChildren();this.containerDict={}};ColliderManager.refresh=
function(){this.clear();this._colliderGrid=new Array(this._mapWidth);for(var x=0;x<this._colliderGrid.length;x++){this._colliderGrid[x]=[];for(var y=0;y<this._mapHeight;y++)this._colliderGrid[x].push([])}this._characterGrid=new Array(this._mapWidth);for(var x=0;x<this._characterGrid.length;x++){this._characterGrid[x]=[];for(var y=0;y<this._mapHeight;y++)this._characterGrid[x].push([])}this._needsRefresh=false};ColliderManager.addCollider=function(collider,duration,ignoreGrid){if(!$dataMap)return;
if(this._colliders.indexOf(collider)===-1){this._colliders.push(collider);if(duration>0||duration===-1)this.draw(collider,duration)}if(!ignoreGrid)this.updateGrid(collider)};ColliderManager.addCharacter=function(character,duration){if(!$dataMap)return;var i=this._colliders.indexOf(character);if(i===-1){this._colliders.push(character);if(duration>0||duration===-1)this.draw(character.collider("bounds"),duration)}this.updateGrid(character)};ColliderManager.remove=function(collider){var i=this._colliders.indexOf(collider);
if(i<0)return;this.removeFromGrid(collider);if(!collider._colliders)collider.kill=true;this._colliders.splice(i,1)};ColliderManager.removeSprite=function(sprite){this.container.removeChild(sprite);delete this.containerDict[sprite._collider.id]};ColliderManager.updateGrid=function(collider,prevGrid){if(this._needsRefresh)return;var currGrid;var grid;if(collider._colliders){grid=this._characterGrid;currGrid=collider.collider("bounds").sectorEdge()}else{grid=this._colliderGrid;currGrid=collider.sectorEdge()}var x;
var y;if(prevGrid){if(currGrid.x1==prevGrid.x1&&currGrid.y1===prevGrid.y1&&currGrid.x2==prevGrid.x2&&currGrid.y2===prevGrid.y2)return;for(x=prevGrid.x1;x<=prevGrid.x2;x++)for(y=prevGrid.y1;y<=prevGrid.y2;y++){if(!grid[x]||!grid[x][y])continue;var i=grid[x][y].indexOf(collider);if(i!==-1)grid[x][y].splice(i,1)}}for(x=currGrid.x1;x<=currGrid.x2;x++)for(y=currGrid.y1;y<=currGrid.y2;y++){if(!grid[x]||!grid[x][y])continue;grid[x][y].push(collider)}};ColliderManager.removeFromGrid=function(collider){var grid;
var edge;if(collider._colliders){grid=this._characterGrid;edge=collider.collider("bounds").sectorEdge()}else{grid=this._colliderGrid;edge=collider.sectorEdge()}for(var x=edge.x1;x<=edge.x2;x++)for(var y=edge.y1;y<=edge.y2;y++){if(!grid[x]||!grid[x][y])continue;var i=grid[x][y].indexOf(collider);if(i!==-1)grid[x][y].splice(i,1)}};ColliderManager.getCharactersNear=function(collider,only){var grid=collider.sectorEdge();var near=[];var isBreaking=false;var checked={};var x;var y;var i;for(x=grid.x1;x<=
grid.x2;x++)for(y=grid.y1;y<=grid.y2;y++){if(x<0||x>=this.sectorCols())continue;if(y<0||y>=this.sectorRows())continue;var charas=this._characterGrid[x][y];for(i=0;i<charas.length;i++){if(checked[charas[i].charaId()])continue;checked[charas[i].charaId()]=true;if(only){var value=only(charas[i]);if(value==="break"){near.push(charas[i]);isBreaking=true;return near}else if(value===false)continue}near.push(charas[i])}}return near};ColliderManager.getCollidersNear=function(collider,only,debug){var grid=
collider.sectorEdge();var near=[];var checked={};var isBreaking=false;var x;var y;var i;for(x=grid.x1;x<=grid.x2;x++){for(y=grid.y1;y<=grid.y2;y++){if(x<0||x>=this.sectorCols())continue;if(y<0||y>=this.sectorRows())continue;var colliders=this._colliderGrid[x][y];for(i=0;i<colliders.length;i++){if(checked[colliders[i].id])continue;checked[colliders[i].id]=true;if(only){var value=only(colliders[i]);if(value==="break"){near.push(colliders[i]);isBreaking=true;break}else if(value===false)continue}near.push(colliders[i])}if(isBreaking)break}if(isBreaking)break}only=
null;return near};ColliderManager.getAllNear=function(collider,only){var grid=collider.sectorEdge();var near=[];var checked={};var x;var y;var i;for(x=grid.x1;x<=grid.x2;x++)for(y=grid.y1;y<=grid.y2;y++){if(x<0||x>=this.sectorCols())continue;if(y<0||y>=this.sectorRows())continue;var charas=this._characterGrid[x][y];var colliders=this._colliderGrid[x][y];for(i=0;i<charas.length+colliders.length;i++){var type=i>=charas.length?"collider":"chara";var obj;if(type==="chara"){obj=charas[i];if(checked[obj.charaId()])continue;
checked[obj.charaId()]=true}else{obj=colliders[i-charas.length];if(checked[obj.id])continue;checked[obj.id]=true}if(only){var value=only(type,obj);if(value==="break"){near.push(obj);return near}else if(value===false)continue}near.push(obj)}}return near};ColliderManager.sectorCols=function(){return Math.floor(this._mapWidth*QMovement.tileSize/this._sectorSize)};ColliderManager.sectorRows=function(){return Math.floor(this._mapHeight*QMovement.tileSize/this._sectorSize)};ColliderManager.draw=(collider,
duration)=>{if($gameTemp.isPlaytest());};ColliderManager.update=function(){if(this.visible)this.show();else this.hide()};ColliderManager.toggle=function(){this.visible=!this.visible};ColliderManager.show=function(){this.container.visible=true};ColliderManager.hide=function(){this.container.visible=false};ColliderManager.convertToCollider=(arr=["box",0,0,0,0])=>{let type="box";if(arr.length>0){type=arr[0];if(type==="preset"){arr=QMovement.presets[arr[1]];type=arr[0]}}const w=arr[1]||0;const h=arr[2]||
0;const ox=arr[3]||0;const oy=arr[4]||0;let collider;if(type==="circle")collider=new Circle_Collider(w,h,ox,oy);else if(type==="box")collider=new Box_Collider(w,h,ox,oy);else if(type==="poly")collider=new Polygon_Collider(arr.slice(1));return collider};ColliderManager.rayCast=function(origin,angle,dist,filter){var ray=new Box_Collider(dist,1,0,0,{pivot:new Point(0,.5),position:origin});return this.getAllNear(ray,filter)}})();
(()=>{const Alias_Game_Interpreter_pluginCommand=Game_Interpreter.prototype.pluginCommand;Game_Interpreter.prototype.pluginCommand=function(command,args){if(command.toLowerCase()==="qmovement")return this.qMovementCommand(QPlus.makeArgs(args));Alias_Game_Interpreter_pluginCommand.call(this,command,args)};Game_Interpreter.prototype.qMovementCommand=function(args){var cmd=args.shift().toLowerCase();if(cmd==="changecollider"){var chara=QPlus.getCharacter(args[0]);if(!chara)return;var type=args[1];var data=
args.slice(2).map(QPlus.stringToType);chara.changeCollider(type,data);return}if(cmd==="transfer"){var mapId=Number(args[0]);var x=Number(args[1])/QMovement.tileSize;var y=Number(args[2])/QMovement.tileSize;var dir=Number(QPlus.getArg(args,/^dir(\d+)$/i))||0;var fade=QPlus.getArg(args,/fade(black|white)/i)||"none";if(fade.toLowerCase()==="black")fade=0;else if(fade.toLowerCase()==="white")fade=1;else fade=3;$gamePlayer.reserveTransfer(mapId,x,y,dir,fade);return}if(cmd==="setpos"){var chara;if(args[0].toLowerCase()===
"this")chara=this.character(0);else chara=QPlus.getCharacter(args[0]);if(!chara)return;var x=Number(args[1])/QMovement.tileSize;var y=Number(args[2])/QMovement.tileSize;var dir=Number(QPlus.getArg(args,/^dir(\d+)$/i))||0;chara.locate(x,y);if(dir>0)chara.setDirection(dir)}}})();
(()=>{const Alias_Game_Temp_initialize=Game_Temp.prototype.initialize;Game_Temp.prototype.initialize=function(){Alias_Game_Temp_initialize.call(this);this._destinationPX=null;this._destinationPY=null};Game_Temp.prototype.setPixelDestination=function(x,y){this._destinationPX=x;this._destinationPY=y;var x1=$gameMap.roundX(Math.floor(x/$gameMap.tileWidth()));var y1=$gameMap.roundY(Math.floor(y/$gameMap.tileHeight()));this.setDestination(x1,y1)};const Alias_Game_Temp_clearDestination=Game_Temp.prototype.clearDestination;
Game_Temp.prototype.clearDestination=function(){if($gamePlayer._movingWithMouse)return;Alias_Game_Temp_clearDestination.call(this);this._destinationPX=null;this._destinationPY=null};Game_Temp.prototype.destinationPX=function(){return this._destinationPX};Game_Temp.prototype.destinationPY=function(){return this._destinationPY}})();
(()=>{const Alias_Game_System_onBeforeSave=Game_System.prototype.onBeforeSave;Game_System.prototype.onBeforeSave=function(){Alias_Game_System_onBeforeSave.call(this);$gameMap.clearColliders();ColliderManager._needsRefresh=true};const Alias_Game_System_onAfterLoad=Game_System.prototype.onAfterLoad;Game_System.prototype.onAfterLoad=function(){Alias_Game_System_onAfterLoad.call(this);ColliderManager._needsRefresh=true}})();
(()=>{const Alias_Game_Map_setup=Game_Map.prototype.setup;Game_Map.prototype.setup=function(mapId){if($dataMap){ColliderManager._mapWidth=this.width();ColliderManager._mapHeight=this.height();ColliderManager.refresh()}Alias_Game_Map_setup.call(this,mapId);this.reloadColliders()};Game_Map.prototype.tileWidth=()=>QMovement.tileSize;Game_Map.prototype.tileHeight=()=>QMovement.tileSize;Game_Map.prototype.flagAt=function(x,y){var x=x||$gamePlayer.x;var y=y||$gamePlayer.y;var flags=this.tilesetFlags();
var tiles=this.allTiles(x,y);for(var i=0;i<tiles.length;i++){var flag=flags[tiles[i]];if(flag&32)console.log("layer",i,"is ladder");if(flag&64)console.log("layer",i,"is bush");if(flag&128)console.log("layer",i,"is counter");if(flag&256)console.log("layer",i,"is damage")}};Game_Map.prototype.gridSize=()=>{if($dataMap&&$dataMap.meta.grid!==undefined)return Number($dataMap.meta.grid)||QMovement.grid;return QMovement.grid};Game_Map.prototype.offGrid=()=>{if($dataMap&&$dataMap.meta.offGrid!==undefined)return $dataMap.meta.offGrid===
"true";return QMovement.offGrid};Game_Map.prototype.midPass=()=>{if($dataMap&&$dataMap.meta.midPass!==undefined)return $dataMap.meta.midPass==="true";return QMovement.midPass};const Alias_Game_Map_refreshIfNeeded=Game_Map.prototype.refreshIfNeeded;Game_Map.prototype.refreshIfNeeded=function(){Alias_Game_Map_refreshIfNeeded.call(this);if(ColliderManager._needsRefresh){ColliderManager._mapWidth=this.width();ColliderManager._mapHeight=this.height();ColliderManager.refresh();this.reloadColliders()}};
Game_Map.prototype.reloadTileMap=function(){this.setupMapColliders()};Game_Map.prototype.getMapCollider=function(x,y,flag){if(flag>>12>0){flag=flag.toString(2);flag=flag.slice(flag.length-12,flag.length);flag=parseInt(flag,2)}var boxData;if(QMovement.regionColliders[this.regionId(x,y)]){var regionData=QMovement.regionColliders[this.regionId(x,y)];boxData=[];for(var i=0;i<regionData.length;i++)boxData[i]=[regionData[i].width||0,regionData[i].height||0,regionData[i].ox||0,regionData[i].oy||0,regionData[i].tag||
regionData[i].note||"",regionData[i].type||"box"];flag=0}else boxData=QMovement.tileBoxes[flag];if(!boxData)if(flag&32||flag&64||flag&128||flag&256)boxData=[this.tileWidth(),this.tileHeight(),0,0];else return null;return boxData};Game_Map.prototype.makeTileCollider=function(x,y,flag,boxData,index){var x1=x*this.tileWidth();var y1=y*this.tileHeight();var ox=boxData[2]||0;var oy=boxData[3]||0;var w=boxData[0];var h=boxData[1];if(w===0||h===0)return;var type=boxData[5]||"box";var newBox;if(type==="circle")newBox=
new Circle_Collider(w,h,ox,oy);else if(type==="box")newBox=new Box_Collider(w,h,ox,oy);else return;newBox.isTile=true;newBox.note=boxData[4]||"";newBox.flag=flag;newBox.terrain=flag>>12;newBox.regionId=this.regionId(x,y);newBox.isWater1=flag>>12===QMovement.water1Tag||/<water1>/i.test(newBox.note);newBox.isWater2=flag>>12===QMovement.water2Tag||/<water2>/i.test(newBox.note);newBox.isLadder=flag&32||/<ladder>/i.test(newBox.note);newBox.isBush=flag&64||/<bush>/i.test(newBox.note);newBox.isCounter=flag&
128||/<counter>/i.test(newBox.note);newBox.isDamage=flag&256||/<damage>/i.test(newBox.note);newBox.moveTo(x1,y1);var vx=x*this.height()*this.width();var vy=y*this.height();var vz=index;newBox.location=vx+vy+vz;if(newBox.isWater2)newBox.color=QMovement.water2.toLowerCase();else if(newBox.isWater1)newBox.color=QMovement.water1.toLowerCase();else if(newBox.isLadder||newBox.isBush||newBox.isDamage)newBox.color="#ffffff";else newBox.color=QMovement.collision.toLowerCase();ColliderManager.addCollider(newBox,
-1);return newBox};Game_Map.prototype.adjustPX=function(x){return this.adjustX(x/QMovement.tileSize)*QMovement.tileSize};Game_Map.prototype.adjustPY=function(y){return this.adjustY(y/QMovement.tileSize)*QMovement.tileSize};Game_Map.prototype.roundPX=function(x){return this.isLoopHorizontal()?x.mod(this.width()*QMovement.tileSize):x};Game_Map.prototype.roundPY=function(y){return this.isLoopVertical()?y.mod(this.height()*QMovement.tileSize):y};Game_Map.prototype.pxWithDirection=(x,d,dist)=>x+(d===6?
dist:d===4?-dist:0);Game_Map.prototype.pyWithDirection=(y,d,dist)=>y+(d===2?dist:d===8?-dist:0);Game_Map.prototype.roundPXWithDirection=function(x,d,dist){return this.roundPX(x+(d===6?dist:d===4?-dist:0))};Game_Map.prototype.roundPYWithDirection=function(y,d,dist){return this.roundPY(y+(d===2?dist:d===8?-dist:0))};Game_Map.prototype.deltaPX=function(x1,x2){var result=x1-x2;if(this.isLoopHorizontal()&&Math.abs(result)>this.width()*QMovement.tileSize/2)if(result<0)result+=this.width()*QMovement.tileSize;
else result-=this.width()*QMovement.tileSize;return result};Game_Map.prototype.deltaPY=function(y1,y2){var result=y1-y2;if(this.isLoopVertical()&&Math.abs(result)>this.height()*QMovement.tileSize/2)if(result<0)result+=this.height()*QMovement.tileSize;else result-=this.height()*QMovement.tileSize;return result};Game_Map.prototype.canvasToMapPX=function(x){var tileWidth=this.tileWidth();var originX=this.displayX()*tileWidth;return this.roundPX(originX+x)};Game_Map.prototype.canvasToMapPY=function(y){var tileHeight=
this.tileHeight();var originY=this.displayY()*tileHeight;return this.roundPY(originY+y)}})();(()=>{Game_Party.prototype.steps=function(){return Math.floor(this._steps)};Game_Party.prototype.increaseSteps=function(){this._steps+=$gamePlayer.moveTiles()/QMovement.tileSize}})();
(()=>{Object.defineProperties(Game_CharacterBase.prototype,{px:{get:function(){return this._px},configurable:true},py:{get:function(){return this._py},configurable:true}});const Alias_Game_CharacterBase_initMembers=Game_CharacterBase.prototype.initMembers;Game_CharacterBase.prototype.initMembers=function(){Alias_Game_CharacterBase_initMembers.call(this);this._px=0;this._py=0;this._realPX=0;this._realPY=0;this._radian=this.directionToRadian(this._direction);this._forwardRadian=this.directionToRadian(this._direction);
this._adjustFrameSpeed=false;this._freqCount=0;this._diagonal=false;this._currentRad=0;this._targetRad=0;this._pivotX=0;this._pivotY=0;this._radiusL=0;this._radisuH=0;this._passabilityLevel=0;this._isMoving=false;this._smartMove=0;this._colliders=null;this._overrideColliders={}};Game_CharacterBase.prototype.direction8=(horz,vert)=>{if(horz===4&&vert===8)return 7;if(horz===4&&vert===2)return 1;if(horz===6&&vert===8)return 9;if(horz===6&&vert===2)return 3;return 5};Game_CharacterBase.prototype.isMoving=
function(){return this._isMoving};Game_CharacterBase.prototype.startedMoving=function(){return this._realPX!==this._px||this._realPY!==this._py};Game_CharacterBase.prototype.isDiagonal=function(){return this._diagonal};Game_CharacterBase.prototype.isArcing=function(){return this._currentRad!==this._targetRad};Game_CharacterBase.prototype.setPixelPosition=function(x,y){this.setPosition(x/QMovement.tileSize,y/QMovement.tileSize)};const Alias_Game_CharacterBase_setPosition=Game_CharacterBase.prototype.setPosition;
Game_CharacterBase.prototype.setPosition=function(x,y){Alias_Game_CharacterBase_setPosition.call(this,x,y);this._px=this._realPX=x*QMovement.tileSize;this._py=this._realPY=y*QMovement.tileSize;if(!this._colliders)this.collider();this.moveColliders()};const Alias_Game_CharacterBase_copyPosition=Game_CharacterBase.prototype.copyPosition;Game_CharacterBase.prototype.copyPosition=function(character){Alias_Game_CharacterBase_copyPosition.call(this,character);this._px=character._px;this._py=character._py;
this._realPX=character._realPX;this._realPY=character._realPY;if(!this._colliders)this.collider();this.moveColliders()};const Alias_Game_CharacterBase_setDirection=Game_CharacterBase.prototype.setDirection;Game_CharacterBase.prototype.setDirection=function(d){if(d)this._radian=this.directionToRadian(d);if(!this.isDirectionFixed()&&d)if([1,3,7,9].contains(d)){this._diagonal=d;var horz=[1,7].contains(d)?4:6;var vert=[1,3].contains(d)?2:8;if(this._direction===this.reverseDir(horz))this._direction=horz;
if(this._direction===this.reverseDir(vert))this._direction=vert;this.resetStopCount();return}else this._diagonal=false;Alias_Game_CharacterBase_setDirection.call(this,d)};Game_CharacterBase.prototype.setRadian=function(radian){radian=QPlus.adjustRadian(radian);this.setDirection(this.radianToDirection(radian,QMovement.diagonal));this._radian=radian};Game_CharacterBase.prototype.moveTiles=function(){if($gameMap.gridSize()<this.frameSpeed())return $gameMap.offGrid()?this.frameSpeed():$gameMap.gridSize();
return $gameMap.gridSize()};Game_CharacterBase.prototype.frameSpeed=function(multi){multi=multi===undefined?1:Math.abs(multi);return this.distancePerFrame()*QMovement.tileSize*multi};Game_CharacterBase.prototype.angularSpeed=function(){return this._angularSpeed||this.frameSpeed()/this._radiusL};Game_CharacterBase.prototype.forwardV=function(){return{x:Math.cos(this._forwardRadian)*this.frameSpeed(),y:Math.sin(this._forwardRadian)*this.frameSpeed()}};const Alias_Game_CharacterBase_canMove=Game_CharacterBase.prototype.canMove;
Game_CharacterBase.prototype.canMove=function(){if(this._locked)return false;return Alias_Game_CharacterBase_canMove.call(this)};Game_CharacterBase.prototype.canPass=function(x,y,dir){return this.canPixelPass(x*QMovement.tileSize,y*QMovement.tileSize,dir)};Game_CharacterBase.prototype.canPixelPass=function(x,y,dir,dist=this.moveTiles(),type="collision"){var x1=$gameMap.roundPXWithDirection(x,dir,dist);var y1=$gameMap.roundPYWithDirection(y,dir,dist);if(!this.collisionCheck(x1,y1,dir,dist,type)){this.collider(type).moveTo(this._px,
this._py);return false}if(type[0]!=="_")this.moveColliders(x1,y1);return true};Game_CharacterBase.prototype.canPassDiagonally=function(x,y,horz,vert){return this.canPixelPassDiagonally(x*QMovement.tileSize,y*QMovement.tileSize,horz,vert)};Game_CharacterBase.prototype.canPixelPassDiagonally=function(x,y,horz,vert,dist=this.moveTiles(),type="collision"){var x1=$gameMap.roundPXWithDirection(x,horz,dist);var y1=$gameMap.roundPYWithDirection(y,vert,dist);if(dist===this.moveTiles()){if(!this.canPixelPass(x1,
y1,5,null,type))return false;if($gameMap.midPass()){var x2=$gameMap.roundPXWithDirection(x,horz,dist/2);var y2=$gameMap.roundPYWithDirection(y,vert,dist/2);if(!this.canPixelPass(x2,y2,5,null,type))return false}}else return this.canPixelPass(x,y,vert,dist,type)&&this.canPixelPass(x,y1,horz,dist,type)&&(this.canPixelPass(x,y,horz,dist,type)&&this.canPixelPass(x1,y,vert,dist,type));return true};Game_CharacterBase.prototype.collisionCheck=function(x,y,dir,dist,type){this.collider(type).moveTo(x,y);if(!this.valid(type))return false;
if(this.isThrough()||this.isDebugThrough())return true;if($gameMap.midPass()&&dir!==5)if(!this.middlePass(x,y,dir,dist,type))return false;if(this.collidesWithAnyTile(type))return false;return!this.collidesWithAnyCharacter(type)};Game_CharacterBase.prototype.middlePass=function(x,y,dir,dist,type){dist=dist/2||this.moveTiles()/2;var x2=$gameMap.roundPXWithDirection(x,this.reverseDir(dir),dist);var y2=$gameMap.roundPYWithDirection(y,this.reverseDir(dir),dist);this.collider(type).moveTo(x2,y2);if(this.collidesWithAnyTile(type))return false;
if(this.collidesWithAnyCharacter(type))return false;this.collider(type).moveTo(x,y);return true};Game_CharacterBase.prototype.collidesWithAnyTile=function(type){var collider=this.collider(type);var collided=false;ColliderManager.getCollidersNear(collider,(collider)=>{collided=this.collidedWithTile(type,collider);if(collided)return"break"});return collided};Game_CharacterBase.prototype.collidedWithTile=function(type,collider){if(collider.color&&this.passableColors().contains(collider.color))return false;
if(collider.type&&(collider.type!=="collision"||collider.type!=="default"))return false;return collider.intersects(this.collider(type))};Game_CharacterBase.prototype.collidesWithAnyCharacter=function(type){var collider=this.collider(type);var collided=false;ColliderManager.getCharactersNear(collider,(chara)=>{collided=this.collidedWithCharacter(type,chara);if(collided)return"break"});return collided};Game_CharacterBase.prototype.collidedWithCharacter=function(type,chara){if(chara.isThrough()||chara===
this||!chara.isNormalPriority())return false;if(this.ignoreCharacters(type).contains(chara.charaId()))return false;return chara.collider("collision").intersects(this.collider(type))};Game_CharacterBase.prototype.ignoreCharacters=(type)=>[];Game_CharacterBase.prototype.valid=function(type){var edge=this.collider(type).gridEdge();var maxW=$gameMap.width();var maxH=$gameMap.height();if(!$gameMap.isLoopHorizontal())if(edge.x1<0||edge.x2>=maxW)return false;if(!$gameMap.isLoopVertical())if(edge.y1<0||edge.y2>=
maxH)return false;return true};Game_CharacterBase.prototype.passableColors=function(){var colors=["#ffffff","#00000000"];switch(this._passabilityLevel){case 1:case 3:{colors.push(QMovement.water1);break}case 2:case 4:{colors.push(QMovement.water1);colors.push(QMovement.water2);break}}return colors};Game_CharacterBase.prototype.canPassToFrom=function(xf,yf,xi=this._px,yi=this._py,type="collision"){if(!this.canPixelPass(xi,yi,5,null,type)||!this.canPixelPass(xf,yf,5,null,type)){this.collider(type).moveTo(this._px,
this._py);return false}var dx=xf-xi;var dy=yf-yi;var radian=Math.atan2(dy,dx);if(radian<0)radian+=Math.PI*2;var dist=Math.sqrt(dx*dx+dy*dy);this._colliders["_stretched"]=this.collider(type).stretchedPoly(radian,dist);if(!this.canPixelPass(xi,yi,5,null,"_stretched")){delete this._colliders["_stretched"];return false}delete this._colliders["_stretched"];return true};Game_CharacterBase.prototype.checkEventTriggerTouchFront=function(d){let horz=d;let vert=d;if([1,3,7,9].contains(d)){horz=d===1||d===7?
4:6;vert=d===1||d===3?2:8}var x2=$gameMap.roundPXWithDirection(this.px,horz,this.moveTiles());var y2=$gameMap.roundPYWithDirection(this.py,vert,this.moveTiles());this.checkEventTriggerTouch(x2,y2)};Game_CharacterBase.prototype.isOnLadder=function(){if(!this.collider())return false;var collider=this.collider("collision");var collided=false;var colliders=ColliderManager.getCollidersNear(collider,(tile)=>{if(!tile.isTile)return false;if(tile.isLadder&&tile.intersects(collider)){collided=true;return"break"}return false});
return collided};Game_CharacterBase.prototype.isOnBush=function(){if(!this.collider())return false;var collider=this.collider("collision");var collided=false;var colliders=ColliderManager.getCollidersNear(collider,(tile)=>{if(!tile.isTile)return false;if(tile.isBush&&tile.intersects(collider)){collided=true;return"break"}return false});return collided};Game_CharacterBase.prototype.freqThreshold=()=>QMovement.tileSize;Game_CharacterBase.prototype.terrainTag=function(){return $gameMap.terrainTag(Math.floor(this.cx(true)),
Math.floor(this.cy(true)))};Game_CharacterBase.prototype.regionId=function(){return $gameMap.regionId(Math.floor(this.cx(true)),Math.floor(this.cy(true)))};Game_CharacterBase.prototype.update=function(){var prevX=this._realPX;var prevY=this._realPY;if(this.startedMoving())this._isMoving=true;else this.updateStop();if(this.isArcing())this.updateArc();else if(this.isJumping())this.updateJump();else if(this.isMoving())this.updateMove();this.updateAnimation();this.updateColliders();if(prevX!==this._realPX||
prevY!==this._realPY)this.onPositionChange();else this._isMoving=false};Game_CharacterBase.prototype.updateMove=function(){var xSpeed=1;var ySpeed=1;if(this._adjustFrameSpeed){xSpeed=Math.cos(this._radian);ySpeed=Math.sin(this._radian)}if(this._px<this._realPX)this._realPX=Math.max(this._realPX-this.frameSpeed(xSpeed),this._px);if(this._px>this._realPX)this._realPX=Math.min(this._realPX+this.frameSpeed(xSpeed),this._px);if(this._py<this._realPY)this._realPY=Math.max(this._realPY-this.frameSpeed(ySpeed),
this._py);if(this._py>this._realPY)this._realPY=Math.min(this._realPY+this.frameSpeed(ySpeed),this._py);this._x=this._realX=this._realPX/QMovement.tileSize;this._y=this._realY=this._realPY/QMovement.tileSize;this._freqCount+=this.frameSpeed()};Game_CharacterBase.prototype.updateArc=function(){let newRad;if(this._currentRad<this._targetRad)newRad=Math.min(this._currentRad+this.angularSpeed(),this._targetRad);if(this._currentRad>this._targetRad)newRad=Math.max(this._currentRad-this.angularSpeed(),this._targetRad);
var x1=this._pivotX+this._radiusL*Math.cos(newRad);var y1=this._pivotY+this._radiusH*Math.sin(newRad);this._currentRad=newRad;this._px=this._realPX=x1;this._py=this._realPY=y1;this._x=this._realX=this._realPX/QMovement.tileSize;this._y=this._realY=this._realPY/QMovement.tileSize;this.moveColliders(x1,y1);this.checkEventTriggerTouchFront(this._direction)};const Alias_Game_CharacterBase_updateJump=Game_CharacterBase.prototype.updateJump;Game_CharacterBase.prototype.updateJump=function(){Alias_Game_CharacterBase_updateJump.call(this);
this._px=this._realPX=this._x*QMovement.tileSize;this._py=this._realPY=this._y*QMovement.tileSize;this.moveColliders(this._px,this._py)};Game_CharacterBase.prototype.updateColliders=function(){var colliders=this._colliders;if(!colliders)return;var hidden=false;hidden=this.isTransparent()||this._erased;if(!hidden&&this.isVisible)hidden=!this.isVisible();for(var type in colliders)if(colliders.hasOwnProperty(type))colliders[type]._isHidden=!!hidden};Game_CharacterBase.prototype.onPositionChange=function(){this.refreshBushDepth()};
Game_CharacterBase.prototype.refreshBushDepth=function(){if(this.isNormalPriority()&&!this.isObjectCharacter()&&this.isOnBush()&&!this.isJumping()){if(!this.startedMoving())this._bushDepth=12}else this._bushDepth=0};Game_CharacterBase.prototype.pixelJump=function(xPlus,yPlus){return this.jump(xPlus/QMovement.tileSize,yPlus/QMovement.tileSize)};Game_CharacterBase.prototype.pixelJumpForward=function(dist,dir=this._direction){dist=dist/QMovement.tileSize;var x=dir===6?dist:dir===4?-dist:0;var y=dir===
2?dist:dir===8?-dist:0;this.jump(x,y)};Game_CharacterBase.prototype.pixelJumpBackward=function(dist){this.pixelJumpFixed(this.reverseDir(this.direction()),dist)};Game_CharacterBase.prototype.pixelJumpFixed=function(dir,dist){var lastDirectionFix=this.isDirectionFixed();this.setDirectionFix(true);this.pixelJumpForward(dist,dir);this.setDirectionFix(lastDirectionFix)};Game_CharacterBase.prototype.moveStraight=function(dir,dist=this.moveTiles()){this.setMovementSuccess(this.canPixelPass(this._px,this._py,
dir,dist));var originalSpeed=this._moveSpeed;if(this.smartMove()===1||this.smartMove()>2)this.smartMoveSpeed(dir);this.setDirection(dir);if(this.isMovementSucceeded()){this._forwardRadian=this.directionToRadian(dir);this._diagonal=false;this._adjustFrameSpeed=false;this._px=$gameMap.roundPXWithDirection(this._px,dir,dist);this._py=$gameMap.roundPYWithDirection(this._py,dir,dist);this._realPX=$gameMap.pxWithDirection(this._px,this.reverseDir(dir),dist);this._realPY=$gameMap.pyWithDirection(this._py,
this.reverseDir(dir),dist);this.increaseSteps()}else this.checkEventTriggerTouchFront(dir);this._moveSpeed=originalSpeed;if(!this.isMovementSucceeded()&&this.smartMove()>1)this.smartMoveDir8(dir)};Game_CharacterBase.prototype.moveDiagonally=function(horz,vert,dist=this.moveTiles()){this.setMovementSuccess(this.canPixelPassDiagonally(this._px,this._py,horz,vert,dist));var originalSpeed=this._moveSpeed;if(this.smartMove()===1||this.smartMove()>2)this.smartMoveSpeed([horz,vert]);this.setDirection(this.direction8(horz,
vert));if(this.isMovementSucceeded()){this._forwardRadian=this.directionToRadian(this.direction8(horz,vert));this._adjustFrameSpeed=false;this._px=$gameMap.roundPXWithDirection(this._px,horz,dist);this._py=$gameMap.roundPYWithDirection(this._py,vert,dist);this._realPX=$gameMap.pxWithDirection(this._px,this.reverseDir(horz),dist);this._realPY=$gameMap.pyWithDirection(this._py,this.reverseDir(vert),dist);this.increaseSteps()}else this.checkEventTriggerTouchFront(this.direction8(horz,vert));this._moveSpeed=
originalSpeed;if(!this.isMovementSucceeded()&&this.smartMove()>1)if(this.canPixelPass(this._px,this._py,horz))this.moveStraight(horz);else if(this.canPixelPass(this._px,this._py,vert))this.moveStraight(vert)};Game_CharacterBase.prototype.moveRadian=function(radian,dist=this.moveTiles()){this.fixedRadianMove(radian,dist);if(!this.isMovementSucceeded()&&this.smartMove()>1){var realDir=this.radianToDirection(radian,true);var xAxis=Math.cos(radian);var yAxis=Math.sin(radian);var horz=xAxis>0?6:xAxis<
0?4:0;var vert=yAxis>0?2:yAxis<0?8:0;if([1,3,7,9].contains(realDir))if(this.canPixelPass(this._px,this._py,horz,dist))this.moveStraight(horz,dist);else{if(this.canPixelPass(this._px,this._py,vert,dist))this.moveStraight(vert,dist)}else{var dir=this.radianToDirection(radian);this.smartMoveDir8(dir)}}};Game_CharacterBase.prototype.fixedMove=function(dir,dist=this.moveTiles()){dir=dir===5?this.direction():dir;if([1,3,7,9].contains(dir)){var horz=dir===1||dir===7?4:6;var vert=dir===1||dir===3?2:8;return this.fixedDiagMove(horz,
vert,dist)}this.setMovementSuccess(this.canPixelPass(this._px,this._py,dir,dist));this.setDirection(dir);if(this.isMovementSucceeded()){this._forwardRadian=this.directionToRadian(dir);this._adjustFrameSpeed=false;this._px=$gameMap.roundPXWithDirection(this._px,dir,dist);this._py=$gameMap.roundPYWithDirection(this._py,dir,dist);this._realPX=$gameMap.pxWithDirection(this._px,this.reverseDir(dir),dist);this._realPY=$gameMap.pyWithDirection(this._py,this.reverseDir(dir),dist);this.increaseSteps()}else this.checkEventTriggerTouchFront(dir)};
Game_CharacterBase.prototype.fixedDiagMove=function(horz,vert,dist=this.moveTiles()){this.setMovementSuccess(this.canPixelPassDiagonally(this._px,this._py,horz,vert));this.setDirection(this.direction8(horz,vert));if(this.isMovementSucceeded()){this._forwardRadian=this.directionToRadian(this.direction8(horz,vert));this._adjustFrameSpeed=false;this._px=$gameMap.roundPXWithDirection(this._px,horz,dist);this._py=$gameMap.roundPYWithDirection(this._py,vert,dist);this._realPX=$gameMap.pxWithDirection(this._px,
this.reverseDir(horz),dist);this._realPY=$gameMap.pyWithDirection(this._py,this.reverseDir(vert),dist);this.increaseSteps()}else this.checkEventTriggerTouchFront(this.direction8(horz,vert))};Game_CharacterBase.prototype.fixedRadianMove=function(radian,dist=this.moveTiles()){var dir=this.radianToDirection(radian,true);var xAxis=Math.cos(radian);var yAxis=Math.sin(radian);var horzSteps=Math.abs(xAxis)*dist;var vertSteps=Math.abs(yAxis)*dist;var horz=xAxis>0?6:xAxis<0?4:0;var vert=yAxis>0?2:yAxis<0?
8:0;var x2=$gameMap.roundPXWithDirection(this._px,horz,horzSteps);var y2=$gameMap.roundPYWithDirection(this._py,vert,vertSteps);this.setMovementSuccess(this.canPassToFrom(x2,y2,this._px,this._py));this.setRadian(radian);if(this.isMovementSucceeded()){this._forwardRadian=QPlus.adjustRadian(radian);this._adjustFrameSpeed=true;this._px=x2;this._py=y2;this._realPX=$gameMap.pxWithDirection(this._px,this.reverseDir(horz),horzSteps);this._realPY=$gameMap.pyWithDirection(this._py,this.reverseDir(vert),vertSteps);
this.increaseSteps()}else this.checkEventTriggerTouchFront(dir)};Game_CharacterBase.prototype.fixedMoveBackward=function(dist){var lastDirectionFix=this.isDirectionFixed();this.setDirectionFix(true);this.fixedMove(this.reverseDir(this.direction()),dist);this.setDirectionFix(lastDirectionFix)};Game_CharacterBase.prototype.arc=function(pivotX,pivotY,radians,cc,frames){var cc=cc?1:-1;var dx=this._px-pivotX;var dy=this._py-pivotY;var rad=Math.atan2(dy,dx);frames=frames||1;rad+=rad<0?2*Math.PI:0;this._currentRad=
rad;this._targetRad=rad+radians*cc;this._pivotX=pivotX;this._pivotY=pivotY;this._radiusL=this._radiusH=Math.sqrt(dy*dy+dx*dx);this._angularSpeed=radians/frames};Game_CharacterBase.prototype.smartMove=function(){return this._smartMove};Game_CharacterBase.prototype.smartMoveDir8=function(dir){var dist=this.moveTiles();var collider=this.collider("collision");var x1=this._px;var y1=this._py;var x2=$gameMap.roundPXWithDirection(x1,dir,dist);var y2=$gameMap.roundPYWithDirection(y1,dir,dist);collider.moveTo(x2,
y2);var collided=false;ColliderManager.getCharactersNear(collider,(chara)=>{if(chara.isThrough()||chara===this||!chara.isNormalPriority()||/<smartdir>/i.test(chara.notes()))return false;if(chara.collider("collision").intersects(collider)){collided=true;return"break"}return false});collider.moveTo(x1,y1);if(collided)return;var horz=[4,6].contains(dir)?true:false;var steps=horz?collider.height:collider.width;steps/=2;var pass=false;for(var i=0;i<2;i++){var sign=i===0?1:-1;var j=0;var x2=x1;var y2=y1;
if(horz)x2=$gameMap.roundPXWithDirection(x1,dir,dist);else y2=$gameMap.roundPYWithDirection(y1,dir,dist);while(j<steps){j+=dist;if(horz)y2=y1+j*sign;else x2=x1+j*sign;pass=this.canPixelPass(x2,y2,5);if(pass)break}if(pass)break}if(!pass)return;var radian=QPlus.adjustRadian(Math.atan2(y2-y1,x2-x1));this._forwardRadian=radian;this._px=x2;this._py=y2;this._realPX=x1;this._realPY=y1;this._adjustFrameSpeed=false;this.setRadian(radian);this.increaseSteps()};Game_CharacterBase.prototype.smartMoveSpeed=function(dir){var diag=
dir.constructor===Array;while(!this.isMovementSucceeded()){this._moveSpeed--;if(diag)this.setMovementSuccess(this.canPixelPassDiagonally(this._px,this._py,dir[0],dir[1]));else this.setMovementSuccess(this.canPixelPass(this._px,this._py,dir));if(this._moveSpeed<1)break}};Game_CharacterBase.prototype.reloadColliders=function(){this.removeColliders();this.setupColliders()};Game_CharacterBase.prototype.removeColliders=function(){ColliderManager.remove(this);for(var collider in this._colliders){if(!this._colliders.hasOwnProperty(collider))continue;
ColliderManager.remove(this._colliders[collider]);this._colliders[collider]=null}this._colliders=null};Game_CharacterBase.prototype.collider=function(type,alternative){if(!this._colliders)this.setupColliders();for(var i=0;i<arguments.length;i++)if(this._colliders[arguments[i]])return this._colliders[arguments[i]];return this._colliders["default"]};Game_CharacterBase.prototype.defaultColliderConfig=()=>"box,0,0";Game_CharacterBase.prototype.setupColliders=function(){this._colliders={};var defaultCollider=
this.defaultColliderConfig();var notes=this.notes(true);var configs={};var multi=/<colliders>([\s\S]*)<\/colliders>/i.exec(notes);var single=/<collider[:|=](.*?)>/i.exec(notes);if(multi)configs=QPlus.stringToObj(multi[1]);if(single)configs.default=QPlus.stringToAry(single[1]);else if(!configs.default)configs.default=QPlus.stringToAry(defaultCollider);Object.assign(configs,this._overrideColliders);for(var collider in configs)this.makeCollider(collider,configs[collider]);this.makeBounds();this.moveColliders()};
Game_CharacterBase.prototype.makeCollider=function(type,settings){this._colliders[type]=ColliderManager.convertToCollider(settings);this._colliders[type].oy-=this.shiftY();this._colliders[type]._charaId=this.charaId();ColliderManager.addCollider(this._colliders[type],-1,true)};Game_CharacterBase.prototype.changeCollider=function(type,settings){this._overrideColliders[type]=settings;this.reloadColliders()};Game_CharacterBase.prototype.makeBounds=function(){var minX=null;var maxX=null;var minY=null;
var maxY=null;for(var type in this._colliders){if(!this._colliders.hasOwnProperty(type))continue;var edge=this._colliders[type].edge();if(minX===null||minX>edge.x1)minX=edge.x1;if(maxX===null||maxX<edge.x2)maxX=edge.x2;if(minY===null||minY>edge.y1)minY=edge.y1;if(maxY===null||maxY<edge.y2)maxY=edge.y2}var w=maxX-minX+1;var h=maxY-minY+1;this._colliders["bounds"]=new Box_Collider(w,h,minX,minY);this._colliders["bounds"]._charaId=String(this.charaId());ColliderManager.addCharacter(this,0)};Game_CharacterBase.prototype.moveColliders=
function(x,y){x=typeof x==="number"?x:this.px;y=typeof y==="number"?y:this.py;var prev=this._colliders["bounds"].sectorEdge();for(var collider in this._colliders)if(this._colliders.hasOwnProperty(collider))this._colliders[collider].moveTo(x,y);ColliderManager.updateGrid(this,prev)};Game_CharacterBase.prototype.cx=function(grid){var x=this.collider("collision").center.x;if(grid)x/=QMovement.tileSize;return x};Game_CharacterBase.prototype.cy=function(grid){var y=this.collider("collision").center.y;
if(grid)y/=QMovement.tileSize;return y}})();
(()=>{const Alias_Game_Character_processMoveCommand=Game_Character.prototype.processMoveCommand;Game_Character.prototype.processMoveCommand=function(command){this.subMVMoveCommands(command);if(this.subQMoveCommand(command))command=this._moveRoute.list[this._moveRouteIndex];this.processQMoveCommands(command);Alias_Game_Character_processMoveCommand.call(this,command)};Game_Character.prototype.subMVMoveCommands=function(command){var gc=Game_Character;var params=command.parameters;switch(command.code){case gc.ROUTE_MOVE_DOWN:{this.subQMove(`2, 1,${QMovement.tileSize}`);
break}case gc.ROUTE_MOVE_LEFT:{this.subQMove(`4, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_RIGHT:{this.subQMove(`6, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_UP:{this.subQMove(`8, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_LOWER_L:{this.subQMove(`1, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_LOWER_R:{this.subQMove(`3, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_UPPER_L:{this.subQMove(`7, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_UPPER_R:{this.subQMove(`9, 1,${QMovement.tileSize}`);
break}case gc.ROUTE_MOVE_FORWARD:{this.subQMove(`5, 1,${QMovement.tileSize}`);break}case gc.ROUTE_MOVE_BACKWARD:{this.subQMove(`0, 1,${QMovement.tileSize}`);break}case gc.ROUTE_TURN_DOWN:case gc.ROUTE_TURN_LEFT:case gc.ROUTE_TURN_RIGHT:case gc.ROUTE_TURN_UP:case gc.ROUTE_TURN_90D_R:case gc.ROUTE_TURN_90D_L:case gc.ROUTE_TURN_180D:case gc.ROUTE_TURN_90D_R_L:case gc.ROUTE_TURN_RANDOM:case gc.ROUTE_TURN_TOWARD:case gc.ROUTE_TURN_AWAY:{this._freqCount=this.freqThreshold();break}}};Game_Character.prototype.subQMoveCommand=
function(command){var gc=Game_Character;var code=command.code;var params=command.parameters;if(command.code===gc.ROUTE_SCRIPT){var qmove=/^qmove\((.*)\)/i.exec(params[0]);var qmove2=/^qmove2\((.*)\)/i.exec(params[0]);var arc=/^arc\((.*)\)/i.exec(params[0]);var arc2=/^arc2\((.*)\)/i.exec(params[0]);if(qmove)return this.subQMove(qmove[1]);if(qmove2)return this.subQMove2(qmove2[1]);if(arc)return this.subArc(arc[1]);if(arc2)return this.subArc2(arc2[1])}return false};Game_Character.prototype.processQMoveCommands=
function(command){var params=command.parameters;switch(command.code){case "arc":{this.arc(params[0],params[1],eval(params[2]),params[3],params[4]);break}case "arc2":{var x=params[0]+this.px;var y=params[1]+this.py;this.arc(x,y,eval(params[2]),params[3],params[4]);break}case "fixedRadianMove":{this.fixedRadianMove(params[0],params[1]);break}case "fixedMove":{this.fixedMove(params[0],params[1]);break}case "fixedMoveBackward":{this.fixedMoveBackward(params[0]);break}case "fixedMoveForward":{this.fixedMove(this.direction(),
params[0]);break}}};Game_Character.prototype.subArc=function(settings){var cmd={};cmd.code="arc";cmd.parameters=QPlus.stringToAry(settings);this._moveRoute.list[this._moveRouteIndex]=cmd;return true};Game_Character.prototype.subArc2=function(settings){var cmd={};cmd.code="arc2";cmd.parameters=QPlus.stringToAry(settings);this._moveRoute.list[this._moveRouteIndex]=cmd;return true};Game_Character.prototype.subQMove=function(settings){settings=QPlus.stringToAry(settings);var dir=settings[0];var amt=settings[1];
var multi=settings[2]||1;var tot=amt*multi;var steps=Math.floor(tot/this.moveTiles());var moved=0;var i;for(i=0;i<steps;i++){moved+=this.moveTiles();var cmd={};if(dir===0){cmd.code="fixedMoveBackward";cmd.parameters=[this.moveTiles()]}else if(dir===5){cmd.code="fixedMoveForward";cmd.parameters=[this.moveTiles()]}else{cmd.code="fixedMove";cmd.parameters=[dir,this.moveTiles()]}this._moveRoute.list.splice(this._moveRouteIndex+1,0,cmd)}if(moved<tot){var cmd={};if(dir===0){cmd.code="fixedMoveBackward";
cmd.parameters=[this.moveTiles()]}else if(dir===5){cmd.code="fixedMoveForward";cmd.parameters=[this.moveTiles()]}else{cmd.code="fixedMove";cmd.parameters=[dir,this.moveTiles()]}this._moveRoute.list.splice(this._moveRouteIndex+1+i,0,cmd)}this._moveRoute.list.splice(this._moveRouteIndex,1);return true};Game_Character.prototype.subQMove2=function(settings){settings=QPlus.stringToAry(settings);var radian=settings[0];var dist=settings[1];var maxSteps=Math.floor(dist/this.moveTiles());var steps=0;var i;
for(i=0;i<maxSteps;i++){steps+=this.moveTiles();var cmd={};cmd.code="fixedRadianMove";cmd.parameters=[radian,this.moveTiles()];this._moveRoute.list.splice(this._moveRouteIndex+1,0,cmd)}if(steps<dist){var cmd={};cmd.code="fixedRadianMove";cmd.parameters=[radian,dist-steps];this._moveRoute.list.splice(this._moveRouteIndex+1+i,0,cmd)}this._moveRoute.list.splice(this._moveRouteIndex,1);return true};Game_Character.prototype.moveRandom=function(){var d=2+Math.randomInt(4)*2;if(this.canPixelPass(this._px,
this._py,d))this.moveStraight(d)};const Alias_Game_Character_moveTowardCharacter=Game_Character.prototype.moveTowardCharacter;Game_Character.prototype.moveTowardCharacter=function(character){if($gameMap.offGrid()){var dx=this.deltaPXFrom(character.cx());var dy=this.deltaPYFrom(character.cy());var radian=Math.atan2(-dy,-dx);if(radian<0)radian+=Math.PI*2;var oldSM=this._smartMove;if(oldSM<=1)this._smartMove=2;this.moveRadian(radian);this._smartMove=oldSM}else Alias_Game_Character_moveTowardCharacter.call(this,
character)};const Alias_Game_Character_moveAwayFromCharacter=Game_Character.prototype.moveAwayFromCharacter;Game_Character.prototype.moveAwayFromCharacter=function(character){if($gameMap.offGrid()){var dx=this.deltaPXFrom(character.cx());var dy=this.deltaPYFrom(character.cy());var radian=Math.atan2(dy,dx);if(radian<0)radian+=Math.PI*2;var oldSM=this._smartMove;if(oldSM<=1)this._smartMove=2;this.moveRadian(radian);this._smartMove=oldSM}else Alias_Game_Character_moveAwayFromCharacter.call(this,character)};
Game_Character.prototype.turnTowardCharacter=function(character){var dx=this.deltaPXFrom(character.cx());var dy=this.deltaPYFrom(character.cy());this.setRadian(Math.atan2(-dy,-dx))};Game_Character.prototype.turnTowardCharacterForward=function(character,dt){if(!character.isMoving())return this.turnTowardCharacter(character);dt=dt||1;var forward=character.forwardV();var x=character.cx()+forward.x*dt;var y=character.cy()+forward.y*dt;var dx=this.deltaPXFrom(x);var dy=this.deltaPYFrom(y);this.setRadian(Math.atan2(-dy,
-dx))};Game_Character.prototype.turnAwayFromCharacter=function(character){var dx=this.deltaPXFrom(character.cx());var dy=this.deltaPYFrom(character.cy());this.setRadian(Math.atan2(dy,dx))};Game_Character.prototype.deltaPXFrom=function(x){return $gameMap.deltaPX(this.cx(),x)};Game_Character.prototype.deltaPYFrom=function(y){return $gameMap.deltaPY(this.cy(),y)};Game_Character.prototype.pixelDistanceFrom=function(x,y){return $gameMap.distance(this.cx(),this.cy(),x,y)};Game_Character.prototype.centerWith=
function(character){var dx1=this.cx()-this._px;var dy1=this.cy()-this._py;var dx2=character.cx()-character._px;var dy2=character.cy()-character._py;var dx=dx2-dx1;var dy=dy2-dy1;return new Point(character._px+dx,character._py+dy)};Game_Character.prototype.centerWithCollider=function(collider){var dx1=this.cx()-this._px;var dy1=this.cy()-this._py;var dx2=collider.center.x-collider.x;var dy2=collider.center.y-collider.y;var dx=dx2-dx1;var dy=dy2-dy1;return new Point(collider.x+dx,collider.y+dy)};Game_Character.prototype.adjustPosition=
function(xf,yf){var dx=xf-this._px;var dy=yf-this._py;var radian=Math.atan2(dy,dx);var distX=Math.cos(radian)*this.moveTiles();var distY=Math.sin(radian)*this.moveTiles();var final=new Point(xf,yf);while(!this.canPixelPass(final.x,final.y,5,"collision")){final.x-=distX;final.y-=distY;dx=final.x-this._px;dy=final.y-this._py;if(Math.atan2(dy,dx)!==radian){final.x=this._px;final.y=this._py;break}}this.moveColliders(this._px,this._py);return final}})();
(()=>{const Alias_Game_Player_initMembers=Game_Player.prototype.initMembers;Game_Player.prototype.initMembers=function(){Alias_Game_Player_initMembers.call(this);this._lastMouseRequested=0;this._requestMouseMove=false;this._movingWithMouse=false;this._smartMove=QMovement.smartMove};Game_Player.prototype.defaultColliderConfig=()=>QMovement.playerCollider;const Alias_Game_Player_refresh=Game_Player.prototype.refresh;Game_Player.prototype.refresh=function(){this.reloadColliders();Alias_Game_Player_refresh.call(this)};
Game_Player.prototype.requestMouseMove=function(){var currFrame=Graphics.frameCount;var dt=currFrame-this._lastMouseRequested;if(dt>=5){this._lastMouseRequested=currFrame;this._requestMouseMove=true}else this._requestMouseMove=false};Game_Player.prototype.moveByMouse=function(x,y){if(this.triggerTouchAction()){this.clearMouseMove();return false}this._movingWithMouse=true;return true};Game_Player.prototype.clearMouseMove=function(){this._requestMouseMove=false;this._movingWithMouse=false;$gameTemp.clearDestination()};
Game_Player.prototype.moveByInput=function(){if(!this.startedMoving()&&this.canMove()){if(this.triggerAction())return;var direction=QMovement.diagonal?Input.dir8:Input.dir4;if(direction>0)this.clearMouseMove();else if($gameTemp.isDestinationValid()){if(!QMovement.moveOnClick){$gameTemp.clearDestination();return}this.requestMouseMove();if(this._requestMouseMove){var x=$gameTemp.destinationPX();var y=$gameTemp.destinationPY();return this.moveByMouse(x,y)}}if(Imported.QInput&&Input.preferGamepad()&&
$gameMap.offGrid())this.moveWithAnalog();else if([4,6].contains(direction))this.moveInputHorizontal(direction);else if([2,8].contains(direction))this.moveInputVertical(direction);else if([1,3,7,9].contains(direction)&&QMovement.diagonal)this.moveInputDiagonal(direction)}};Game_Player.prototype.moveInputHorizontal=function(dir){this.moveStraight(dir)};Game_Player.prototype.moveInputVertical=function(dir){this.moveStraight(dir)};Game_Player.prototype.moveInputDiagonal=function(dir){var diag={1:[4,2],
3:[6,2],7:[4,8],9:[6,8]};this.moveDiagonally(diag[dir][0],diag[dir][1])};Game_Player.prototype.moveWithAnalog=function(){var horz=Input._dirAxesA.x;var vert=Input._dirAxesA.y;if(horz===0&&vert===0)return;var radian=Math.atan2(vert,horz);radian+=radian<0?Math.PI*2:0;this.moveRadian(radian)};Game_Player.prototype.update=function(sceneActive){var lastScrolledX=this.scrolledX();var lastScrolledY=this.scrolledY();var wasMoving=this.isMoving();this.updateDashing();if(sceneActive)this.moveByInput();Game_Character.prototype.update.call(this);
this.updateScroll(lastScrolledX,lastScrolledY);this.updateVehicle();if(!this.startedMoving())this.updateNonmoving(wasMoving);this._followers.update()};Game_Player.prototype.updateNonmoving=function(wasMoving){if(!$gameMap.isEventRunning()){if(wasMoving){if(this._freqCount>=this.freqThreshold())$gameParty.onPlayerWalk();this.checkEventTriggerHere([1,2]);if($gameMap.setupStartingEvent())return}if(this.triggerAction())return;if(wasMoving){if(this._freqCount>=this.freqThreshold()){this.updateEncounterCount();
this._freqCount=0}}else if(!this.isMoving()&&!this._movingWithMouse)$gameTemp.clearDestination()}};Game_Player.prototype.updateDashing=function(){if(this.startedMoving())return;if(this.canMove()&&!this.isInVehicle()&&!$gameMap.isDashDisabled())this._dashing=this.isDashButtonPressed()||$gameTemp.isDestinationValid();else this._dashing=false};Game_Player.prototype.startMapEvent=function(x,y,triggers,normal){if(!$gameMap.isEventRunning()){var collider=this.collider("interaction");var x1=this._px;var y1=
this._py;collider.moveTo(x,y);var events=ColliderManager.getCharactersNear(collider,(chara)=>this.collidesWithEvent(chara,"interaction"));collider.moveTo(x1,y1);if(events.length===0){events=null;return}var cx=this.cx();var cy=this.cy();events.sort((a,b)=>a.pixelDistanceFrom(cx,cy)-b.pixelDistanceFrom(cx,cy));var event=events.shift();while(true){if(event.isTriggerIn(triggers)&&event.isNormalPriority()===normal)event.start();if(events.length===0||$gameMap.isAnyEventStarting())break;event=events.shift()}events=
null}};Game_Player.prototype.collidesWithEvent=function(event,type){if(event.constructor===Game_Event&&!event._erased)return event.collider("interaction").intersects(this.collider(type));return false};Game_Player.prototype.checkEventTriggerHere=function(triggers){if(this.canStartLocalEvents())this.startMapEvent(this.collider("interaction").x,this.collider("interaction").y,triggers,false)};Game_Player.prototype.checkEventTriggerThere=function(triggers,x2,y2){if(this.canStartLocalEvents()){var direction=
this.direction();var x1=this.collider("interaction").x;var y1=this.collider("interaction").y;x2=x2||$gameMap.roundPXWithDirection(x1,direction,this.moveTiles());y2=y2||$gameMap.roundPYWithDirection(y1,direction,this.moveTiles());this.startMapEvent(x2,y2,triggers,true);if(!$gameMap.isAnyEventStarting())return this.checkCounter(triggers)}};Game_Player.prototype.triggerTouchAction=function(){if($gameTemp.isDestinationValid()){var dist=this.pixelDistanceFrom($gameTemp.destinationPX(),$gameTemp.destinationPY());
if(dist<=QMovement.tileSize*1.5){var dx=$gameTemp.destinationPX()-this.cx();var dy=$gameTemp.destinationPY()-this.cy();if(Math.abs(dx)<this.moveTiles()/2&&Math.abs(dy)<this.moveTiles()/2)return false;var radian=Math.atan2(dy,dx);radian+=radian<0?2*Math.PI:0;var dir=this.radianToDirection(radian,true);var horz=dir;var vert=dir;if([1,3,7,9].contains(dir)){if(dir===1||dir===7)horz=4;if(dir===1||dir===3)vert=2;if(dir===3||dir===9)horz=6;if(dir===7||dir===9)vert=8}var x1=$gameMap.roundPXWithDirection(this._px,
horz,this.moveTiles());var y1=$gameMap.roundPYWithDirection(this._py,vert,this.moveTiles());this.startMapEvent(x1,y1,[0,1,2],true);if(!$gameMap.isAnyEventStarting()){if(this.checkCounter([0,1,2],$gameTemp.destinationPX(),$gameTemp.destinationPY())){this.clearMouseMove();this.setDirection(dir);return true}}else{this.clearMouseMove();this.setDirection(dir);return true}}}return false};Game_Player.prototype.checkCounter=function(triggers,x2,y2){var direction=this.direction();var x1=this._px;var y1=this._py;
x2=x2||$gameMap.roundPXWithDirection(x1,direction,this.moveTiles());y2=y2||$gameMap.roundPYWithDirection(y1,direction,this.moveTiles());var collider=this.collider("interaction");collider.moveTo(x2,y2);var counter;ColliderManager.getCollidersNear(collider,(tile)=>{if(!tile.isTile)return false;if(tile.isCounter&&tile.intersects(collider)){counter=tile;return"break"}return false});collider.moveTo(x1,y1);if(counter){if([4,6].contains(direction)){var dist=Math.abs(counter.center.x-collider.center.x);dist+=
collider.width}else if([8,2].contains(direction)){var dist=Math.abs(counter.center.y-collider.center.y);dist+=collider.height}var x3=$gameMap.roundPXWithDirection(x1,direction,dist);var y3=$gameMap.roundPYWithDirection(y1,direction,dist);return this.startMapEvent(x3,y3,triggers,true)}return false};Game_Player.prototype.airshipHere=()=>false;Game_Player.prototype.shipBoatThere=(x2,y2)=>false;Game_Player.prototype.moveStraight=function(d,dist){Game_Character.prototype.moveStraight.call(this,d,dist)};
Game_Player.prototype.moveDiagonally=function(horz,vert){Game_Character.prototype.moveDiagonally.call(this,horz,vert)}})();
(()=>{const Alias_Game_Event_clearPageSettings=Game_Event.prototype.clearPageSettings;Game_Event.prototype.clearPageSettings=function(){Alias_Game_Event_clearPageSettings.call(this);this._ignoreCharacters=[]};const Alias_Game_Event_setupPageSettings=Game_Event.prototype.setupPageSettings;Game_Event.prototype.setupPageSettings=function(){Alias_Game_Event_setupPageSettings.call(this);this.reloadColliders();this.initialPosition();this._typeRandomDir=null;this._typeTowardPlayer=null;var notes=this.notes(true);
var ignore=/<ignoreCharas:(.*?)>/i.exec(notes);this._ignoreCharacters=[];if(ignore)this._ignoreCharacters=ignore[1].split(",").map((s)=>QPlus.charaIdToId(s))};Game_Event.prototype.initialPosition=function(){var ox=/<ox[=|:](-?[0-9]+)>/i.exec(this.comments(true))||0;var oy=/<oy[=|:](-?[0-9]+)>/i.exec(this.comments(true))||0;if(ox)ox=Number(ox[1])||0;if(oy)oy=Number(oy[1])||0;var nextOffset=new Point(ox,oy);if(this._initialOffset){ox-=this._initialOffset.x;oy-=this._initialOffset.y}this._initialOffset=
nextOffset;this.setPixelPosition(this.px+ox,this.py+oy)};Game_Event.prototype.defaultColliderConfig=()=>QMovement.eventCollider;Game_Event.prototype.ignoreCharacters=function(type){var ignores=Game_CharacterBase.prototype.ignoreCharacters.call(this,type);return ignores.concat(this._ignoreCharacters)};Game_Event.prototype.updateStop=function(){if(this._locked){this._freqCount=this.freqThreshold();this.resetStopCount()}Game_Character.prototype.updateStop.call(this);if(!this.isMoveRouteForcing())this.updateSelfMovement()};
Game_Event.prototype.updateSelfMovement=function(){if(!this._locked&&this.isNearTheScreen())if(this._freqCount<this.freqThreshold())switch(this._moveType){case 1:this.moveTypeRandom();break;case 2:this.moveTypeTowardPlayer();break;case 3:this.moveTypeCustom();break}else if(this.checkStop(this.stopCountThreshold()))this._freqCount=0};Game_Event.prototype.moveTypeRandom=function(){if(this._freqCount===0||this._typeRandomDir===null)this._typeRandomDir=2*(Math.randomInt(4)+1);if(!this.canPixelPass(this._px,
this._py,this._typeRandomDir))this._typeRandomDir=2*(Math.randomInt(4)+1);this.moveStraight(this._typeRandomDir)};Game_Event.prototype.moveTypeTowardPlayer=function(){if(this.isNearThePlayer()){if(this._freqCount===0||this._typeTowardPlayer===null)this._typeTowardPlayer=Math.randomInt(6);switch(this._typeTowardPlayer){case 0:case 1:case 2:case 3:{this.moveTowardPlayer();break}case 4:{this.moveTypeRandom();break}case 5:{this.moveForward();break}}}else this.moveTypeRandom()};Game_Event.prototype.checkEventTriggerTouch=
function(x,y){if(!$gameMap.isEventRunning())if(this._trigger===2&&!this.isJumping()&&this.isNormalPriority()){var collider=this.collider("collision");var prevX=collider.x;var prevY=collider.y;collider.moveTo(x,y);var collided=false;ColliderManager.getCharactersNear(collider,(chara)=>{if(chara.constructor!==Game_Player)return false;collided=chara.collider("collision").intersects(collider);return"break"});collider.moveTo(prevX,prevY);if(collided){this._stopCount=0;this._freqCount=this.freqThreshold();
this.start()}}}})();
(()=>{Input.keyMapper[121]="f10";const Alias_Scene_Map_updateMain=Scene_Map.prototype.updateMain;Scene_Map.prototype.updateMain=function(){Alias_Scene_Map_updateMain.call(this);if($gameTemp.isPlaytest()&&Input.isTriggered("f10"))ColliderManager.toggle();ColliderManager.update()};Scene_Map.prototype.processMapTouch=function(){if(TouchInput.isTriggered()||this._touchCount>0)if(TouchInput.isPressed()){if(this._touchCount===0||this._touchCount>=20){var x=$gameMap.canvasToMapPX(TouchInput.x);var y=$gameMap.canvasToMapPY(TouchInput.y);
if(!$gameMap.offGrid()){var ox=x%QMovement.tileSize;var oy=y%QMovement.tileSize;x+=QMovement.tileSize/2-ox;y+=QMovement.tileSize/2-oy}$gameTemp.setPixelDestination(x,y)}this._touchCount++}else this._touchCount=0};Scene_Map.prototype.updateCallMenu=function(){if(this.isMenuEnabled()){if(this.isMenuCalled())this.menuCalling=true;if(this.menuCalling&&!$gamePlayer.startedMoving())this.callMenu()}else this.menuCalling=false}})();(()=>{const _CMFOLDER="img/collision/";const _SCANSIZE=4;ColliderManager.collisionMap=new Sprite;ColliderManager.collisionMap.bitmap=new Bitmap;const Alias_ColliderManager_clear=ColliderManager.clear;ColliderManager.clear=function(){Alias_ColliderManager_clear.call(this);this.clearCollisionMap();this.container.addChild(this.collisionMap)};ColliderManager.setCollisionMap=(collisionMap)=>{ColliderManager.collisionMap.bitmap=ImageManager.loadBitmap(_CMFOLDER,collisionMap)};ColliderManager.clearCollisionMap=
()=>{ColliderManager.collisionMap.bitmap=new Bitmap};const Alias_ColliderManager_update=ColliderManager.update;ColliderManager.update=function(){Alias_ColliderManager_update.call(this);this.updateCollisionMap()};ColliderManager.updateCollisionMap=function(){this.collisionMap.x=-$gameMap.displayX()*$gameMap.tileWidth();this.collisionMap.y=-$gameMap.displayY()*$gameMap.tileHeight()};const Alias_Game_Map_reloadTileMap=Game_Map.prototype.reloadTileMap;Game_Map.prototype.reloadTileMap=function(){Alias_Game_Map_reloadTileMap.call(this);
this.setupCollisionMap()};Game_Map.prototype.setupCollisionMap=function(){const cm=/<cm:(.*?)>/i.exec($dataMap.note);this.loadCollisionmap(cm?cm[1]:null)};Game_Map.prototype.loadCollisionmap=function(collisionMap){if(collisionMap){ColliderManager.setCollisionMap(collisionMap);this._hasCM=true}else{ColliderManager.clearCollisionMap();this._hasCM=false}};Game_Map.prototype.collisionMapPass=function(collider,dir,passableColors){if(!ColliderManager.collisionMap.bitmap.isReady())return false;if(collider.isCircle())return this.collisionMapCirclePass(collider,
dir,passableColors);else if(collider.isBox())return this.collisionMapBoxPass(collider,dir,passableColors);return false};Game_Map.prototype.insidePassableOnly=function(collider,passableColors){return this.collisionMapBoxPass(collider,"top",passableColors)&&this.collisionMapBoxPass(collider,"bottom",passableColors)};Game_Map.prototype.collisionMapBoxPass=function(collider,dir,passableColors){if(collider._radian!==0)return this.collisionMapPolyPass(collider,dir,passableColors);var edgePoints=collider.edge();
var edges={"top":{x1:edgePoints.x1,x2:edgePoints.x2,y1:edgePoints.y1,y2:edgePoints.y1},"bottom":{x1:edgePoints.x1,x2:edgePoints.x2,y1:edgePoints.y2,y2:edgePoints.y2},"left":{x1:edgePoints.x1,x2:edgePoints.x1,y1:edgePoints.y1,y2:edgePoints.y2},"right":{x1:edgePoints.x2,x2:edgePoints.x2,y1:edgePoints.y1,y2:edgePoints.y2}};var x1=Math.floor(edges[dir].x1);var x2=Math.floor(edges[dir].x2);var y1=Math.floor(edges[dir].y1);var y2=Math.floor(edges[dir].y2);for(var x=x1;x<=x2;){for(var y=y1;y<=y2;){if(!passableColors.contains(ColliderManager.collisionMap.bitmap.getColor(x,
y)))return false;y=Math.min(y2+1,y+_SCANSIZE)}x=Math.min(x2+1,x+_SCANSIZE)}return true};Game_Map.prototype.collisionMapCirclePass=(collider,dir,passableColors)=>{let s;let r2;let r1;switch(dir){case "bottom":{r1=Math.PI;r2=Math.PI*2;s=Math.PI/collider.width;break}case "left":{r1=Math.PI/2;r2=3*Math.PI/2;s=Math.PI/collider.height;break}case "right":{r1=-Math.PI/2;r2=Math.PI/2;s=Math.PI/collider.height;break}case "top":{r1=0;r2=Math.PI;s=Math.PI/collider.width;break}}let r3;while(r1<=r2){r3=r1+collider._radian;
const pos=collider.circlePosition(r3);const x=Math.floor(pos.x);const y=Math.floor(pos.y);if(!passableColors.contains(ColliderManager.collisionMap.bitmap.getColor(x,y)))return false;r1+=s*_SCANSIZE}return true};Game_Map.prototype.collisionMapPolyPass=function(collider,dir,passableColors){var points=collider._vertices.slice();if(dir==="top"||dir==="bottom"){var startPoint=this.collisionMapPoints(collider,dir,collider._xMin,0);var endPoint=this.collisionMapPoints(collider,dir,collider._xMax,0)}else{var startPoint=
this.collisionMapPoints(collider,dir,collider._yMin,1);var endPoint=this.collisionMapPoints(collider,dir,collider._yMax,1);var horz=true}var minIndex=collider._baseVertices.indexOf(startPoint);var maxIndex=collider._baseVertices.indexOf(endPoint);var endPoint=collider.vertices()[maxIndex];var firstHalf=points.splice(0,minIndex);points=points.concat(firstHalf);if(dir==="bottom"||dir==="left"){points.reverse();points.unshift(points.pop())}for(var i=0;i<points.length-1;i++){var x1=points[i].x;var y1=
points[i].y;var x2=points[i+1].x;var y2=points[i+1].y;var rad=Math.atan2(y1-y2,x2-x1);if(horz){var steps=Math.abs(y2-y1)/_SCANSIZE;var slope=(x2-x1)/steps;var inc=y1>y2?-1:1}else{var steps=Math.abs(x2-x1)/_SCANSIZE;var slope=(y2-y1)/steps;var inc=x1>x2?-1:1}var a1=a2=horz?y1:x1;while(a1-a2<=steps){if(!passableColors.contains(ColliderManager.collisionMap.bitmap.getColor(x1,y1)))return false;a1++;y1+=horz?inc:slope;x1+=horz?slope:inc}if(x2===endPoint.x&&y2===endPoint.y)break}return true};Game_Map.prototype.collisionMapPoints=
(collider,dir,value,axis)=>{var point=collider._baseVertices.filter((p)=>axis===0?p.x===value:p.y===value);point.sort((a,b)=>{if(axis===0)if(dir==="top")return a.y-b.y;else return b.y-a.y;else if(dir==="left")return a.x-b.x;else return b.x-a.x});point=point[0];for(var i=0;i<collider._baseVertices.length;i++)if(collider._baseVertices[i].x===point.x&&collider._baseVertices[i].y===point.y)return collider._baseVertices[i]};const Alias_Game_CharacterBase_collisionCheck=Game_CharacterBase.prototype.collisionCheck;
Game_CharacterBase.prototype.collisionCheck=function(x,y,dir,dist,type){var canPass=Alias_Game_CharacterBase_collisionCheck.call(this,x,y,dir,dist,type);if(this.isThrough()||this.isDebugThrough())return true;if(!canPass)return false;return!this.collideWithCollisionMap(type,dir)};Game_CharacterBase.prototype.collideWithCollisionMap=function(type,dir){if(!$gameMap._hasCM)return false;var collider=this.collider(type);var edge={2:"bottom",4:"left",6:"right",8:"top"};var passableColors=this.passableColors();
if(dir===5){if(!$gameMap.collisionMapPass(collider,"top",passableColors)||!$gameMap.collisionMapPass(collider,"bottom",passableColors)||!$gameMap.collisionMapPass(collider,"left",passableColors)||!$gameMap.collisionMapPass(collider,"right",passableColors))return true}else return!$gameMap.collisionMapPass(collider,edge[dir],passableColors);return false};const Alias_Bitmap_initialize=Bitmap.prototype.initialize;Bitmap.prototype.initialize=function(width,height){Alias_Bitmap_initialize.call(this,width,
height);this._pixelData=[]};Bitmap.prototype._setPixelData=function(){this._pixelData=this._context.getImageData(0,0,this.width,this.height).data};Bitmap.prototype.getColor=function(x,y){if(this._pixelData.length===0)this._setPixelData();x=Math.floor(x)||0;y=Math.floor(y)||0;if(x>=this.width||x<0||y>=this.height||y<0||this._pixelData.length===0)return"#00000000";const i=x*4+y*4*this.width;let result="#";if(this._pixelData[i+3]===0)return"#00000000";for(let c=0;c<3;c++)result+=this._pixelData[i+c].toString(16).padZero(2);
return result}})();(()=>{const Alias_Game_Interpreter_pluginCommand=Game_Interpreter.prototype.pluginCommand;Game_Interpreter.prototype.pluginCommand=function(command,args){if(command.toLowerCase()==="qaudio")return this.qAudioCommand(QPlus.makeArgs(args));Alias_Game_Interpreter_pluginCommand.call(this,command,args)};Game_Interpreter.prototype.qAudioCommand=function(args){const cmd=args[0].toLowerCase();if(cmd==="loop"||cmd==="play")return this.qAudioCommandOld(cmd,args);let id;if(cmd==="start"){let name=args[1];let args2=
args.slice(2);let loop=!!QPlus.getArg(args2,/^loop$/i);let dontPan=!!QPlus.getArg(args2,/^noPan$/i);id=QPlus.getArg(args2,/^id(.+)/i)||"*";id=!id||id==="*"?this.getUniqueQAudioId():id;let type=QPlus.getArg(args2,/^(bgm|bgs|me|se)$/i)||"bgm";type=type.toLowerCase();let max=Number(QPlus.getArg(args2,/^max(\d+)/i));if(max===null)max=100;max=Number(max)/100;let radius=QPlus.getArg(args2,/^radius(\d+)/i);radius=radius===null?5:Number(radius);let bindTo=QPlus.getArg(args2,/^bindTo(.+)/i);if(bindTo)if(bindTo.toLowerCase()===
"this")bindTo=this.character(0).charaId();let x=QPlus.getArg(args2,/^x(\d+)/i);x=x===null?$gamePlayer.x:Number(x);let y=QPlus.getArg(args2,/^y(\d+)/i);y=y===null?$gamePlayer.y:Number(y);let fadein=QPlus.getArg(args2,/^fadein(\d+)/i);fadein=fadein===null?0:Number(fadein);let pitch=QPlus.getArg(args2,/^pitch(\d+)/i);pitch=pitch===null?100:Number(pitch);const audio={name:name,volume:100,pitch:pitch/100,pan:0};AudioManager.playQAudio(id,audio,{type:type,loop:loop,maxVolume:max,radius:radius,x:x,y:y,bindTo:bindTo,
doPan:!dontPan,fadeIn:fadein});return}if(cmd==="stop"){id=args[1];let fadeOut=Number(QPlus.getArg(args,/^fadeout(\d+)/i));if(id==="all")if(fadeOut)AudioManager.fadeOutAllQAudio(fadeOut);else AudioManager.stopAllQAudio();else if(fadeOut)AudioManager.fadeOutQAudio(id,fadeOut);else AudioManager.stopQAudio(id);return}if(cmd==="clear")return AudioManager.stopAllQAudio();if(cmd==="save")return AudioManager.saveQAudios();if(cmd==="restore")return AudioManager.restoreQAudios()};Game_Interpreter.prototype.qAudioCommandOld=
function(cmd,args){const loop=cmd==="loop";let id=args[1]==="*"?this.getUniqueQAudioId():args[1];const type=args[2].toLowerCase();const audio={name:args[3],volume:100,pitch:0,pan:0};let max=Number(args[4])/100;let r=Number(args[5]);let x=Number(args[6]);let y=Number(args[7]);let bindTo=null;if(!y&&y!==0){if(x===0)bindTo=0;else bindTo=$gameMap.event(x).charaId();x=null;y=null}AudioManager.playQAudio(id,audio,{type:type,loop:loop,maxVolume:max,radius:r,x:x,y:y,bindTo:bindTo})};Game_Interpreter.prototype.getUniqueQAudioId=
()=>{var id="*0";var counter=0;var newId=false;while(!newId){if(AudioManager._QAudioBuffers.length===0){newId=true;break}counter++;id=`*${counter}`;var j=0;for(var i=0;i<AudioManager._QAudioBuffers.length;i++)if(AudioManager._QAudioBuffers[i].uid!==id)j++;newId=j===i}return id};AudioManager._QAudioBuffers=[];AudioManager._savedQAudios=[];AudioManager.playQAudio=function(id,audio,options){if(audio.name){this._QAudioBuffers=this._QAudioBuffers.filter((b)=>{if(b.uid===id){b.stop();b=null;return false}return true});
var buffer=this.createBuffer(options.type,audio.name);if(options.bindTo!==undefined&&options.bindTo!==null)buffer.bindTo=options.bindTo;else{buffer.mapX=options.x;buffer.mapY=options.y}buffer.uid=id;buffer.type=options.type;buffer.radius=options.radius;buffer.maxVolume=options.maxVolume;buffer.doPan=options.doPan;buffer.rVolume=1;buffer.fadingIn=null;buffer.pitch=audio.pitch;if(options.fadeIn){buffer.rVolume=0;buffer.fadingIn={t:0,dur:options.fadeIn*60}}this.updateQAudioDistance(buffer);buffer.play(options.loop,
0);if(!options.loop)buffer.addStopListener(this.stopQAudio.bind(this,id));this._QAudioBuffers.push(buffer);$gameSystem._QAudios.push({id:id,audio:audio,options:options})}};AudioManager.stopQAudio=function(id){var buffers=this._QAudioBuffers;for(var i=buffers.length-1;i>=0;i--)if(buffers[i]&&buffers[i].uid===id){buffers[i].stop();buffers[i]=null;buffers.splice(i,1);$gameSystem._QAudios.splice(i,1);break}};AudioManager.stopAllQAudio=function(){let buffers=this._QAudioBuffers;for(let buffers of this._QAudioBuffers)if(buffers){if(buffers._stopListeners)buffers._stopListeners.length=
0;buffers.stop();buffers=null}this._QAudioBuffers=[];if($gameSystem)$gameSystem._QAudios=[]};const Alias_AudioManager_stopAll=AudioManager.stopAll;AudioManager.stopAll=function(){Alias_AudioManager_stopAll.call(this);this.stopAllQAudio()};AudioManager.fadeOutQAudio=function(id,duration){let buffers=this._QAudioBuffers;for(let i=buffers.length-1;i>=0;i--)if(buffers[i]&&buffers[i].uid===id){buffers[i].fadeOut(duration);buffers[i]=null;buffers.splice(i,1);$gameSystem._QAudios.splice(i,1);break}};AudioManager.fadeOutAllQAudio=
function(duration){let buffers=this._QAudioBuffers;for(let i=buffers.length-1;i>=0;i--){buffers[i].fadeOut(duration);buffers[i]=null;buffers.splice(i,1);$gameSystem._QAudios.splice(i,1)}};AudioManager.saveQAudios=function(){this._savedQAudios=$gameSystem._QAudios.clone()};AudioManager.restoreQAudios=function(){for(let i=0;i<this._savedQAudios.length;i++){let qAudio=this._savedQAudios[i];this.playQAudio(qAudio.id,qAudio.audio,qAudio.options)}this._savedQAudios=[]};AudioManager.checkForQAudios=function(){if(this._QAudioBuffers.length!==
$gameSystem._QAudios.length){let newAudios=$gameSystem._QAudios.clone();this.stopAllQAudio();for(let i=0;i<newAudios.length;i++){let qAudio=newAudios[i];this.playQAudio(qAudio.id,qAudio.audio,qAudio.options)}}};AudioManager.updateQAudio=function(){this.checkForQAudios();let buffers=this._QAudioBuffers;for(let i=buffers.length-1;i>=0;i--){if(!buffers[i]._autoPlay&&!buffers[i].isPlaying()){buffers[i].stop();buffers.splice(i,1);$gameSystem._QAudios.splice(i,1);continue}if(buffers[i].fadingIn)this.updateQAudioFadeIn(buffers[i]);
this.updateQAudioDistance(buffers[i])}};AudioManager.updateQAudioFadeIn=(buffer)=>{buffer.fadingIn.t++;buffer.rVolume=buffer.fadingIn.t/buffer.fadingIn.dur;if(buffer.fadingIn.t===buffer.fadingIn.dur)buffer.fadingIn=null};AudioManager.updateQAudioDistance=function(buffer){let x1=$gamePlayer._realX;let y1=$gamePlayer._realY;let x2=buffer.mapX;let y2=buffer.mapY;if(buffer.bindTo!==undefined){var chara=QPlus.getCharacter(buffer.bindTo);x2=chara._realX;y2=chara._realY}if(buffer.cached)if(buffer.cached.x1===
x1&&buffer.cached.y1===y1&&(buffer.cached.x2===x2&&buffer.cached.y2===y2)&&buffer.cached.rV===buffer.rVolume)return;let radius=buffer.radius;let radian=Math.atan2(y2-y1,x2-x1);let dx=$gameMap.deltaX(x2,x1);let dy=$gameMap.deltaY(y2,y1);let dist=Math.sqrt(dx*dx+dy*dy);let volume=Math.max((radius-dist)/radius,0);let typeVolume=100;if(buffer.type==="bgm")typeVolume=this._bgmVolume;if(buffer.type==="bgs")typeVolume=this._bgsVolume;if(buffer.type==="me")typeVolume=this._meVolume;if(buffer.type==="se")typeVolume=
this._seVolume;volume*=buffer.maxVolume*(typeVolume/100);buffer.volume=volume*buffer.rVolume;if(buffer.doPan){var pan=Math.cos(radian);if(x2===x1&&y2===y1)pan=0;buffer.pan=pan}buffer.cached={x1:x1,x2:x2,y1:y1,y2:y2,rV:buffer.rVolume}};const Alias_Scene_Base_fadeOutAll=Scene_Base.prototype.fadeOutAll;Scene_Base.prototype.fadeOutAll=function(){Alias_Scene_Base_fadeOutAll.call(this);let time=this.slowFadeSpeed()/60;AudioManager.fadeOutAllQAudio(time)};const Alias_Scene_Title_playTitleMusic=Scene_Title.prototype.playTitleMusic;
Scene_Title.prototype.playTitleMusic=function(){Alias_Scene_Title_playTitleMusic.call(this);AudioManager.stopAllQAudio()};const Alias_Scene_Map_update=Scene_Map.prototype.update;Scene_Map.prototype.update=function(){Alias_Scene_Map_update.call(this);AudioManager.updateQAudio()};const Alias_Scene_Map_stopAudioOnBattleStart=Scene_Map.prototype.stopAudioOnBattleStart;Scene_Map.prototype.stopAudioOnBattleStart=function(){Alias_Scene_Map_stopAudioOnBattleStart.call(this);AudioManager.saveQAudios();AudioManager.stopAllQAudio()};
const Alias_BattleManager_replayBgmAndBgs=BattleManager.replayBgmAndBgs;BattleManager.replayBgmAndBgs=function(){Alias_BattleManager_replayBgmAndBgs.call(this);AudioManager.restoreQAudios()};const Alias_Game_Map_setup=Game_Map.prototype.setup;Game_Map.prototype.setup=function(mapId){AudioManager.stopAllQAudio();Alias_Game_Map_setup.call(this,mapId)};const Alias_Game_System_initialize=Game_System.prototype.initialize;Game_System.prototype.initialize=function(){Alias_Game_System_initialize.call(this);
this._QAudios=[]}})();(()=>{const _OFFSET=.5;const _CAMERAOX=0;const _CAMERAOY=0;const Alias_Game_Interpreter_pluginCommand=Game_Interpreter.prototype.pluginCommand;Game_Interpreter.prototype.pluginCommand=function(command,args){if(command.toLowerCase()==="qcamera")return this.qCameraCommand(QPlus.makeArgs(args));Alias_Game_Interpreter_pluginCommand.call(this,command,args)};Game_Interpreter.prototype.qCameraCommand=function(args){let frames;let chara;let speed;const cmd=args[0].toLowerCase();const args2=args.slice(1);
if(cmd==="scroll"){const x=Number(QPlus.getArg(args2,/^x(-?\d+)/i))||0;const y=Number(QPlus.getArg(args2,/^y(-?\d+)/i))||0;speed=Number(QPlus.getArg(args2,/^speed(\d+)/i))||4;frames=QPlus.getArg(args2,/^frames(\d+)/i)||null;if(!$gameMap.isScrolling())this.setWaitMode("scroll");$gameMap.startQScroll(x,y,speed,frames)}if(cmd==="scrollto"){if(args2[0].toLowerCase()==="this")chara=this.character(0);else chara=QPlus.getCharacter(args2[0]);speed=Number(QPlus.getArg(args2,/^speed(\d+)/i))||4;frames=Number(QPlus.getArg(args2,
/^frames(\d+)/i))||null;if(chara){if(!$gameMap.isScrolling())this.setWaitMode("scroll");$gameMap.scrollTo(chara,speed,frames)}}if(cmd==="focus"){if(args2[0].toLowerCase()==="this")chara=this.character(0);else chara=QPlus.getCharacter(args2[0]);speed=Number(QPlus.getArg(args2,/^speed(\d+)/i))||null;frames=Number(QPlus.getArg(args2,/^frames(\d+)/i))||15;if(chara)$gameMap.focusOn(chara,speed,frames)}if(cmd==="bars"){const height=Number(QPlus.getArg(args2,/^height(\d+)/i));frames=Number(QPlus.getArg(args2,
/^frames(\d+)/i));$gameMap.requestBars(height,frames)}};Game_Map.prototype.requestBars=function(height,frames){this._requestingBars={height:height||0,frames:frames||1}};const Alias_Game_Map_setupScroll=Game_Map.prototype.setupScroll;Game_Map.prototype.setupScroll=function(){Alias_Game_Map_setupScroll.call(this);this._scrollTarget=$gamePlayer.charaId();this._scrollFrames=null;this._scrollRadian=null};const Alias_Game_Map_startScroll=Game_Map.prototype.startScroll;Game_Map.prototype.startScroll=function(direction,
distance,speed){Alias_Game_Map_startScroll.call(this,direction,distance,speed);this._scrollFrames=null;this._scrollRadian=null};Game_Map.prototype.startQScroll=function(distanceX,distanceY,speed,frames){if(Math.abs(distanceX*this.tileWidth())<1)distanceX=0;if(Math.abs(distanceY*this.tileHeight())<1)distanceY=0;var directionX=distanceX>0?6:distanceX<0?4:0;var directionY=distanceY>0?2:distanceY<0?8:0;this._scrollDirection=[directionX,directionY];this._scrollRest=Math.sqrt(distanceX*distanceX+distanceY*
distanceY);this._scrollDistance=this._scrollRest;this._scrollSpeed=speed||null;this._scrollFrames=frames||null;this._scrollRadian=Math.atan2(distanceY,distanceX)};Game_Map.prototype.scrollTo=function(chara,speed,frames){var centerX=this.displayCenterX();var centerY=this.displayCenterY();var distanceX=chara._realX+.5-centerX;var distanceY=chara._realY+.5-centerY;distanceX=Math.floor(distanceX*this.tileWidth())/this.tileWidth();distanceY=Math.floor(distanceY*this.tileHeight())/this.tileHeight();if(Math.abs(distanceX)>=
this.width()-1)distanceX-=this.width()*Math.sign(distanceX);if(Math.abs(distanceY)>=this.height()-1)distanceY-=this.height()*Math.sign(distanceY);this.startQScroll(distanceX,distanceY,speed,frames)};Game_Map.prototype.focusOn=function(target,speed,frames){this.scrollTo(target,speed,frames||15);this._scrollTarget=target.charaId()};const Alias_Game_Map_scrollDistance=Game_Map.prototype.scrollDistance;Game_Map.prototype.scrollDistance=function(){if(this._scrollFrames!==null)return Math.abs(this._scrollDistance/
this._scrollFrames);return Alias_Game_Map_scrollDistance.call(this)};Game_Map.prototype.scrollDistanceX=function(){return Math.abs(this.scrollDistance()*Math.cos(this._scrollRadian))};Game_Map.prototype.scrollDistanceY=function(){return Math.abs(this.scrollDistance()*Math.sin(this._scrollRadian))};const Alias_Game_Map_displayX=Game_Map.prototype.displayX;Game_Map.prototype.displayX=function(){var x=Alias_Game_Map_displayX.call(this);x+=_CAMERAOX/this.tileWidth();return Math.round(x*this.tileWidth())/
this.tileWidth()};const Alias_Game_Map_displayY=Game_Map.prototype.displayY;Game_Map.prototype.displayY=function(){var y=Alias_Game_Map_displayY.call(this);y+=_CAMERAOY/this.tileHeight();return Math.round(y*this.tileHeight())/this.tileHeight()};Game_Map.prototype.displayCenterX=function(){var half=this.screenTileX()/2;var x=this.displayX()+half;x-=_CAMERAOX/this.tileWidth();x=this.roundX(x);return Math.round(x*this.tileWidth())/this.tileWidth()};Game_Map.prototype.displayCenterY=function(){var half=
this.screenTileY()/2;var y=this.displayY()+half;y-=_CAMERAOY/this.tileHeight();y=this.roundY(y);return Math.round(y*this.tileHeight())/this.tileHeight()};const Alias_Game_Map_parallaxOx=Game_Map.prototype.parallaxOx;Game_Map.prototype.parallaxOx=function(){var ox=Alias_Game_Map_parallaxOx.call(this);return ox+_CAMERAOX};const Alias_Game_Map_parallaxOy=Game_Map.prototype.parallaxOy;Game_Map.prototype.parallaxOy=function(){var oy=Alias_Game_Map_parallaxOy.call(this);return oy+_CAMERAOY};Game_Map.prototype._setDisplayPos=
(x,y)=>{};Game_Map.prototype.adjustX=function(x){if(this.isLoopHorizontal()&&x<this.displayX()-(this.width()-this.screenTileX())/2)return x-this.displayX()+$dataMap.width;else return x-this.displayX()};Game_Map.prototype.adjustY=function(y){if(this.isLoopVertical()&&y<this.displayY()-(this.height()-this.screenTileY())/2)return y-this.displayY()+$dataMap.height;else return y-this.displayY()};Game_Map.prototype.canvasToMapX=function(x){var tileWidth=this.tileWidth();var originX=this.displayX()*tileWidth;
var mapX=Math.floor((originX+x)/tileWidth);return this.roundX(mapX)};Game_Map.prototype.canvasToMapY=function(y){var tileHeight=this.tileHeight();var originY=this.displayY()*tileHeight;var mapY=Math.floor((originY+y)/tileHeight);return this.roundY(mapY)};const Alias_Game_Map_doScroll=Game_Map.prototype.doScroll;Game_Map.prototype.doScroll=function(direction,distance){if(direction.constructor===Array){if(direction[0]===4)this.scrollLeft(this.scrollDistanceX());else if(direction[0]===6)this.scrollRight(this.scrollDistanceX());
if(direction[1]===2)this.scrollDown(this.scrollDistanceY());else if(direction[1]===8)this.scrollUp(this.scrollDistanceY())}else Alias_Game_Map_doScroll.call(this,direction,distance)};const Alias_Game_CharacterBase_setPosition=Game_CharacterBase.prototype.setPosition;Game_CharacterBase.prototype.setPosition=function(x,y){Alias_Game_CharacterBase_setPosition.call(this,x,y);this._lastX=this._realX;this._lastY=this._realY};const Alias_Game_CharacterBase_copyPosition=Game_CharacterBase.prototype.copyPosition;
Game_CharacterBase.prototype.copyPosition=function(character){Alias_Game_CharacterBase_copyPosition.call(this,character);this._lastX=this._realX;this._lastY=this._realY};const Alias_Game_CharacterBase_update=Game_CharacterBase.prototype.update;Game_CharacterBase.prototype.update=function(){var lastScrolledX=this.scrolledX();var lastScrolledY=this.scrolledY();Alias_Game_CharacterBase_update.call(this);if($gameMap._scrollTarget===this.charaId())if(_OFFSET===0)this.updateNormalScroll(lastScrolledX,lastScrolledY);
else this.updateQScroll()};Game_CharacterBase.prototype.updateQScroll=function(){if($gameMap.isScrolling())return;var x1=this._lastX;var y1=this._lastY;var x2=this._realX;var y2=this._realY;var dx=$gameMap.deltaX(x2,x1);var dy=$gameMap.deltaY(y2,y1);if(dx!==0||dy!==0){this._lastX=x2;this._lastY=y2;var frames=_OFFSET/.0625;$gameMap.scrollTo(this,null,Math.round(frames)||1)}};Game_CharacterBase.prototype.updateNormalScroll=function(lastScrolledX,lastScrolledY){var x1=lastScrolledX;var y1=lastScrolledY;
var x2=this.scrolledX();var y2=this.scrolledY();if(y2>y1&&y2>this.centerY())$gameMap.scrollDown(y2-y1);if(x2<x1&&x2<this.centerX())$gameMap.scrollLeft(x1-x2);if(x2>x1&&x2>this.centerX())$gameMap.scrollRight(x2-x1);if(y2<y1&&y2<this.centerY())$gameMap.scrollUp(y1-y2)};Game_Player.prototype.updateScroll=(lastScrolledX,lastScrolledY)=>{};Game_Player.prototype.center=function(x,y){return $gameMap.scrollTo(this,null,1)};const Alias_Spriteset_Map_createUpperLayer=Spriteset_Map.prototype.createUpperLayer;
Spriteset_Map.prototype.createUpperLayer=function(){this.createBars();Alias_Spriteset_Map_createUpperLayer.call(this)};Spriteset_Map.prototype.createBars=function(){this._bars=new Sprite_Bars;this.addChild(this._bars)};function Sprite_Bars(){this.initialize.apply(this,arguments)}Sprite_Bars.prototype=Object.create(Sprite.prototype);Sprite_Bars.prototype.constructor=Sprite_Base;Sprite_Bars.prototype.initialize=function(){Sprite.prototype.initialize.call(this);this.bitmap=new Bitmap(Graphics.width,
Graphics.height);this.x=Graphics.width/2;this.y=Graphics.height/2;this.anchor.x=.5;this.anchor.y=.5;this._barHeight=0;this._newBarHeight=0;this._barSpeed=0};Sprite_Bars.prototype.update=function(){Sprite.prototype.update.call(this);if($gameMap._requestingBars)this.startBar();if(this._barHeight!==this._newBarHeight){if(this._newBarHeight>this._barHeight)this._barHeight=Math.min(this._barHeight+this._barSpeed,this._newBarHeight);else if(this._newBarHeight<this._barHeight)this._barHeight=Math.max(this._barHeight-
this._barSpeed,this._newBarHeight);this.drawBar()}};Sprite_Bars.prototype.startBar=function(){this._newBarHeight=$gameMap._requestingBars.height;var dh=Math.abs(this._newBarHeight-this._barHeight);this._barSpeed=dh/$gameMap._requestingBars.frames;$gameMap._requestingBars=null};Sprite_Bars.prototype.drawBar=function(){this.bitmap.clear();this.bitmap.fillRect(0,0,Graphics.width,this._barHeight,"#000000");var y=Graphics.height-this._barHeight;this.bitmap.fillRect(0,y,Graphics.width,this._barHeight,"#000000")}})();(function(){function QPathfind(){this.initialize.apply(this,arguments)}const _PARAMS={"Diagonals":false,"Any Angle":true,"Intervals":100,"Smart Wait":60,"Dash on Mouse":false};let _DIAGONALS=_PARAMS["Diagonals"];let _INTERVALS=_PARAMS["Intervals"];let _SMARTWAIT=_PARAMS["Smart Wait"];let _DASHONMOUSE=_PARAMS["Dash on Mouse"];let _ANYANGLE=_PARAMS["Any Angle"];if(_ANYANGLE&&Imported.QMovement)_DIAGONALS=false;var _DEFAULTOPTIONS={smart:0,chase:undefined,breakable:false,earlyEnd:true,adjustEnd:false,
towards:false};let _SMARTOT=300;let _DEBUG=false;let _SMARTINTERVAL=false;QPathfind._pathfinders=0;QPathfind.prototype.initialize=function(charaId,endPoint,options){this.initMembers(charaId,endPoint,options);this.beforeStart();this.update();QPathfind._pathfinders++};QPathfind.prototype.initMembers=function(charaId,endPoint,options){this._charaId=charaId;this.options=Object.assign({},_DEFAULTOPTIONS,options);if(this.options.towards){this.options.earlyEnd=false;this.options.adjustEnd=false}if(options.chase!==
undefined){var chasing=QPlus.getCharacter(options.chase);if(!chasing)return this.character().clearPathfind();if(Imported.QMovement)endPoint=new Point(chasing.px,chasing.py);else endPoint=new Point(chasing.x,chasing.y)}var startPoint;if(Imported.QMovement){this._mapWidth=$gameMap.width()*QMovement.tileSize;startPoint=new Point(this.character().px,this.character().py)}else{this._mapWidth=$gameMap.width();startPoint=new Point(this.character().x,this.character().y)}this._startNode=this.node(null,startPoint);
this._startNode.visited=true;this._endNode=this.node(null,endPoint);this._originalEnd=this.node(null,endPoint);this._openNodes=[this._startNode];this._grid={};this._grid[this._startNode.value]=this._startNode;this._closed={};this._current=null;this._completed=false;this._lastRan=0;this._tick=0;this._forceReq=false;if(this.options.smart>1)this._smartTime=_SMARTWAIT+Math.randomIntBetween(0,10);this._intervals=_INTERVALS};QPathfind.prototype.beforeStart=function(){if(_DEBUG)console.time("Pathfind");
var x=this._endNode.x;var y=this._endNode.y;var canPass=true;if(Imported.QMovement)canPass=this.character().canPixelPass(x,y,5,null,"_pathfind");else canPass=this.character().canPass(x,y,5);if(!canPass&&this.options.adjustEnd)canPass=this.adjustEndNode();if(!canPass&&this.options.earlyEnd)this.onFail();return canPass};QPathfind.prototype.adjustEndNode=function(){var x1=this._endNode.x;var y1=this._endNode.y;var x2=x1;var y2=y1;var steps=0;var horz=0;var vert=0;var maxDist=Imported.QMovement?QMovement.tileSize:
1;var neighbors=[];var dirs=_DIAGONALS?9:5;for(let i=1;i<dirs;i++){if(i<5)horz=vert=i*2;else{horz=i===5||i===6?4:6;vert=i===5||i===7?2:8}x2=x1;y2=y1;steps=0;if(Imported.QMovement)while(!this.character().canPixelPass(x2,y2,5,null,"_pathfind")){x2=$gameMap.roundPXWithDirection(x2,horz,this.character().moveTiles());y2=$gameMap.roundPYWithDirection(y2,vert,this.character().moveTiles());steps+=this.character().moveTiles();if(steps>=maxDist)break}else{x2=$gameMap.roundXWithDirection(x1,horz);y2=$gameMap.roundYWithDirection(y1,
vert);if(!this.character().canPass(x2,y2,5))continue}if(Imported.QMovement&&!this.character().canPixelPass(x2,y2,5,null,"_pathfind"))continue;var distx1=Imported.QMovement?Math.abs(this.character().px-x2):Math.abs(this.character().x-x2);var distx2=Math.abs(x1-x2);var disty1=Imported.QMovement?Math.abs(this.character().py-y2):Math.abs(this.character().y-y2);var disty2=Math.abs(y1-y2);var score=this.heuristic(new Point(distx1,disty1),new Point(distx2,disty2));neighbors.push({x:x2,y:y2,score:score})}if(neighbors.length===
0)return false;neighbors.sort((a,b)=>a.score-b.score);this._endNode=this.node(null,new Point(neighbors[0].x,neighbors[0].y));return true};QPathfind.prototype.compress=function(){return{options:this._options,x:this._endNode.x,y:this._endNode.y}};QPathfind.prototype.update=function(){if(this._lastRan===Graphics.frameCount)return;else this._lastRan=Graphics.frameCount;if(this._completed&&this.options.smart>1)this.updateSmart();else if(!this._completed){var stepsPerFrame=this._intervals;if(this.options.towards)stepsPerFrame=
Math.min(stepsPerFrame,100);var ti;if(_SMARTINTERVAL){ti=Date.now();stepsPerFrame=2E4}for(let i=0;i<stepsPerFrame;i++){if(this.options.chase!==undefined){var chasing=QPlus.getCharacter(this.options.chase);var oldThrough=chasing._through;chasing.setThrough(true)}this.aStar();if(this.options.chase!==undefined)chasing.setThrough(oldThrough);if(this._completed)break;else if(this._openNodes.length===0){this.onFail();break}if(_SMARTINTERVAL){var dt=Date.now()-ti;if(i!==0&&dt>=16.67/(QPathfind._pathfinders+
1))break}}if(this.options.towards)this.onComplete()}};QPathfind.prototype.updateSmart=function(){this._tick++;var ot=0;if(!this._forceReq&&this.options.chase!==undefined){var chasing=QPlus.getCharacter(this.options.chase);var p1=new Point(chasing.x,chasing.y);var p2=new Point(this.character().x,this.character().y);var dist=this.heuristic(p1,p2);var range=5;if(dist>range)ot=_SMARTOT;if(!this.options.towards&&!this._failed)if(Imported.QMovement){if(this._endNode.x===chasing.px&&this._endNode.y===chasing.py)return}else if(this._endNode.x===
chasing.x&&this._endNode.y===chasing.y)return}if(this._tick>this._smartTime+ot)return this.character().restartPathfind()};QPathfind.prototype.requestRestart=function(ot){if(!this._completed)return;if(this.options.chase!==undefined){var chasing=QPlus.getCharacter(this.options.chase);if(!chasing)return this.character().clearPathfind();var dx=chasing.cx()-this.character().cx();var dy=chasing.cy()-this.character().cy();var radian=Math.atan2(dy,dx);var x2=this.character().px+Math.cos(radian)*this.character().moveTiles();
var y2=this.character().py+Math.sin(radian)*this.character().moveTiles();var colliderA=this.character().collider("collision");var colliderB=chasing.collider("collision");colliderA.moveTo(x2,y2);var collided=colliderA.intersects(colliderB);colliderA.moveTo(this.character().px,this.character().py);if(collided)return}ot=ot===undefined?0:ot;this._tick=this._smartTime-ot;this._forceReq=true};QPathfind.prototype.node=function(parent,point){return{parent:parent,visited:false,x:point.x,y:point.y,value:point.x+
point.y*this._mapWidth,f:0,g:0,h:0}};QPathfind.prototype.getNodeAt=function(current,x,y){var node;var val=x+y*this._mapWidth;if(this._grid[val])node=this._grid[val];else{node=this.node(current,new Point(x,y));this._grid[val]=node}return node};QPathfind.prototype.character=function(){return QPlus.getCharacter(this._charaId)};QPathfind.prototype.aStar=function(){var currI=0;var i;var j;this._current=this._openNodes[0];j=this._openNodes.length;for(i=0;i<j;i++)if(this._openNodes[i].f<this._current.f){this._current=
this._openNodes[i];currI=i}if(this._current.value===this._endNode.value)return this.onComplete();this._openNodes.splice(currI,1);this._closed[this._current.value]=true;var neighbors=this.findNeighbors(this._current);j=neighbors.length;for(i=0;i<j;i++){if(this._closed[neighbors[i].value])continue;var gScore=this._current.g+this.heuristic(this._current,neighbors[i]);if(!neighbors[i].visited){neighbors[i].visited=true;this._openNodes.push(neighbors[i])}else if(gScore>=neighbors[i].g)continue;neighbors[i].g=
gScore;neighbors[i].f=gScore+this.heuristic(neighbors[i],this._endNode);neighbors[i].parent=this._current}};QPathfind.prototype.findNeighbors=function(current){var chara=this.character();var x=current.x;var y=current.y;var xf=this._endNode.x;var yf=this._endNode.y;var neighbors=[];var stepDist=1;if(Imported.QMovement){stepDist=chara.moveTiles();var nearEnd=Math.abs(x-xf)<chara.optTiles()&&Math.abs(y-yf)<chara.optTiles();var tiles=nearEnd?chara.moveTiles():chara.optTiles()}var i;var j=!Imported.QMovement&&
_DIAGONALS?8:4;var dirs=[2,4,6,8,1,3,7,9];var diags={1:[4,2],3:[6,2],7:[4,8],9:[6,8]};for(i=0;i<j;i++){var dir=dirs[i];var horz=dirs[i];var vert=dirs[i];if(i>=4){horz=diags[dir][0];vert=diags[dir][1]}var passed=false;var x2;var y2;if(Imported.QMovement){x2=$gameMap.roundPXWithDirection(x,horz,tiles);y2=$gameMap.roundPYWithDirection(y,vert,tiles);passed=chara.canPixelPass(x,y,dir,tiles,"_pathfind");if(!passed&&tiles/2>chara.moveTiles()){x2=$gameMap.roundPXWithDirection(x,horz,tiles/2);y2=$gameMap.roundPYWithDirection(y,
vert,tiles/2);passed=chara.canPixelPass(x,y,dir,tiles/2,"_pathfind")}}else{x2=$gameMap.roundXWithDirection(x,horz);y2=$gameMap.roundYWithDirection(y,vert);if(i>=4)passed=chara.canPassDiagonally(x,y,horz,vert);else passed=chara.canPass(x,y,dir)}var val=x2+y2*this._mapWidth;if(passed||val===this._endNode.value){var node=this.getNodeAt(current,x2,y2);if(Imported.QMovement)if(Math.abs(x2-xf)<stepDist&&Math.abs(y2-yf)<stepDist)node.value=this._endNode.value;neighbors.push(node)}}return neighbors};QPathfind.prototype.onComplete=
function(){if(_DEBUG)console.timeEnd("Pathfind");QPathfind._pathfinders--;this._completed=true;this._failed=false;this._grid={};if(this.options.towards){var firstSteps=this.createFinalPath().slice(0,3);return this.character().startPathfind(firstSteps)}this.character().startPathfind(this.createFinalPath())};QPathfind.prototype.onFail=function(){if(_DEBUG)console.timeEnd("Pathfind");QPathfind._pathfinders--;this._completed=true;this._failed=true;this._grid={};if(this.options.towards)return this.onComplete();
if(this.options.chase!==undefined)return;this.character().clearPathfind()};QPathfind.prototype.createFinalPath=function(){var node=this._current;var path=[node];while(node.parent){var next=node.parent;if(_ANYANGLE&&$gameMap.offGrid())while(next.parent&&this.character().canPassToFrom(node.x,node.y,next.parent.x,next.parent.y,"_pathfind"))next=next.parent;else if(_DIAGONALS)while(next.parent){var dx=node.x-next.parent.x;var dy=node.y-next.parent.y;var rad=Math.atan2(dy,dx);rad+=rad<0?Math.PI*2:0;var deg=
Math.floor(rad*180/Math.PI);if([45,135,225,315].contains(deg)&&this.character().canPassToFrom(node.x,node.y,next.parent.x,next.parent.y,"_pathfind"))next=next.parent;else break}node=next;path.unshift(node)}return path};QPathfind.prototype.heuristic=(initial,final)=>{var dx=Math.abs(initial.x-final.x);var dy=Math.abs(initial.y-final.y);if(!_DIAGONALS)return dx+dy;else{var D=1;var D2=Math.sqrt(2);return D*(dx+dy)+(D2-2*D)*Math.min(dx,dy)}};QPathfind.pathToRoute=(chara,path)=>{var route={list:[],repeat:false,
skippable:false,wait:false};var current=path[0];var codes={2:1,4:2,6:3,8:4,1:5,3:6,7:7,9:8};for(let i=1;i<path.length;i++){if(!path[i])break;var sx=current.x-path[i].x;var sy=current.y-path[i].y;var dist;var dir;if(sx!==0&&sy!==0){var horz=sx>0?4:6;var vert=sy>0?8:2;if(horz===4&&vert===8)dir=7;if(horz===4&&vert===2)dir=1;if(horz===6&&vert===8)dir=9;if(horz===6&&vert===2)dir=3;dist=Math.abs(sx)}else if(sx!==0){dir=sx>0?4:6;dist=Math.abs(sx)}else if(sy!==0){dir=sy>0?8:2;dist=Math.abs(sy)}var command=
{};if(Imported.QMovement)if(_ANYANGLE&&$gameMap.offGrid()){var radian=Math.atan2(-sy,-sx);if(radian<0)radian+=Math.PI*2;dist=Math.sqrt(sx*sx+sy*sy);command.code=Game_Character.ROUTE_SCRIPT;command.parameters=[`qmove2(${radian},${dist})`]}else{command.code=Game_Character.ROUTE_SCRIPT;command.parameters=[`qmove(${dir},${dist})`]}else command.code=codes[dir];route.list.push(command);current=path[i]}route.list.push({code:0});return route};const Alias_Game_Interpreter_updateWaitMode=Game_Interpreter.prototype.updateWaitMode;
Game_Interpreter.prototype.updateWaitMode=function(){var waiting=false;if(this._waitMode==="pathfind"){waiting=this._character._pathfind||this._character._isPathfinding;if(!waiting)this._waitMode=""}return waiting||Alias_Game_Interpreter_updateWaitMode.call(this)};const Alias_Game_Interpreter_pluginCommand=Game_Interpreter.prototype.pluginCommand;Game_Interpreter.prototype.pluginCommand=function(command,args){if(command.toLowerCase()==="qpathfind")return this.qPathfindCommand(QPlus.makeArgs(args));
Alias_Game_Interpreter_pluginCommand.call(this,command,args)};Game_Interpreter.prototype.qPathfindCommand=function(args){var chara;if(args[0].toLowerCase()==="this")chara=this.character(0);else chara=QPlus.getCharacter(args[0]);if(!chara)return;var args2=args.slice(1);if(args2[0].toLowerCase()==="chase"){if(args2[1].toLowerCase()==="this")chara.initChase(this.character(0).charaId());else if(QPlus.getCharacter(args2[1]))chara.initChase(QPlus.getCharacter(args2[1]).charaId());return}if(args2[0].toLowerCase()===
"clear"){chara.clearPathfind();return}var x;var y;if(args2[0].toLowerCase()==="towards"){var chara2;if(args2[1].toLowerCase()==="this")chara2=this.character(0);else chara2=QPlus.getCharacter(args2[1]);if(Imported.QMovement){var pos=chara.centerWith(chara2);x=pos.x;y=pos.y}else{x=chara2.x;y=chara2.y}}else{x=QPlus.getArg(args2,/^x(\d+)/i);y=QPlus.getArg(args2,/^y(\d+)/i);if(Imported.QMovement){if(x===null)x=QPlus.getArg(args2,/^px(\d+)/i);else x=Number(x)*QMovement.tileSize;if(y===null)y=QPlus.getArg(args2,
/^py(\d+)/i);else y=Number(y)*QMovement.tileSize}}if(x===null&&y===null)return;chara.initPathfind(Number(x),Number(y),{smart:Number(QPlus.getArg(args2,/^smart(\d+)/i)),adjustEnd:true});var wait=QPlus.getArg(args2,/^wait$/i);if(wait){this._character=chara;this.setWaitMode("pathfind")}};const Alias_Game_System_onBeforeSave=Game_System.prototype.onBeforeSave;Game_System.prototype.onBeforeSave=function(){Alias_Game_System_onBeforeSave.call(this);$gameMap.compressPathfinders();QPathfind._needsUncompress=
true};const Alias_Game_System_onAfterLoad=Game_System.prototype.onAfterLoad;Game_System.prototype.onAfterLoad=function(){Alias_Game_System_onAfterLoad.call(this);QPathfind._needsUncompress=true};const Alias_Game_Map_update=Game_Map.prototype.update;Game_Map.prototype.update=function(sceneActive){Alias_Game_Map_update.call(this,sceneActive);if(QPathfind._needsUncompress){this.uncompressPathfinders();QPathfind._needsUncompress=false}};Game_Map.prototype.compressPathfinders=function(){for(let i=0;i<
this.events().length;i++){var event=this.events()[i];if(event._pathfind){event._compressedPathfind=event._pathfind.compress();event.clearPathfind()}}if($gamePlayer._pathfind){$gamePlayer._compressedPathfind=$gamePlayer._pathfind.compress();$gamePlayer.clearPathfind()}};Game_Map.prototype.uncompressPathfinders=function(){let old;for(let i=0;i<this.events().length;i++){var event=this.events()[i];if(event._compressedPathfind){old=event._compressedPathfind;event.initPathfind(old.x,old.y,old.options);
delete event._compressedPathfind}}if($gamePlayer._compressedPathfind){old=$gamePlayer._compressedPathfind;$gamePlayer.initPathfind(old.x,old.y,old.options);delete $gamePlayer._compressedPathfind}};const Alias_Game_CharacterBase_initMembers=Game_CharacterBase.prototype.initMembers;Game_CharacterBase.prototype.initMembers=function(){Alias_Game_CharacterBase_initMembers.call(this);this._pathfind=null;this._isPathfinding=false;this._isChasing=false};const Alias_Game_CharacterBase_update=Game_CharacterBase.prototype.update;
Game_CharacterBase.prototype.update=function(){Alias_Game_CharacterBase_update.call(this);if(this._pathfind)this._pathfind.update()};const Alias_Game_CharacterBase_setPosition=Game_CharacterBase.prototype.setPosition;Game_CharacterBase.prototype.setPosition=function(x,y){Alias_Game_CharacterBase_setPosition.call(this,x,y);if(this._pathfind)this.clearPathfind()};if(Imported.QMovement){const Alias_Game_CharacterBase_ignoreCharacters=Game_CharacterBase.prototype.ignoreCharacters;Game_CharacterBase.prototype.ignoreCharacters=
function(type){var ignores=Alias_Game_CharacterBase_ignoreCharacters.call(this,type);if(this._isChasing!==false&&type==="_pathfind")ignores.push(Number(this._isChasing));return ignores};Game_CharacterBase.prototype.optTiles=function(){if(!$gameMap.offGrid())return this.moveTiles();if(!this._optTiles){var w=Math.round(this.collider("collision").width);var h=Math.round(this.collider("collision").height);while(w%this.moveTiles()!==0){w--;if(w<=this.moveTiles())break}while(h%this.moveTiles()!==0){h--;
if(h<=this.moveTiles())break}this._optTiles=Math.max(Math.min(w,h),this.moveTiles())}return this._optTiles};const Alias_Game_CharacterBase_setupColliders=Game_CharacterBase.prototype.setupColliders;Game_CharacterBase.prototype.setupColliders=function(){Alias_Game_CharacterBase_setupColliders.call(this);var collider=this.collider("collision");this._colliders["_pathfind"]=JsonEx.parse(JsonEx.stringify(collider));this._optTiles=null}}Game_Character.prototype.initPathfind=function(x,y,options){if(!this.isSamePathfind(x,
y,options))return;if(this._isPathfinding)this.clearPathfind();options=options||{};this._isChasing=options.chase!==undefined?options.chase:false;this._pathfind=new QPathfind(this.charaId(),new Point(x,y),options)};Game_Character.prototype.initChase=function(charaId){if(this.charaId()===charaId)return;if(!QPlus.getCharacter(charaId))return;if(this._isChasing===charaId)return;this.initPathfind(0,0,{smart:2,chase:charaId,adjustEnd:true})};Game_Character.prototype.isSamePathfind=function(x,y,options){if(!this._pathfind)return true;
if(options.chase!==undefined)return options.chase!==this._isChasing;var oldX1=this._pathfind._originalEnd.x;var oldY1=this._pathfind._originalEnd.y;var oldX2=this._pathfind._endNode.x;var oldY2=this._pathfind._endNode.y;return!(x===oldX1&&y===oldY1||x===oldX2&&y===oldY2)};Game_Character.prototype.restartPathfind=function(){if(!this._pathfind._completed)return;var x=this._pathfind._endNode.x;var y=this._pathfind._endNode.y;this._isPathfinding=false;if(this._moveRoute)this.processRouteEnd();var options=
this._pathfind.options;this._isChasing=options.chase!==undefined?options.chase:false;this._pathfind=new QPathfind(this.charaId(),new Point(x,y),options)};Game_Character.prototype.startPathfind=function(path){this._isPathfinding=true;this.forceMoveRoute(QPathfind.pathToRoute(this,path))};Game_Character.prototype.onPathfindComplete=function(){if(this._isChasing!==false){var chara=QPlus.getCharacter(this._isChasing);if(chara){this._isPathfinding=false;this.processRouteEnd();this._pathfind.requestRestart(5);
this.turnTowardCharacter(chara);return}else this._isChasing=false}this._isPathfinding=false;this._pathfind=null};Game_Character.prototype.clearPathfind=function(){this._pathfind=null;this._isChasing=false;if(this._isPathfinding)this.processRouteEnd()};const Alias_Game_Character_processRouteEnd=Game_Character.prototype.processRouteEnd;Game_Character.prototype.processRouteEnd=function(){Alias_Game_Character_processRouteEnd.call(this);if(this._isPathfinding)this.onPathfindComplete()};const Alias_Game_Character_isMoveRouteForcing=
Game_Character.prototype.isMoveRouteForcing;Game_Character.prototype.isMoveRouteForcing=function(){if(this._isPathfinding&&this._pathfind.options.breakable)return false;return Alias_Game_Character_isMoveRouteForcing.call(this)};const Alias_Game_Character_advanceMoveRouteIndex=Game_Character.prototype.advanceMoveRouteIndex;Game_Character.prototype.advanceMoveRouteIndex=function(){if(this._isPathfinding){var moveRoute=this._moveRoute;if(moveRoute&&(!this.isMovementSucceeded()&&this._pathfind.options.smart>
0)){this._isPathfinding=false;this.processRouteEnd();this._pathfind.requestRestart(2);return}}Alias_Game_Character_advanceMoveRouteIndex.call(this)};if(Imported.QMovement){const Alias_Scene_Map_updateDestination=Scene_Map.prototype.updateDestination;Scene_Map.prototype.updateDestination=function(){Alias_Scene_Map_updateDestination.call(this);if(!this.isMapTouchOk())$gamePlayer.clearMouseMove()};const Alias_Game_Player_requestMouseMove=Game_Player.prototype.requestMouseMove;Game_Player.prototype.requestMouseMove=
function(){if(this._pathfind&&!this._pathfind._completed){this._requestMouseMove=false;return}Alias_Game_Player_requestMouseMove.call(this)};const Alias_Game_Player_moveByMouse=Game_Player.prototype.moveByMouse;Game_Player.prototype.moveByMouse=function(x,y){if(!Alias_Game_Player_moveByMouse.call(this,x,y))return false;var half=QMovement.tileSize/2;var x2=x-half;var y2=y-half;var dx=Math.abs(this._px-x2);var dy=Math.abs(this._py-y2);if(dx+dy<this.optTiles()){this.clearMouseMove();return false}this.initPathfind(x2,
y2,{smart:2,earlyEnd:true,breakable:true,adjustEnd:true});$gameTemp.setPixelDestination(x,y);return true};const Alias_Game_Player_clearMouseMove=Game_Player.prototype.clearMouseMove;Game_Player.prototype.clearMouseMove=function(){if(this._movingWithMouse&&this._isPathfinding)this.clearPathfind();Alias_Game_Player_clearMouseMove.call(this)};Game_Player.prototype.onPathfindComplete=function(){Game_Character.prototype.onPathfindComplete.call(this);if(this._movingWithMouse)this.clearMouseMove()}}if(!_DASHONMOUSE)Game_Player.prototype.updateDashing=
function(){if(Imported.QMovement?this.startedMoving():this.isMoving())return;if(this.canMove()&&!this.isInVehicle()&&!$gameMap.isDashDisabled())this._dashing=this.isDashButtonPressed();else this._dashing=false};const Alias_Game_Event_setupPage=Game_Event.prototype.setupPage;Game_Event.prototype.setupPage=function(){if(this._isChasing!==false)this.clearPathfind();Alias_Game_Event_setupPage.call(this)}})();(()=>{let _MOUSEDECAY=60;let _CURSORIMGS={default:"icon/cursor.png",pointer:"icon/cursorHover.png"};const Alias_Game_Temp_initialize=Game_Temp.prototype.initialize;Game_Temp.prototype.initialize=function(){Alias_Game_Temp_initialize.call(this);this._CURSOROVERRIDES={}};const Alias_TouchInput_clear=TouchInput.clear;TouchInput.clear=function(){Alias_TouchInput_clear.call(this);this._cursor="default";this._cursorDecay=_MOUSEDECAY;this._cursorHidden=false;this.setCursor()};const Alias_TouchInput_update=
TouchInput.update;TouchInput.update=function(){Alias_TouchInput_update.call(this);if(_MOUSEDECAY>0)this.updateCursorDecay()};TouchInput.updateCursorDecay=function(){if(this._cursorDecay>0){if(this._cursorHidden)this.showCursor();this._cursorDecay--}else if(!this._cursorHidden)this.hideCursor()};const Alias_TouchInput__onMouseMove=TouchInput._onMouseMove;TouchInput._onMouseMove=function(event){Alias_TouchInput__onMouseMove.call(this,event);this._cursorDecay=_MOUSEDECAY};TouchInput.hideCursor=function(){this._cursorHidden=
true;document.body.style.cursor="none"};TouchInput.showCursor=function(){this._cursorHidden=false;this.setCursor()};TouchInput.setCursor=function(cursor){if(this._cursor===cursor)return;this._cursor=cursor||this._cursor;var overrides=$gameTemp?$gameTemp._CURSOROVERRIDES:{};var cursorImg=overrides[this._cursor]||_CURSORIMGS[this._cursor];if(cursorImg)document.body.style.cursor=`url('${cursorImg}'), ${this._cursor}`;else document.body.style.cursor=this._cursor};TouchInput.changeCursorImg=function(cursor,
img){if(!$gameTemp)return;$gameTemp._CURSOROVERRIDES[cursor]=img;this.setCursor()};const Alias_Scene_Base_update=Scene_Base.prototype.update;Scene_Base.prototype.update=function(){Alias_Scene_Base_update.call(this);if(this.mouseMoved())this.updateMouseCursor()};Scene_Base.prototype.updateMouseCursor=function(){var isPointing=false;if(this._windowLayer){var windows=this._windowLayer.children;for(var i=0;i<windows.length;i++)if(typeof windows[i].isPointing==="function"&&windows[i].isPointing()){isPointing=
true;break}}for(var i=0;i<this.children.length;i++)if(typeof this.children[i].isPointing==="function"&&this.children[i].isPointing()){isPointing=true;break}if(isPointing)TouchInput.setCursor("pointer");else TouchInput.setCursor("default")};Scene_Base.prototype.mouseMoved=function(){if(this._oldTouchX!==TouchInput.x||this._oldTouchY!==TouchInput.y){this._oldTouchX=TouchInput.x;this._oldTouchY=TouchInput.y;return true}return false};const Alias_Window_Selectable_initialize=Window_Selectable.prototype.initialize;
Window_Selectable.prototype.initialize=function(x,y,width,height){Alias_Window_Selectable_initialize.call(this,x,y,width,height);this._oldTouchX=TouchInput.x;this._oldTouchY=TouchInput.y;this._isPointing=false};Window_Selectable.prototype.isPointing=function(){return this.active&&this.isTouchedInsideFrame()&&this._isPointing};Window_Selectable.prototype.processTouch=function(){if(this.isOpenAndActive()){if(this.isTouchedInsideFrame()){var x=this.canvasToLocalX(TouchInput.x);var y=this.canvasToLocalY(TouchInput.y);
var hitIndex=this.hitTest(x,y);if(hitIndex>=0&&this.isCursorMovable()&&this.mouseMoved()){this._isPointing=true;var lastIndex=this.index();this.select(hitIndex);if(this.index()!==lastIndex)SoundManager.playCursor()}else if(hitIndex<0)if(y<this.padding)this._isPointing=true;else if(y>=this.height-this.padding)this._isPointing=true;else this._isPointing=false;if(TouchInput.isTriggered())if(hitIndex>=0){if(hitIndex===this.index()&&this.isTouchOkEnabled())this.processOk()}else if(y<this.padding)this.cursorUp();
else if(y>=this.height-this.padding)this.cursorDown()}if(TouchInput.isCancelled())if(this.isCancelEnabled())this.processCancel()}};Window_Selectable.prototype.mouseMoved=function(){if(this._oldTouchX!==TouchInput.x||this._oldTouchY!==TouchInput.y){this._oldTouchX=TouchInput.x;this._oldTouchY=TouchInput.y;return true}return false};Sprite_Button.prototype.isPointing=function(){return this.isActive()&&this.isButtonTouched()}})();
